import Xw from"worker-loader!./worker";/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const dd="137",as={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},ss={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},qw=0,Jg=1,Yw=2,Kg=1,Zw=2,ml=3,gl=0,Qt=1,os=2,Qg=1,wr=0,vl=1,ev=2,tv=3,nv=4,Jw=5,ls=100,Kw=101,Qw=102,iv=103,rv=104,eb=200,tb=201,nb=202,ib=203,av=204,sv=205,rb=206,ab=207,sb=208,ob=209,lb=210,cb=0,hb=1,ub=2,pd=3,fb=4,db=5,pb=6,mb=7,_h=0,gb=1,vb=2,br=0,yb=1,xb=2,_b=3,Mb=4,wb=5,ov=300,yl=301,xl=302,Mh=303,md=304,wh=306,gd=307,_l=1e3,Sn=1001,vd=1002,en=1003,lv=1004,cv=1005,dn=1006,bb=1007,bh=1008,Sr=1009,Sb=1010,Eb=1011,Ml=1012,Tb=1013,Sh=1014,Er=1015,cs=1016,Ab=1017,Lb=1018,hs=1020,Cb=1021,Rb=1022,pn=1023,Pb=1024,Db=1025,oa=1026,us=1027,Ib=1028,Fb=1029,Bb=1030,Ob=1031,Nb=1033,yd=33776,xd=33777,_d=33778,Md=33779,hv=35840,uv=35841,fv=35842,dv=35843,zb=36196,pv=37492,mv=37496,gv=37808,vv=37809,yv=37810,xv=37811,_v=37812,Mv=37813,wv=37814,bv=37815,Sv=37816,Ev=37817,Tv=37818,Av=37819,Lv=37820,Cv=37821,Rv=36492,Ub=2200,Gb=2201,Hb=2202,Eh=2300,Th=2301,wd=2302,fs=2400,ds=2401,Ah=2402,bd=2500,Pv=2501,Vb=0,Tr=3e3,Mt=3001,kb=3200,Wb=3201,ps=0,$b=1,Sd=7680,jb=519,wl=35044,Lh=35048,Dv="300 es",Ed=1035;class Ar{addEventListener(e,n){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(n)===-1&&i[e].push(n)}hasEventListener(e,n){if(this._listeners===void 0)return!1;const i=this._listeners;return i[e]!==void 0&&i[e].indexOf(n)!==-1}removeEventListener(e,n){if(this._listeners===void 0)return;const r=this._listeners[e];if(r!==void 0){const a=r.indexOf(n);a!==-1&&r.splice(a,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const i=this._listeners[e.type];if(i!==void 0){e.target=this;const r=i.slice(0);for(let a=0,s=r.length;a<s;a++)r[a].call(this,e);e.target=null}}}const cn=[];for(let t=0;t<256;t++)cn[t]=(t<16?"0":"")+t.toString(16);let Ch=1234567;const bl=Math.PI/180,Sl=180/Math.PI;function Zn(){const t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(cn[t&255]+cn[t>>8&255]+cn[t>>16&255]+cn[t>>24&255]+"-"+cn[e&255]+cn[e>>8&255]+"-"+cn[e>>16&15|64]+cn[e>>24&255]+"-"+cn[n&63|128]+cn[n>>8&255]+"-"+cn[n>>16&255]+cn[n>>24&255]+cn[i&255]+cn[i>>8&255]+cn[i>>16&255]+cn[i>>24&255]).toUpperCase()}function En(t,e,n){return Math.max(e,Math.min(n,t))}function Td(t,e){return(t%e+e)%e}function Xb(t,e,n,i,r){return i+(t-e)*(r-i)/(n-e)}function qb(t,e,n){return t!==e?(n-t)/(e-t):0}function El(t,e,n){return(1-n)*t+n*e}function Yb(t,e,n,i){return El(t,e,1-Math.exp(-n*i))}function Zb(t,e=1){return e-Math.abs(Td(t,e*2)-e)}function Jb(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e),t*t*(3-2*t))}function Kb(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e),t*t*t*(t*(t*6-15)+10))}function Qb(t,e){return t+Math.floor(Math.random()*(e-t+1))}function e1(t,e){return t+Math.random()*(e-t)}function t1(t){return t*(.5-Math.random())}function n1(t){return t!==void 0&&(Ch=t%2147483647),Ch=Ch*16807%2147483647,(Ch-1)/2147483646}function i1(t){return t*bl}function r1(t){return t*Sl}function Ad(t){return(t&t-1)==0&&t!==0}function Iv(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))}function Fv(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}function a1(t,e,n,i,r){const a=Math.cos,s=Math.sin,o=a(n/2),l=s(n/2),c=a((e+i)/2),h=s((e+i)/2),u=a((e-i)/2),f=s((e-i)/2),d=a((i-e)/2),p=s((i-e)/2);switch(r){case"XYX":t.set(o*h,l*u,l*f,o*c);break;case"YZY":t.set(l*f,o*h,l*u,o*c);break;case"ZXZ":t.set(l*u,l*f,o*h,o*c);break;case"XZX":t.set(o*h,l*p,l*d,o*c);break;case"YXY":t.set(l*d,o*h,l*p,o*c);break;case"ZYZ":t.set(l*p,l*d,o*h,o*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}var Ai=Object.freeze({__proto__:null,DEG2RAD:bl,RAD2DEG:Sl,generateUUID:Zn,clamp:En,euclideanModulo:Td,mapLinear:Xb,inverseLerp:qb,lerp:El,damp:Yb,pingpong:Zb,smoothstep:Jb,smootherstep:Kb,randInt:Qb,randFloat:e1,randFloatSpread:t1,seededRandom:n1,degToRad:i1,radToDeg:r1,isPowerOfTwo:Ad,ceilPowerOfTwo:Iv,floorPowerOfTwo:Fv,setQuaternionFromProperEuler:a1});class Te{constructor(e=0,n=0){this.x=e,this.y=n}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,n){return this.x=e,this.y=n,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,n){return n!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,n)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this}sub(e,n){return n!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,n)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const n=this.x,i=this.y,r=e.elements;return this.x=r[0]*n+r[3]*i+r[6],this.y=r[1]*n+r[4]*i+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this}clampScalar(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const n=this.x-e.x,i=this.y-e.y;return n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e}fromBufferAttribute(e,n,i){return i!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(n),this.y=e.getY(n),this}rotateAround(e,n){const i=Math.cos(n),r=Math.sin(n),a=this.x-e.x,s=this.y-e.y;return this.x=a*i-s*r+e.x,this.y=a*r+s*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}Te.prototype.isVector2=!0;class an{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,n,i,r,a,s,o,l,c){const h=this.elements;return h[0]=e,h[1]=r,h[2]=o,h[3]=n,h[4]=a,h[5]=l,h[6]=i,h[7]=s,h[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const n=this.elements,i=e.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],this}extractBasis(e,n,i){return e.setFromMatrix3Column(this,0),n.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const n=e.elements;return this.set(n[0],n[4],n[8],n[1],n[5],n[9],n[2],n[6],n[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,n){const i=e.elements,r=n.elements,a=this.elements,s=i[0],o=i[3],l=i[6],c=i[1],h=i[4],u=i[7],f=i[2],d=i[5],p=i[8],m=r[0],x=r[3],g=r[6],v=r[1],b=r[4],_=r[7],M=r[2],y=r[5],w=r[8];return a[0]=s*m+o*v+l*M,a[3]=s*x+o*b+l*y,a[6]=s*g+o*_+l*w,a[1]=c*m+h*v+u*M,a[4]=c*x+h*b+u*y,a[7]=c*g+h*_+u*w,a[2]=f*m+d*v+p*M,a[5]=f*x+d*b+p*y,a[8]=f*g+d*_+p*w,this}multiplyScalar(e){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=e,n[4]*=e,n[7]*=e,n[2]*=e,n[5]*=e,n[8]*=e,this}determinant(){const e=this.elements,n=e[0],i=e[1],r=e[2],a=e[3],s=e[4],o=e[5],l=e[6],c=e[7],h=e[8];return n*s*h-n*o*c-i*a*h+i*o*l+r*a*c-r*s*l}invert(){const e=this.elements,n=e[0],i=e[1],r=e[2],a=e[3],s=e[4],o=e[5],l=e[6],c=e[7],h=e[8],u=h*s-o*c,f=o*l-h*a,d=c*a-s*l,p=n*u+i*f+r*d;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const m=1/p;return e[0]=u*m,e[1]=(r*c-h*i)*m,e[2]=(o*i-r*s)*m,e[3]=f*m,e[4]=(h*n-r*l)*m,e[5]=(r*a-o*n)*m,e[6]=d*m,e[7]=(i*l-c*n)*m,e[8]=(s*n-i*a)*m,this}transpose(){let e;const n=this.elements;return e=n[1],n[1]=n[3],n[3]=e,e=n[2],n[2]=n[6],n[6]=e,e=n[5],n[5]=n[7],n[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const n=this.elements;return e[0]=n[0],e[1]=n[3],e[2]=n[6],e[3]=n[1],e[4]=n[4],e[5]=n[7],e[6]=n[2],e[7]=n[5],e[8]=n[8],this}setUvTransform(e,n,i,r,a,s,o){const l=Math.cos(a),c=Math.sin(a);return this.set(i*l,i*c,-i*(l*s+c*o)+s+e,-r*c,r*l,-r*(-c*s+l*o)+o+n,0,0,1),this}scale(e,n){const i=this.elements;return i[0]*=e,i[3]*=e,i[6]*=e,i[1]*=n,i[4]*=n,i[7]*=n,this}rotate(e){const n=Math.cos(e),i=Math.sin(e),r=this.elements,a=r[0],s=r[3],o=r[6],l=r[1],c=r[4],h=r[7];return r[0]=n*a+i*l,r[3]=n*s+i*c,r[6]=n*o+i*h,r[1]=-i*a+n*l,r[4]=-i*s+n*c,r[7]=-i*o+n*h,this}translate(e,n){const i=this.elements;return i[0]+=e*i[2],i[3]+=e*i[5],i[6]+=e*i[8],i[1]+=n*i[2],i[4]+=n*i[5],i[7]+=n*i[8],this}equals(e){const n=this.elements,i=e.elements;for(let r=0;r<9;r++)if(n[r]!==i[r])return!1;return!0}fromArray(e,n=0){for(let i=0;i<9;i++)this.elements[i]=e[i+n];return this}toArray(e=[],n=0){const i=this.elements;return e[n]=i[0],e[n+1]=i[1],e[n+2]=i[2],e[n+3]=i[3],e[n+4]=i[4],e[n+5]=i[5],e[n+6]=i[6],e[n+7]=i[7],e[n+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}an.prototype.isMatrix3=!0;function Bv(t){for(let e=t.length-1;e>=0;--e)if(t[e]>65535)return!0;return!1}function Tl(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}const Ov={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},li={h:0,s:0,l:0},Rh={h:0,s:0,l:0};function Ld(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+(e-t)*6*n:n<1/2?e:n<2/3?t+(e-t)*6*(2/3-n):t}function ms(t){return t<.04045?t*.0773993808:Math.pow(t*.9478672986+.0521327014,2.4)}function Cd(t){return t<.0031308?t*12.92:1.055*Math.pow(t,.41666)-.055}class We{constructor(e,n,i){return n===void 0&&i===void 0?this.set(e):this.setRGB(e,n,i)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,this}setRGB(e,n,i){return this.r=e,this.g=n,this.b=i,this}setHSL(e,n,i){if(e=Td(e,1),n=En(n,0,1),i=En(i,0,1),n===0)this.r=this.g=this.b=i;else{const r=i<=.5?i*(1+n):i+n-i*n,a=2*i-r;this.r=Ld(a,r,e+1/3),this.g=Ld(a,r,e),this.b=Ld(a,r,e-1/3)}return this}setStyle(e){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let r;const a=i[1],s=i[2];switch(a){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,n(r[4]),this;if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,n(r[4]),this;break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s)){const o=parseFloat(r[1])/360,l=parseInt(r[2],10)/100,c=parseInt(r[3],10)/100;return n(r[4]),this.setHSL(o,l,c)}break}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=i[1],a=r.length;if(a===3)return this.r=parseInt(r.charAt(0)+r.charAt(0),16)/255,this.g=parseInt(r.charAt(1)+r.charAt(1),16)/255,this.b=parseInt(r.charAt(2)+r.charAt(2),16)/255,this;if(a===6)return this.r=parseInt(r.charAt(0)+r.charAt(1),16)/255,this.g=parseInt(r.charAt(2)+r.charAt(3),16)/255,this.b=parseInt(r.charAt(4)+r.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this}setColorName(e){const n=Ov[e.toLowerCase()];return n!==void 0?this.setHex(n):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=ms(e.r),this.g=ms(e.g),this.b=ms(e.b),this}copyLinearToSRGB(e){return this.r=Cd(e.r),this.g=Cd(e.g),this.b=Cd(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return this.r*255<<16^this.g*255<<8^this.b*255<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){const n=this.r,i=this.g,r=this.b,a=Math.max(n,i,r),s=Math.min(n,i,r);let o,l;const c=(s+a)/2;if(s===a)o=0,l=0;else{const h=a-s;switch(l=c<=.5?h/(a+s):h/(2-a-s),a){case n:o=(i-r)/h+(i<r?6:0);break;case i:o=(r-n)/h+2;break;case r:o=(n-i)/h+4;break}o/=6}return e.h=o,e.s=l,e.l=c,e}getStyle(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"}offsetHSL(e,n,i){return this.getHSL(li),li.h+=e,li.s+=n,li.l+=i,this.setHSL(li.h,li.s,li.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,n){return this.r=e.r+n.r,this.g=e.g+n.g,this.b=e.b+n.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,n){return this.r+=(e.r-this.r)*n,this.g+=(e.g-this.g)*n,this.b+=(e.b-this.b)*n,this}lerpColors(e,n,i){return this.r=e.r+(n.r-e.r)*i,this.g=e.g+(n.g-e.g)*i,this.b=e.b+(n.b-e.b)*i,this}lerpHSL(e,n){this.getHSL(li),e.getHSL(Rh);const i=El(li.h,Rh.h,n),r=El(li.s,Rh.s,n),a=El(li.l,Rh.l,n);return this.setHSL(i,r,a),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,n=0){return this.r=e[n],this.g=e[n+1],this.b=e[n+2],this}toArray(e=[],n=0){return e[n]=this.r,e[n+1]=this.g,e[n+2]=this.b,e}fromBufferAttribute(e,n){return this.r=e.getX(n),this.g=e.getY(n),this.b=e.getZ(n),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}We.NAMES=Ov;We.prototype.isColor=!0;We.prototype.r=1;We.prototype.g=1;We.prototype.b=1;let gs;class la{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement=="undefined")return e.src;let n;if(e instanceof HTMLCanvasElement)n=e;else{gs===void 0&&(gs=Tl("canvas")),gs.width=e.width,gs.height=e.height;const i=gs.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),n=gs}return n.width>2048||n.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),n.toDataURL("image/jpeg",.6)):n.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&e instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap){const n=Tl("canvas");n.width=e.width,n.height=e.height;const i=n.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const r=i.getImageData(0,0,e.width,e.height),a=r.data;for(let s=0;s<a.length;s++)a[s]=ms(a[s]/255)*255;return i.putImageData(r,0,0),n}else if(e.data){const n=e.data.slice(0);for(let i=0;i<n.length;i++)n instanceof Uint8Array||n instanceof Uint8ClampedArray?n[i]=Math.floor(ms(n[i]/255)*255):n[i]=ms(n[i]);return{data:n,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let s1=0;class Xt extends Ar{constructor(e=Xt.DEFAULT_IMAGE,n=Xt.DEFAULT_MAPPING,i=Sn,r=Sn,a=dn,s=bh,o=pn,l=Sr,c=1,h=Tr){super();Object.defineProperty(this,"id",{value:s1++}),this.uuid=Zn(),this.name="",this.image=e,this.mipmaps=[],this.mapping=n,this.wrapS=i,this.wrapT=r,this.magFilter=a,this.minFilter=s,this.anisotropy=c,this.format=o,this.internalFormat=null,this.type=l,this.offset=new Te(0,0),this.repeat=new Te(1,1),this.center=new Te(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new an,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this}toJSON(e){const n=e===void 0||typeof e=="string";if(!n&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==void 0){const r=this.image;if(r.uuid===void 0&&(r.uuid=Zn()),!n&&e.images[r.uuid]===void 0){let a;if(Array.isArray(r)){a=[];for(let s=0,o=r.length;s<o;s++)r[s].isDataTexture?a.push(Rd(r[s].image)):a.push(Rd(r[s]))}else a=Rd(r);e.images[r.uuid]={uuid:r.uuid,url:a}}i.image=r.uuid}return JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),n||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==ov)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case _l:e.x=e.x-Math.floor(e.x);break;case Sn:e.x=e.x<0?0:1;break;case vd:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case _l:e.y=e.y-Math.floor(e.y);break;case Sn:e.y=e.y<0?0:1;break;case vd:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&this.version++}}Xt.DEFAULT_IMAGE=void 0;Xt.DEFAULT_MAPPING=ov;Xt.prototype.isTexture=!0;function Rd(t){return typeof HTMLImageElement!="undefined"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&t instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&t instanceof ImageBitmap?la.getDataURL(t):t.data?{data:Array.prototype.slice.call(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}class yt{constructor(e=0,n=0,i=0,r=1){this.x=e,this.y=n,this.z=i,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,n,i,r){return this.x=e,this.y=n,this.z=i,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;case 3:this.w=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e,n){return n!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,n)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this.w=e.w+n.w,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this.w+=e.w*n,this}sub(e,n){return n!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,n)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this.w=e.w-n.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const n=this.x,i=this.y,r=this.z,a=this.w,s=e.elements;return this.x=s[0]*n+s[4]*i+s[8]*r+s[12]*a,this.y=s[1]*n+s[5]*i+s[9]*r+s[13]*a,this.z=s[2]*n+s[6]*i+s[10]*r+s[14]*a,this.w=s[3]*n+s[7]*i+s[11]*r+s[15]*a,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const n=Math.sqrt(1-e.w*e.w);return n<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/n,this.y=e.y/n,this.z=e.z/n),this}setAxisAngleFromRotationMatrix(e){let n,i,r,a;const s=.01,o=.1,l=e.elements,c=l[0],h=l[4],u=l[8],f=l[1],d=l[5],p=l[9],m=l[2],x=l[6],g=l[10];if(Math.abs(h-f)<s&&Math.abs(u-m)<s&&Math.abs(p-x)<s){if(Math.abs(h+f)<o&&Math.abs(u+m)<o&&Math.abs(p+x)<o&&Math.abs(c+d+g-3)<o)return this.set(1,0,0,0),this;n=Math.PI;const b=(c+1)/2,_=(d+1)/2,M=(g+1)/2,y=(h+f)/4,w=(u+m)/4,E=(p+x)/4;return b>_&&b>M?b<s?(i=0,r=.707106781,a=.707106781):(i=Math.sqrt(b),r=y/i,a=w/i):_>M?_<s?(i=.707106781,r=0,a=.707106781):(r=Math.sqrt(_),i=y/r,a=E/r):M<s?(i=.707106781,r=.707106781,a=0):(a=Math.sqrt(M),i=w/a,r=E/a),this.set(i,r,a,n),this}let v=Math.sqrt((x-p)*(x-p)+(u-m)*(u-m)+(f-h)*(f-h));return Math.abs(v)<.001&&(v=1),this.x=(x-p)/v,this.y=(u-m)/v,this.z=(f-h)/v,this.w=Math.acos((c+d+g-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this.z=Math.max(e.z,Math.min(n.z,this.z)),this.w=Math.max(e.w,Math.min(n.w,this.w)),this}clampScalar(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this.z=Math.max(e,Math.min(n,this.z)),this.w=Math.max(e,Math.min(n,this.w)),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this.w+=(e.w-this.w)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this.z=e.z+(n.z-e.z)*i,this.w=e.w+(n.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this.z=e[n+2],this.w=e[n+3],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e[n+3]=this.w,e}fromBufferAttribute(e,n,i){return i!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this.w=e.getW(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}yt.prototype.isVector4=!0;class Jn extends Ar{constructor(e,n,i={}){super();this.width=e,this.height=n,this.depth=1,this.scissor=new yt(0,0,e,n),this.scissorTest=!1,this.viewport=new yt(0,0,e,n),this.texture=new Xt(void 0,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.isRenderTargetTexture=!0,this.texture.image={width:e,height:n,depth:1},this.texture.generateMipmaps=i.generateMipmaps!==void 0?i.generateMipmaps:!1,this.texture.internalFormat=i.internalFormat!==void 0?i.internalFormat:null,this.texture.minFilter=i.minFilter!==void 0?i.minFilter:dn,this.depthBuffer=i.depthBuffer!==void 0?i.depthBuffer:!0,this.stencilBuffer=i.stencilBuffer!==void 0?i.stencilBuffer:!1,this.depthTexture=i.depthTexture!==void 0?i.depthTexture:null}setTexture(e){e.image={width:this.width,height:this.height,depth:this.depth},this.texture=e}setSize(e,n,i=1){(this.width!==e||this.height!==n||this.depth!==i)&&(this.width=e,this.height=n,this.depth=i,this.texture.image.width=e,this.texture.image.height=n,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,e,n),this.scissor.set(0,0,e,n)}clone(){return new this.constructor().copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.image=Object.assign({},e.texture.image),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}Jn.prototype.isWebGLRenderTarget=!0;class o1 extends Jn{constructor(e,n,i){super(e,n);const r=this.texture;this.texture=[];for(let a=0;a<i;a++)this.texture[a]=r.clone()}setSize(e,n,i=1){if(this.width!==e||this.height!==n||this.depth!==i){this.width=e,this.height=n,this.depth=i;for(let r=0,a=this.texture.length;r<a;r++)this.texture[r].image.width=e,this.texture[r].image.height=n,this.texture[r].image.depth=i;this.dispose()}return this.viewport.set(0,0,e,n),this.scissor.set(0,0,e,n),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this.texture.length=0;for(let n=0,i=e.texture.length;n<i;n++)this.texture[n]=e.texture[n].clone();return this}}o1.prototype.isWebGLMultipleRenderTargets=!0;class Pd extends Jn{constructor(e,n,i={}){super(e,n,i);this.samples=4,this.ignoreDepthForMultisampleCopy=i.ignoreDepth!==void 0?i.ignoreDepth:!0,this.useRenderToTexture=i.useRenderToTexture!==void 0?i.useRenderToTexture:!1,this.useRenderbuffer=this.useRenderToTexture===!1}copy(e){return super.copy.call(this,e),this.samples=e.samples,this.useRenderToTexture=e.useRenderToTexture,this.useRenderbuffer=e.useRenderbuffer,this}}Pd.prototype.isWebGLMultisampleRenderTarget=!0;class qt{constructor(e=0,n=0,i=0,r=1){this._x=e,this._y=n,this._z=i,this._w=r}static slerp(e,n,i,r){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),i.slerpQuaternions(e,n,r)}static slerpFlat(e,n,i,r,a,s,o){let l=i[r+0],c=i[r+1],h=i[r+2],u=i[r+3];const f=a[s+0],d=a[s+1],p=a[s+2],m=a[s+3];if(o===0){e[n+0]=l,e[n+1]=c,e[n+2]=h,e[n+3]=u;return}if(o===1){e[n+0]=f,e[n+1]=d,e[n+2]=p,e[n+3]=m;return}if(u!==m||l!==f||c!==d||h!==p){let x=1-o;const g=l*f+c*d+h*p+u*m,v=g>=0?1:-1,b=1-g*g;if(b>Number.EPSILON){const M=Math.sqrt(b),y=Math.atan2(M,g*v);x=Math.sin(x*y)/M,o=Math.sin(o*y)/M}const _=o*v;if(l=l*x+f*_,c=c*x+d*_,h=h*x+p*_,u=u*x+m*_,x===1-o){const M=1/Math.sqrt(l*l+c*c+h*h+u*u);l*=M,c*=M,h*=M,u*=M}}e[n]=l,e[n+1]=c,e[n+2]=h,e[n+3]=u}static multiplyQuaternionsFlat(e,n,i,r,a,s){const o=i[r],l=i[r+1],c=i[r+2],h=i[r+3],u=a[s],f=a[s+1],d=a[s+2],p=a[s+3];return e[n]=o*p+h*u+l*d-c*f,e[n+1]=l*p+h*f+c*u-o*d,e[n+2]=c*p+h*d+o*f-l*u,e[n+3]=h*p-o*u-l*f-c*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,n,i,r){return this._x=e,this._y=n,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,n){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const i=e._x,r=e._y,a=e._z,s=e._order,o=Math.cos,l=Math.sin,c=o(i/2),h=o(r/2),u=o(a/2),f=l(i/2),d=l(r/2),p=l(a/2);switch(s){case"XYZ":this._x=f*h*u+c*d*p,this._y=c*d*u-f*h*p,this._z=c*h*p+f*d*u,this._w=c*h*u-f*d*p;break;case"YXZ":this._x=f*h*u+c*d*p,this._y=c*d*u-f*h*p,this._z=c*h*p-f*d*u,this._w=c*h*u+f*d*p;break;case"ZXY":this._x=f*h*u-c*d*p,this._y=c*d*u+f*h*p,this._z=c*h*p+f*d*u,this._w=c*h*u-f*d*p;break;case"ZYX":this._x=f*h*u-c*d*p,this._y=c*d*u+f*h*p,this._z=c*h*p-f*d*u,this._w=c*h*u+f*d*p;break;case"YZX":this._x=f*h*u+c*d*p,this._y=c*d*u+f*h*p,this._z=c*h*p-f*d*u,this._w=c*h*u-f*d*p;break;case"XZY":this._x=f*h*u-c*d*p,this._y=c*d*u-f*h*p,this._z=c*h*p+f*d*u,this._w=c*h*u+f*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return n!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,n){const i=n/2,r=Math.sin(i);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const n=e.elements,i=n[0],r=n[4],a=n[8],s=n[1],o=n[5],l=n[9],c=n[2],h=n[6],u=n[10],f=i+o+u;if(f>0){const d=.5/Math.sqrt(f+1);this._w=.25/d,this._x=(h-l)*d,this._y=(a-c)*d,this._z=(s-r)*d}else if(i>o&&i>u){const d=2*Math.sqrt(1+i-o-u);this._w=(h-l)/d,this._x=.25*d,this._y=(r+s)/d,this._z=(a+c)/d}else if(o>u){const d=2*Math.sqrt(1+o-i-u);this._w=(a-c)/d,this._x=(r+s)/d,this._y=.25*d,this._z=(l+h)/d}else{const d=2*Math.sqrt(1+u-i-o);this._w=(s-r)/d,this._x=(a+c)/d,this._y=(l+h)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(e,n){let i=e.dot(n)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*n.z-e.z*n.y,this._y=e.z*n.x-e.x*n.z,this._z=e.x*n.y-e.y*n.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(En(this.dot(e),-1,1)))}rotateTowards(e,n){const i=this.angleTo(e);if(i===0)return this;const r=Math.min(1,n/i);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,n){return n!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,n)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,n){const i=e._x,r=e._y,a=e._z,s=e._w,o=n._x,l=n._y,c=n._z,h=n._w;return this._x=i*h+s*o+r*c-a*l,this._y=r*h+s*l+a*o-i*c,this._z=a*h+s*c+i*l-r*o,this._w=s*h-i*o-r*l-a*c,this._onChangeCallback(),this}slerp(e,n){if(n===0)return this;if(n===1)return this.copy(e);const i=this._x,r=this._y,a=this._z,s=this._w;let o=s*e._w+i*e._x+r*e._y+a*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=s,this._x=i,this._y=r,this._z=a,this;const l=1-o*o;if(l<=Number.EPSILON){const d=1-n;return this._w=d*s+n*this._w,this._x=d*i+n*this._x,this._y=d*r+n*this._y,this._z=d*a+n*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),h=Math.atan2(c,o),u=Math.sin((1-n)*h)/c,f=Math.sin(n*h)/c;return this._w=s*u+this._w*f,this._x=i*u+this._x*f,this._y=r*u+this._y*f,this._z=a*u+this._z*f,this._onChangeCallback(),this}slerpQuaternions(e,n,i){return this.copy(e).slerp(n,i)}random(){const e=Math.random(),n=Math.sqrt(1-e),i=Math.sqrt(e),r=2*Math.PI*Math.random(),a=2*Math.PI*Math.random();return this.set(n*Math.cos(r),i*Math.sin(a),i*Math.cos(a),n*Math.sin(r))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,n=0){return this._x=e[n],this._y=e[n+1],this._z=e[n+2],this._w=e[n+3],this._onChangeCallback(),this}toArray(e=[],n=0){return e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._w,e}fromBufferAttribute(e,n){return this._x=e.getX(n),this._y=e.getY(n),this._z=e.getZ(n),this._w=e.getW(n),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}qt.prototype.isQuaternion=!0;class k{constructor(e=0,n=0,i=0){this.x=e,this.y=n,this.z=i}set(e,n,i){return i===void 0&&(i=this.z),this.x=e,this.y=n,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,n){return n!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,n)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this}sub(e,n){return n!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,n)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this}multiply(e,n){return n!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,n)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,n){return this.x=e.x*n.x,this.y=e.y*n.y,this.z=e.z*n.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(Nv.setFromEuler(e))}applyAxisAngle(e,n){return this.applyQuaternion(Nv.setFromAxisAngle(e,n))}applyMatrix3(e){const n=this.x,i=this.y,r=this.z,a=e.elements;return this.x=a[0]*n+a[3]*i+a[6]*r,this.y=a[1]*n+a[4]*i+a[7]*r,this.z=a[2]*n+a[5]*i+a[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const n=this.x,i=this.y,r=this.z,a=e.elements,s=1/(a[3]*n+a[7]*i+a[11]*r+a[15]);return this.x=(a[0]*n+a[4]*i+a[8]*r+a[12])*s,this.y=(a[1]*n+a[5]*i+a[9]*r+a[13])*s,this.z=(a[2]*n+a[6]*i+a[10]*r+a[14])*s,this}applyQuaternion(e){const n=this.x,i=this.y,r=this.z,a=e.x,s=e.y,o=e.z,l=e.w,c=l*n+s*r-o*i,h=l*i+o*n-a*r,u=l*r+a*i-s*n,f=-a*n-s*i-o*r;return this.x=c*l+f*-a+h*-o-u*-s,this.y=h*l+f*-s+u*-a-c*-o,this.z=u*l+f*-o+c*-s-h*-a,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const n=this.x,i=this.y,r=this.z,a=e.elements;return this.x=a[0]*n+a[4]*i+a[8]*r,this.y=a[1]*n+a[5]*i+a[9]*r,this.z=a[2]*n+a[6]*i+a[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this.z=Math.max(e.z,Math.min(n.z,this.z)),this}clampScalar(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this.z=Math.max(e,Math.min(n,this.z)),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this.z=e.z+(n.z-e.z)*i,this}cross(e,n){return n!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,n)):this.crossVectors(this,e)}crossVectors(e,n){const i=e.x,r=e.y,a=e.z,s=n.x,o=n.y,l=n.z;return this.x=r*l-a*o,this.y=a*s-i*l,this.z=i*o-r*s,this}projectOnVector(e){const n=e.lengthSq();if(n===0)return this.set(0,0,0);const i=e.dot(this)/n;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return Dd.copy(this).projectOnVector(e),this.sub(Dd)}reflect(e){return this.sub(Dd.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const n=Math.sqrt(this.lengthSq()*e.lengthSq());if(n===0)return Math.PI/2;const i=this.dot(e)/n;return Math.acos(En(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const n=this.x-e.x,i=this.y-e.y,r=this.z-e.z;return n*n+i*i+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,n,i){const r=Math.sin(n)*e;return this.x=r*Math.sin(i),this.y=Math.cos(n)*e,this.z=r*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,n,i){return this.x=e*Math.sin(n),this.y=i,this.z=e*Math.cos(n),this}setFromMatrixPosition(e){const n=e.elements;return this.x=n[12],this.y=n[13],this.z=n[14],this}setFromMatrixScale(e){const n=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=n,this.y=i,this.z=r,this}setFromMatrixColumn(e,n){return this.fromArray(e.elements,n*4)}setFromMatrix3Column(e,n){return this.fromArray(e.elements,n*3)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this.z=e[n+2],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e}fromBufferAttribute(e,n,i){return i!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,n=Math.random()*Math.PI*2,i=Math.sqrt(1-e**2);return this.x=i*Math.cos(n),this.y=i*Math.sin(n),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}k.prototype.isVector3=!0;const Dd=new k,Nv=new qt;class ci{constructor(e=new k(1/0,1/0,1/0),n=new k(-1/0,-1/0,-1/0)){this.min=e,this.max=n}set(e,n){return this.min.copy(e),this.max.copy(n),this}setFromArray(e){let n=1/0,i=1/0,r=1/0,a=-1/0,s=-1/0,o=-1/0;for(let l=0,c=e.length;l<c;l+=3){const h=e[l],u=e[l+1],f=e[l+2];h<n&&(n=h),u<i&&(i=u),f<r&&(r=f),h>a&&(a=h),u>s&&(s=u),f>o&&(o=f)}return this.min.set(n,i,r),this.max.set(a,s,o),this}setFromBufferAttribute(e){let n=1/0,i=1/0,r=1/0,a=-1/0,s=-1/0,o=-1/0;for(let l=0,c=e.count;l<c;l++){const h=e.getX(l),u=e.getY(l),f=e.getZ(l);h<n&&(n=h),u<i&&(i=u),f<r&&(r=f),h>a&&(a=h),u>s&&(s=u),f>o&&(o=f)}return this.min.set(n,i,r),this.max.set(a,s,o),this}setFromPoints(e){this.makeEmpty();for(let n=0,i=e.length;n<i;n++)this.expandByPoint(e[n]);return this}setFromCenterAndSize(e,n){const i=ca.copy(n).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,n=!1){return this.makeEmpty(),this.expandByObject(e,n)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,n=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0)if(n&&i.attributes!=null&&i.attributes.position!==void 0){const a=i.attributes.position;for(let s=0,o=a.count;s<o;s++)ca.fromBufferAttribute(a,s).applyMatrix4(e.matrixWorld),this.expandByPoint(ca)}else i.boundingBox===null&&i.computeBoundingBox(),Id.copy(i.boundingBox),Id.applyMatrix4(e.matrixWorld),this.union(Id);const r=e.children;for(let a=0,s=r.length;a<s;a++)this.expandByObject(r[a],n);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,n){return n.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,ca),ca.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let n,i;return e.normal.x>0?(n=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(n=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(n+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(n+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(n+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(n+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),n<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Al),Ph.subVectors(this.max,Al),vs.subVectors(e.a,Al),ys.subVectors(e.b,Al),xs.subVectors(e.c,Al),Lr.subVectors(ys,vs),Cr.subVectors(xs,ys),ha.subVectors(vs,xs);let n=[0,-Lr.z,Lr.y,0,-Cr.z,Cr.y,0,-ha.z,ha.y,Lr.z,0,-Lr.x,Cr.z,0,-Cr.x,ha.z,0,-ha.x,-Lr.y,Lr.x,0,-Cr.y,Cr.x,0,-ha.y,ha.x,0];return!Fd(n,vs,ys,xs,Ph)||(n=[1,0,0,0,1,0,0,0,1],!Fd(n,vs,ys,xs,Ph))?!1:(Dh.crossVectors(Lr,Cr),n=[Dh.x,Dh.y,Dh.z],Fd(n,vs,ys,xs,Ph))}clampPoint(e,n){return n.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return ca.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(ca).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Xi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Xi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Xi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Xi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Xi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Xi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Xi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Xi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Xi),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}ci.prototype.isBox3=!0;const Xi=[new k,new k,new k,new k,new k,new k,new k,new k],ca=new k,Id=new ci,vs=new k,ys=new k,xs=new k,Lr=new k,Cr=new k,ha=new k,Al=new k,Ph=new k,Dh=new k,ua=new k;function Fd(t,e,n,i,r){for(let a=0,s=t.length-3;a<=s;a+=3){ua.fromArray(t,a);const o=r.x*Math.abs(ua.x)+r.y*Math.abs(ua.y)+r.z*Math.abs(ua.z),l=e.dot(ua),c=n.dot(ua),h=i.dot(ua);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>o)return!1}return!0}const l1=new ci,zv=new k,Ih=new k,Bd=new k;class _s{constructor(e=new k,n=-1){this.center=e,this.radius=n}set(e,n){return this.center.copy(e),this.radius=n,this}setFromPoints(e,n){const i=this.center;n!==void 0?i.copy(n):l1.setFromPoints(e).getCenter(i);let r=0;for(let a=0,s=e.length;a<s;a++)r=Math.max(r,i.distanceToSquared(e[a]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const n=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=n*n}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,n){const i=this.center.distanceToSquared(e);return n.copy(e),i>this.radius*this.radius&&(n.sub(this.center).normalize(),n.multiplyScalar(this.radius).add(this.center)),n}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){Bd.subVectors(e,this.center);const n=Bd.lengthSq();if(n>this.radius*this.radius){const i=Math.sqrt(n),r=(i-this.radius)*.5;this.center.add(Bd.multiplyScalar(r/i)),this.radius+=r}return this}union(e){return this.center.equals(e.center)===!0?Ih.set(0,0,1).multiplyScalar(e.radius):Ih.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(zv.copy(e.center).add(Ih)),this.expandByPoint(zv.copy(e.center).sub(Ih)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const qi=new k,Od=new k,Fh=new k,Rr=new k,Nd=new k,Bh=new k,zd=new k;class Ms{constructor(e=new k,n=new k(0,0,-1)){this.origin=e,this.direction=n}set(e,n){return this.origin.copy(e),this.direction.copy(n),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,n){return n.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,qi)),this}closestPointToPoint(e,n){n.subVectors(e,this.origin);const i=n.dot(this.direction);return i<0?n.copy(this.origin):n.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const n=qi.subVectors(e,this.origin).dot(this.direction);return n<0?this.origin.distanceToSquared(e):(qi.copy(this.direction).multiplyScalar(n).add(this.origin),qi.distanceToSquared(e))}distanceSqToSegment(e,n,i,r){Od.copy(e).add(n).multiplyScalar(.5),Fh.copy(n).sub(e).normalize(),Rr.copy(this.origin).sub(Od);const a=e.distanceTo(n)*.5,s=-this.direction.dot(Fh),o=Rr.dot(this.direction),l=-Rr.dot(Fh),c=Rr.lengthSq(),h=Math.abs(1-s*s);let u,f,d,p;if(h>0)if(u=s*l-o,f=s*o-l,p=a*h,u>=0)if(f>=-p)if(f<=p){const m=1/h;u*=m,f*=m,d=u*(u+s*f+2*o)+f*(s*u+f+2*l)+c}else f=a,u=Math.max(0,-(s*f+o)),d=-u*u+f*(f+2*l)+c;else f=-a,u=Math.max(0,-(s*f+o)),d=-u*u+f*(f+2*l)+c;else f<=-p?(u=Math.max(0,-(-s*a+o)),f=u>0?-a:Math.min(Math.max(-a,-l),a),d=-u*u+f*(f+2*l)+c):f<=p?(u=0,f=Math.min(Math.max(-a,-l),a),d=f*(f+2*l)+c):(u=Math.max(0,-(s*a+o)),f=u>0?a:Math.min(Math.max(-a,-l),a),d=-u*u+f*(f+2*l)+c);else f=s>0?-a:a,u=Math.max(0,-(s*f+o)),d=-u*u+f*(f+2*l)+c;return i&&i.copy(this.direction).multiplyScalar(u).add(this.origin),r&&r.copy(Fh).multiplyScalar(f).add(Od),d}intersectSphere(e,n){qi.subVectors(e.center,this.origin);const i=qi.dot(this.direction),r=qi.dot(qi)-i*i,a=e.radius*e.radius;if(r>a)return null;const s=Math.sqrt(a-r),o=i-s,l=i+s;return o<0&&l<0?null:o<0?this.at(l,n):this.at(o,n)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const n=e.normal.dot(this.direction);if(n===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/n;return i>=0?i:null}intersectPlane(e,n){const i=this.distanceToPlane(e);return i===null?null:this.at(i,n)}intersectsPlane(e){const n=e.distanceToPoint(this.origin);return n===0||e.normal.dot(this.direction)*n<0}intersectBox(e,n){let i,r,a,s,o,l;const c=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,f=this.origin;return c>=0?(i=(e.min.x-f.x)*c,r=(e.max.x-f.x)*c):(i=(e.max.x-f.x)*c,r=(e.min.x-f.x)*c),h>=0?(a=(e.min.y-f.y)*h,s=(e.max.y-f.y)*h):(a=(e.max.y-f.y)*h,s=(e.min.y-f.y)*h),i>s||a>r||((a>i||i!==i)&&(i=a),(s<r||r!==r)&&(r=s),u>=0?(o=(e.min.z-f.z)*u,l=(e.max.z-f.z)*u):(o=(e.max.z-f.z)*u,l=(e.min.z-f.z)*u),i>l||o>r)||((o>i||i!==i)&&(i=o),(l<r||r!==r)&&(r=l),r<0)?null:this.at(i>=0?i:r,n)}intersectsBox(e){return this.intersectBox(e,qi)!==null}intersectTriangle(e,n,i,r,a){Nd.subVectors(n,e),Bh.subVectors(i,e),zd.crossVectors(Nd,Bh);let s=this.direction.dot(zd),o;if(s>0){if(r)return null;o=1}else if(s<0)o=-1,s=-s;else return null;Rr.subVectors(this.origin,e);const l=o*this.direction.dot(Bh.crossVectors(Rr,Bh));if(l<0)return null;const c=o*this.direction.dot(Nd.cross(Rr));if(c<0||l+c>s)return null;const h=-o*Rr.dot(zd);return h<0?null:this.at(h/s,a)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Fe{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,n,i,r,a,s,o,l,c,h,u,f,d,p,m,x){const g=this.elements;return g[0]=e,g[4]=n,g[8]=i,g[12]=r,g[1]=a,g[5]=s,g[9]=o,g[13]=l,g[2]=c,g[6]=h,g[10]=u,g[14]=f,g[3]=d,g[7]=p,g[11]=m,g[15]=x,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Fe().fromArray(this.elements)}copy(e){const n=this.elements,i=e.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],n[9]=i[9],n[10]=i[10],n[11]=i[11],n[12]=i[12],n[13]=i[13],n[14]=i[14],n[15]=i[15],this}copyPosition(e){const n=this.elements,i=e.elements;return n[12]=i[12],n[13]=i[13],n[14]=i[14],this}setFromMatrix3(e){const n=e.elements;return this.set(n[0],n[3],n[6],0,n[1],n[4],n[7],0,n[2],n[5],n[8],0,0,0,0,1),this}extractBasis(e,n,i){return e.setFromMatrixColumn(this,0),n.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,n,i){return this.set(e.x,n.x,i.x,0,e.y,n.y,i.y,0,e.z,n.z,i.z,0,0,0,0,1),this}extractRotation(e){const n=this.elements,i=e.elements,r=1/ws.setFromMatrixColumn(e,0).length(),a=1/ws.setFromMatrixColumn(e,1).length(),s=1/ws.setFromMatrixColumn(e,2).length();return n[0]=i[0]*r,n[1]=i[1]*r,n[2]=i[2]*r,n[3]=0,n[4]=i[4]*a,n[5]=i[5]*a,n[6]=i[6]*a,n[7]=0,n[8]=i[8]*s,n[9]=i[9]*s,n[10]=i[10]*s,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const n=this.elements,i=e.x,r=e.y,a=e.z,s=Math.cos(i),o=Math.sin(i),l=Math.cos(r),c=Math.sin(r),h=Math.cos(a),u=Math.sin(a);if(e.order==="XYZ"){const f=s*h,d=s*u,p=o*h,m=o*u;n[0]=l*h,n[4]=-l*u,n[8]=c,n[1]=d+p*c,n[5]=f-m*c,n[9]=-o*l,n[2]=m-f*c,n[6]=p+d*c,n[10]=s*l}else if(e.order==="YXZ"){const f=l*h,d=l*u,p=c*h,m=c*u;n[0]=f+m*o,n[4]=p*o-d,n[8]=s*c,n[1]=s*u,n[5]=s*h,n[9]=-o,n[2]=d*o-p,n[6]=m+f*o,n[10]=s*l}else if(e.order==="ZXY"){const f=l*h,d=l*u,p=c*h,m=c*u;n[0]=f-m*o,n[4]=-s*u,n[8]=p+d*o,n[1]=d+p*o,n[5]=s*h,n[9]=m-f*o,n[2]=-s*c,n[6]=o,n[10]=s*l}else if(e.order==="ZYX"){const f=s*h,d=s*u,p=o*h,m=o*u;n[0]=l*h,n[4]=p*c-d,n[8]=f*c+m,n[1]=l*u,n[5]=m*c+f,n[9]=d*c-p,n[2]=-c,n[6]=o*l,n[10]=s*l}else if(e.order==="YZX"){const f=s*l,d=s*c,p=o*l,m=o*c;n[0]=l*h,n[4]=m-f*u,n[8]=p*u+d,n[1]=u,n[5]=s*h,n[9]=-o*h,n[2]=-c*h,n[6]=d*u+p,n[10]=f-m*u}else if(e.order==="XZY"){const f=s*l,d=s*c,p=o*l,m=o*c;n[0]=l*h,n[4]=-u,n[8]=c*h,n[1]=f*u+m,n[5]=s*h,n[9]=d*u-p,n[2]=p*u-d,n[6]=o*h,n[10]=m*u+f}return n[3]=0,n[7]=0,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromQuaternion(e){return this.compose(c1,e,h1)}lookAt(e,n,i){const r=this.elements;return Gn.subVectors(e,n),Gn.lengthSq()===0&&(Gn.z=1),Gn.normalize(),Pr.crossVectors(i,Gn),Pr.lengthSq()===0&&(Math.abs(i.z)===1?Gn.x+=1e-4:Gn.z+=1e-4,Gn.normalize(),Pr.crossVectors(i,Gn)),Pr.normalize(),Oh.crossVectors(Gn,Pr),r[0]=Pr.x,r[4]=Oh.x,r[8]=Gn.x,r[1]=Pr.y,r[5]=Oh.y,r[9]=Gn.y,r[2]=Pr.z,r[6]=Oh.z,r[10]=Gn.z,this}multiply(e,n){return n!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,n)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,n){const i=e.elements,r=n.elements,a=this.elements,s=i[0],o=i[4],l=i[8],c=i[12],h=i[1],u=i[5],f=i[9],d=i[13],p=i[2],m=i[6],x=i[10],g=i[14],v=i[3],b=i[7],_=i[11],M=i[15],y=r[0],w=r[4],E=r[8],A=r[12],L=r[1],S=r[5],R=r[9],D=r[13],I=r[2],F=r[6],U=r[10],j=r[14],Y=r[3],K=r[7],X=r[11],q=r[15];return a[0]=s*y+o*L+l*I+c*Y,a[4]=s*w+o*S+l*F+c*K,a[8]=s*E+o*R+l*U+c*X,a[12]=s*A+o*D+l*j+c*q,a[1]=h*y+u*L+f*I+d*Y,a[5]=h*w+u*S+f*F+d*K,a[9]=h*E+u*R+f*U+d*X,a[13]=h*A+u*D+f*j+d*q,a[2]=p*y+m*L+x*I+g*Y,a[6]=p*w+m*S+x*F+g*K,a[10]=p*E+m*R+x*U+g*X,a[14]=p*A+m*D+x*j+g*q,a[3]=v*y+b*L+_*I+M*Y,a[7]=v*w+b*S+_*F+M*K,a[11]=v*E+b*R+_*U+M*X,a[15]=v*A+b*D+_*j+M*q,this}multiplyScalar(e){const n=this.elements;return n[0]*=e,n[4]*=e,n[8]*=e,n[12]*=e,n[1]*=e,n[5]*=e,n[9]*=e,n[13]*=e,n[2]*=e,n[6]*=e,n[10]*=e,n[14]*=e,n[3]*=e,n[7]*=e,n[11]*=e,n[15]*=e,this}determinant(){const e=this.elements,n=e[0],i=e[4],r=e[8],a=e[12],s=e[1],o=e[5],l=e[9],c=e[13],h=e[2],u=e[6],f=e[10],d=e[14],p=e[3],m=e[7],x=e[11],g=e[15];return p*(+a*l*u-r*c*u-a*o*f+i*c*f+r*o*d-i*l*d)+m*(+n*l*d-n*c*f+a*s*f-r*s*d+r*c*h-a*l*h)+x*(+n*c*u-n*o*d-a*s*u+i*s*d+a*o*h-i*c*h)+g*(-r*o*h-n*l*u+n*o*f+r*s*u-i*s*f+i*l*h)}transpose(){const e=this.elements;let n;return n=e[1],e[1]=e[4],e[4]=n,n=e[2],e[2]=e[8],e[8]=n,n=e[6],e[6]=e[9],e[9]=n,n=e[3],e[3]=e[12],e[12]=n,n=e[7],e[7]=e[13],e[13]=n,n=e[11],e[11]=e[14],e[14]=n,this}setPosition(e,n,i){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=n,r[14]=i),this}invert(){const e=this.elements,n=e[0],i=e[1],r=e[2],a=e[3],s=e[4],o=e[5],l=e[6],c=e[7],h=e[8],u=e[9],f=e[10],d=e[11],p=e[12],m=e[13],x=e[14],g=e[15],v=u*x*c-m*f*c+m*l*d-o*x*d-u*l*g+o*f*g,b=p*f*c-h*x*c-p*l*d+s*x*d+h*l*g-s*f*g,_=h*m*c-p*u*c+p*o*d-s*m*d-h*o*g+s*u*g,M=p*u*l-h*m*l-p*o*f+s*m*f+h*o*x-s*u*x,y=n*v+i*b+r*_+a*M;if(y===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const w=1/y;return e[0]=v*w,e[1]=(m*f*a-u*x*a-m*r*d+i*x*d+u*r*g-i*f*g)*w,e[2]=(o*x*a-m*l*a+m*r*c-i*x*c-o*r*g+i*l*g)*w,e[3]=(u*l*a-o*f*a-u*r*c+i*f*c+o*r*d-i*l*d)*w,e[4]=b*w,e[5]=(h*x*a-p*f*a+p*r*d-n*x*d-h*r*g+n*f*g)*w,e[6]=(p*l*a-s*x*a-p*r*c+n*x*c+s*r*g-n*l*g)*w,e[7]=(s*f*a-h*l*a+h*r*c-n*f*c-s*r*d+n*l*d)*w,e[8]=_*w,e[9]=(p*u*a-h*m*a-p*i*d+n*m*d+h*i*g-n*u*g)*w,e[10]=(s*m*a-p*o*a+p*i*c-n*m*c-s*i*g+n*o*g)*w,e[11]=(h*o*a-s*u*a-h*i*c+n*u*c+s*i*d-n*o*d)*w,e[12]=M*w,e[13]=(h*m*r-p*u*r+p*i*f-n*m*f-h*i*x+n*u*x)*w,e[14]=(p*o*r-s*m*r-p*i*l+n*m*l+s*i*x-n*o*x)*w,e[15]=(s*u*r-h*o*r+h*i*l-n*u*l-s*i*f+n*o*f)*w,this}scale(e){const n=this.elements,i=e.x,r=e.y,a=e.z;return n[0]*=i,n[4]*=r,n[8]*=a,n[1]*=i,n[5]*=r,n[9]*=a,n[2]*=i,n[6]*=r,n[10]*=a,n[3]*=i,n[7]*=r,n[11]*=a,this}getMaxScaleOnAxis(){const e=this.elements,n=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(n,i,r))}makeTranslation(e,n,i){return this.set(1,0,0,e,0,1,0,n,0,0,1,i,0,0,0,1),this}makeRotationX(e){const n=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,n,-i,0,0,i,n,0,0,0,0,1),this}makeRotationY(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,0,i,0,0,1,0,0,-i,0,n,0,0,0,0,1),this}makeRotationZ(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,-i,0,0,i,n,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,n){const i=Math.cos(n),r=Math.sin(n),a=1-i,s=e.x,o=e.y,l=e.z,c=a*s,h=a*o;return this.set(c*s+i,c*o-r*l,c*l+r*o,0,c*o+r*l,h*o+i,h*l-r*s,0,c*l-r*o,h*l+r*s,a*l*l+i,0,0,0,0,1),this}makeScale(e,n,i){return this.set(e,0,0,0,0,n,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,n,i,r,a,s){return this.set(1,i,a,0,e,1,s,0,n,r,1,0,0,0,0,1),this}compose(e,n,i){const r=this.elements,a=n._x,s=n._y,o=n._z,l=n._w,c=a+a,h=s+s,u=o+o,f=a*c,d=a*h,p=a*u,m=s*h,x=s*u,g=o*u,v=l*c,b=l*h,_=l*u,M=i.x,y=i.y,w=i.z;return r[0]=(1-(m+g))*M,r[1]=(d+_)*M,r[2]=(p-b)*M,r[3]=0,r[4]=(d-_)*y,r[5]=(1-(f+g))*y,r[6]=(x+v)*y,r[7]=0,r[8]=(p+b)*w,r[9]=(x-v)*w,r[10]=(1-(f+m))*w,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,n,i){const r=this.elements;let a=ws.set(r[0],r[1],r[2]).length();const s=ws.set(r[4],r[5],r[6]).length(),o=ws.set(r[8],r[9],r[10]).length();this.determinant()<0&&(a=-a),e.x=r[12],e.y=r[13],e.z=r[14],hi.copy(this);const c=1/a,h=1/s,u=1/o;return hi.elements[0]*=c,hi.elements[1]*=c,hi.elements[2]*=c,hi.elements[4]*=h,hi.elements[5]*=h,hi.elements[6]*=h,hi.elements[8]*=u,hi.elements[9]*=u,hi.elements[10]*=u,n.setFromRotationMatrix(hi),i.x=a,i.y=s,i.z=o,this}makePerspective(e,n,i,r,a,s){s===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const o=this.elements,l=2*a/(n-e),c=2*a/(i-r),h=(n+e)/(n-e),u=(i+r)/(i-r),f=-(s+a)/(s-a),d=-2*s*a/(s-a);return o[0]=l,o[4]=0,o[8]=h,o[12]=0,o[1]=0,o[5]=c,o[9]=u,o[13]=0,o[2]=0,o[6]=0,o[10]=f,o[14]=d,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(e,n,i,r,a,s){const o=this.elements,l=1/(n-e),c=1/(i-r),h=1/(s-a),u=(n+e)*l,f=(i+r)*c,d=(s+a)*h;return o[0]=2*l,o[4]=0,o[8]=0,o[12]=-u,o[1]=0,o[5]=2*c,o[9]=0,o[13]=-f,o[2]=0,o[6]=0,o[10]=-2*h,o[14]=-d,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(e){const n=this.elements,i=e.elements;for(let r=0;r<16;r++)if(n[r]!==i[r])return!1;return!0}fromArray(e,n=0){for(let i=0;i<16;i++)this.elements[i]=e[i+n];return this}toArray(e=[],n=0){const i=this.elements;return e[n]=i[0],e[n+1]=i[1],e[n+2]=i[2],e[n+3]=i[3],e[n+4]=i[4],e[n+5]=i[5],e[n+6]=i[6],e[n+7]=i[7],e[n+8]=i[8],e[n+9]=i[9],e[n+10]=i[10],e[n+11]=i[11],e[n+12]=i[12],e[n+13]=i[13],e[n+14]=i[14],e[n+15]=i[15],e}}Fe.prototype.isMatrix4=!0;const ws=new k,hi=new Fe,c1=new k(0,0,0),h1=new k(1,1,1),Pr=new k,Oh=new k,Gn=new k,Uv=new Fe,Gv=new qt;class ui{constructor(e=0,n=0,i=0,r=ui.DefaultOrder){this._x=e,this._y=n,this._z=i,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,n,i,r=this._order){return this._x=e,this._y=n,this._z=i,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,n=this._order,i=!0){const r=e.elements,a=r[0],s=r[4],o=r[8],l=r[1],c=r[5],h=r[9],u=r[2],f=r[6],d=r[10];switch(n){case"XYZ":this._y=Math.asin(En(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-h,d),this._z=Math.atan2(-s,a)):(this._x=Math.atan2(f,c),this._z=0);break;case"YXZ":this._x=Math.asin(-En(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(o,d),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-u,a),this._z=0);break;case"ZXY":this._x=Math.asin(En(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-s,c)):(this._y=0,this._z=Math.atan2(l,a));break;case"ZYX":this._y=Math.asin(-En(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(f,d),this._z=Math.atan2(l,a)):(this._x=0,this._z=Math.atan2(-s,c));break;case"YZX":this._z=Math.asin(En(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-u,a)):(this._x=0,this._y=Math.atan2(o,d));break;case"XZY":this._z=Math.asin(-En(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(f,c),this._y=Math.atan2(o,a)):(this._x=Math.atan2(-h,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+n)}return this._order=n,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,n,i){return Uv.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Uv,n,i)}setFromVector3(e,n=this._order){return this.set(e.x,e.y,e.z,n)}reorder(e){return Gv.setFromEuler(this),this.setFromQuaternion(Gv,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],n=0){return e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new k(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}ui.prototype.isEuler=!0;ui.DefaultOrder="XYZ";ui.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Hv{constructor(){this.mask=1|0}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=4294967295|0}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!=0}isEnabled(e){return(this.mask&(1<<e|0))!=0}}let u1=0;const Vv=new k,bs=new qt,Yi=new Fe,Nh=new k,Ll=new k,f1=new k,d1=new qt,kv=new k(1,0,0),Wv=new k(0,1,0),$v=new k(0,0,1),p1={type:"added"},jv={type:"removed"};class gt extends Ar{constructor(){super();Object.defineProperty(this,"id",{value:u1++}),this.uuid=Zn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=gt.DefaultUp.clone();const e=new k,n=new ui,i=new qt,r=new k(1,1,1);function a(){i.setFromEuler(n,!1)}function s(){n.setFromQuaternion(i,void 0,!1)}n._onChange(a),i._onChange(s),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:n},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new Fe},normalMatrix:{value:new an}}),this.matrix=new Fe,this.matrixWorld=new Fe,this.matrixAutoUpdate=gt.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Hv,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,n){this.quaternion.setFromAxisAngle(e,n)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,n){return bs.setFromAxisAngle(e,n),this.quaternion.multiply(bs),this}rotateOnWorldAxis(e,n){return bs.setFromAxisAngle(e,n),this.quaternion.premultiply(bs),this}rotateX(e){return this.rotateOnAxis(kv,e)}rotateY(e){return this.rotateOnAxis(Wv,e)}rotateZ(e){return this.rotateOnAxis($v,e)}translateOnAxis(e,n){return Vv.copy(e).applyQuaternion(this.quaternion),this.position.add(Vv.multiplyScalar(n)),this}translateX(e){return this.translateOnAxis(kv,e)}translateY(e){return this.translateOnAxis(Wv,e)}translateZ(e){return this.translateOnAxis($v,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(Yi.copy(this.matrixWorld).invert())}lookAt(e,n,i){e.isVector3?Nh.copy(e):Nh.set(e,n,i);const r=this.parent;this.updateWorldMatrix(!0,!1),Ll.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Yi.lookAt(Ll,Nh,this.up):Yi.lookAt(Nh,Ll,this.up),this.quaternion.setFromRotationMatrix(Yi),r&&(Yi.extractRotation(r.matrixWorld),bs.setFromRotationMatrix(Yi),this.quaternion.premultiply(bs.invert()))}add(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.add(arguments[n]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(p1)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const n=this.children.indexOf(e);return n!==-1&&(e.parent=null,this.children.splice(n,1),e.dispatchEvent(jv)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const n=this.children[e];n.parent=null,n.dispatchEvent(jv)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Yi.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Yi.multiply(e.parent.matrixWorld)),e.applyMatrix4(Yi),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,n){if(this[e]===n)return this;for(let i=0,r=this.children.length;i<r;i++){const s=this.children[i].getObjectByProperty(e,n);if(s!==void 0)return s}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ll,e,f1),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ll,d1,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const n=this.matrixWorld.elements;return e.set(n[8],n[9],n[10]).normalize()}raycast(){}traverse(e){e(this);const n=this.children;for(let i=0,r=n.length;i<r;i++)n[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const n=this.children;for(let i=0,r=n.length;i<r;i++)n[i].traverseVisible(e)}traverseAncestors(e){const n=this.parent;n!==null&&(e(n),n.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const n=this.children;for(let i=0,r=n.length;i<r;i++)n[i].updateMatrixWorld(e)}updateWorldMatrix(e,n){const i=this.parent;if(e===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),n===!0){const r=this.children;for(let a=0,s=r.length;a<s;a++)r[a].updateWorldMatrix(!1,!0)}}toJSON(e){const n=e===void 0||typeof e=="string",i={};n&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON()));function a(o,l){return o[l.uuid]===void 0&&(o[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=a(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const l=o.shapes;if(Array.isArray(l))for(let c=0,h=l.length;c<h;c++){const u=l[c];a(e.shapes,u)}else a(e.shapes,l)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(a(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let l=0,c=this.material.length;l<c;l++)o.push(a(e.materials,this.material[l]));r.material=o}else r.material=a(e.materials,this.material);if(this.children.length>0){r.children=[];for(let o=0;o<this.children.length;o++)r.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let o=0;o<this.animations.length;o++){const l=this.animations[o];r.animations.push(a(e.animations,l))}}if(n){const o=s(e.geometries),l=s(e.materials),c=s(e.textures),h=s(e.images),u=s(e.shapes),f=s(e.skeletons),d=s(e.animations);o.length>0&&(i.geometries=o),l.length>0&&(i.materials=l),c.length>0&&(i.textures=c),h.length>0&&(i.images=h),u.length>0&&(i.shapes=u),f.length>0&&(i.skeletons=f),d.length>0&&(i.animations=d)}return i.object=r,i;function s(o){const l=[];for(const c in o){const h=o[c];delete h.metadata,l.push(h)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,n=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),n===!0)for(let i=0;i<e.children.length;i++){const r=e.children[i];this.add(r.clone())}return this}}gt.DefaultUp=new k(0,1,0);gt.DefaultMatrixAutoUpdate=!0;gt.prototype.isObject3D=!0;const fi=new k,Zi=new k,Ud=new k,Ji=new k,Ss=new k,Es=new k,Xv=new k,Gd=new k,Hd=new k,Vd=new k;class Yt{constructor(e=new k,n=new k,i=new k){this.a=e,this.b=n,this.c=i}static getNormal(e,n,i,r){r.subVectors(i,n),fi.subVectors(e,n),r.cross(fi);const a=r.lengthSq();return a>0?r.multiplyScalar(1/Math.sqrt(a)):r.set(0,0,0)}static getBarycoord(e,n,i,r,a){fi.subVectors(r,n),Zi.subVectors(i,n),Ud.subVectors(e,n);const s=fi.dot(fi),o=fi.dot(Zi),l=fi.dot(Ud),c=Zi.dot(Zi),h=Zi.dot(Ud),u=s*c-o*o;if(u===0)return a.set(-2,-1,-1);const f=1/u,d=(c*l-o*h)*f,p=(s*h-o*l)*f;return a.set(1-d-p,p,d)}static containsPoint(e,n,i,r){return this.getBarycoord(e,n,i,r,Ji),Ji.x>=0&&Ji.y>=0&&Ji.x+Ji.y<=1}static getUV(e,n,i,r,a,s,o,l){return this.getBarycoord(e,n,i,r,Ji),l.set(0,0),l.addScaledVector(a,Ji.x),l.addScaledVector(s,Ji.y),l.addScaledVector(o,Ji.z),l}static isFrontFacing(e,n,i,r){return fi.subVectors(i,n),Zi.subVectors(e,n),fi.cross(Zi).dot(r)<0}set(e,n,i){return this.a.copy(e),this.b.copy(n),this.c.copy(i),this}setFromPointsAndIndices(e,n,i,r){return this.a.copy(e[n]),this.b.copy(e[i]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,n,i,r){return this.a.fromBufferAttribute(e,n),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return fi.subVectors(this.c,this.b),Zi.subVectors(this.a,this.b),fi.cross(Zi).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Yt.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,n){return Yt.getBarycoord(e,this.a,this.b,this.c,n)}getUV(e,n,i,r,a){return Yt.getUV(e,this.a,this.b,this.c,n,i,r,a)}containsPoint(e){return Yt.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Yt.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,n){const i=this.a,r=this.b,a=this.c;let s,o;Ss.subVectors(r,i),Es.subVectors(a,i),Gd.subVectors(e,i);const l=Ss.dot(Gd),c=Es.dot(Gd);if(l<=0&&c<=0)return n.copy(i);Hd.subVectors(e,r);const h=Ss.dot(Hd),u=Es.dot(Hd);if(h>=0&&u<=h)return n.copy(r);const f=l*u-h*c;if(f<=0&&l>=0&&h<=0)return s=l/(l-h),n.copy(i).addScaledVector(Ss,s);Vd.subVectors(e,a);const d=Ss.dot(Vd),p=Es.dot(Vd);if(p>=0&&d<=p)return n.copy(a);const m=d*c-l*p;if(m<=0&&c>=0&&p<=0)return o=c/(c-p),n.copy(i).addScaledVector(Es,o);const x=h*p-d*u;if(x<=0&&u-h>=0&&d-p>=0)return Xv.subVectors(a,r),o=(u-h)/(u-h+(d-p)),n.copy(r).addScaledVector(Xv,o);const g=1/(x+m+f);return s=m*g,o=f*g,n.copy(i).addScaledVector(Ss,s).addScaledVector(Es,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let m1=0;class mn extends Ar{constructor(){super();Object.defineProperty(this,"id",{value:m1++}),this.uuid=Zn(),this.name="",this.type="Material",this.fog=!0,this.blending=vl,this.side=gl,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=av,this.blendDst=sv,this.blendEquation=ls,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=pd,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=jb,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Sd,this.stencilZFail=Sd,this.stencilZPass=Sd,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const n in e){const i=e[n];if(i===void 0){console.warn("THREE.Material: '"+n+"' parameter is undefined.");continue}if(n==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=i===Qg;continue}const r=this[n];if(r===void 0){console.warn("THREE."+this.type+": '"+n+"' is not a property of this material.");continue}r&&r.isColor?r.set(i):r&&r.isVector3&&i&&i.isVector3?r.copy(i):this[n]=i}}toJSON(e){const n=e===void 0||typeof e=="string";n&&(e={textures:{},images:{}});const i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==vl&&(i.blending=this.blending),this.side!==gl&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,this.rotation&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(i.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=this.flatShading),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData);function r(a){const s=[];for(const o in a){const l=a[o];delete l.metadata,s.push(l)}return s}if(n){const a=r(e.textures),s=r(e.images);a.length>0&&(i.textures=a),s.length>0&&(i.images=s)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const n=e.clippingPlanes;let i=null;if(n!==null){const r=n.length;i=new Array(r);for(let a=0;a!==r;++a)i[a]=n[a].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}mn.prototype.isMaterial=!0;class kd extends mn{constructor(e){super();this.type="MeshBasicMaterial",this.color=new We(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=_h,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}kd.prototype.isMeshBasicMaterial=!0;const Ct=new k,zh=new Te;class tn{constructor(e,n,i){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=n,this.count=e!==void 0?e.length/n:0,this.normalized=i===!0,this.usage=wl,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,n,i){e*=this.itemSize,i*=n.itemSize;for(let r=0,a=this.itemSize;r<a;r++)this.array[e+r]=n.array[i+r];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const n=this.array;let i=0;for(let r=0,a=e.length;r<a;r++){let s=e[r];s===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),s=new We),n[i++]=s.r,n[i++]=s.g,n[i++]=s.b}return this}copyVector2sArray(e){const n=this.array;let i=0;for(let r=0,a=e.length;r<a;r++){let s=e[r];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),s=new Te),n[i++]=s.x,n[i++]=s.y}return this}copyVector3sArray(e){const n=this.array;let i=0;for(let r=0,a=e.length;r<a;r++){let s=e[r];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),s=new k),n[i++]=s.x,n[i++]=s.y,n[i++]=s.z}return this}copyVector4sArray(e){const n=this.array;let i=0;for(let r=0,a=e.length;r<a;r++){let s=e[r];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),s=new yt),n[i++]=s.x,n[i++]=s.y,n[i++]=s.z,n[i++]=s.w}return this}applyMatrix3(e){if(this.itemSize===2)for(let n=0,i=this.count;n<i;n++)zh.fromBufferAttribute(this,n),zh.applyMatrix3(e),this.setXY(n,zh.x,zh.y);else if(this.itemSize===3)for(let n=0,i=this.count;n<i;n++)Ct.fromBufferAttribute(this,n),Ct.applyMatrix3(e),this.setXYZ(n,Ct.x,Ct.y,Ct.z);return this}applyMatrix4(e){for(let n=0,i=this.count;n<i;n++)Ct.x=this.getX(n),Ct.y=this.getY(n),Ct.z=this.getZ(n),Ct.applyMatrix4(e),this.setXYZ(n,Ct.x,Ct.y,Ct.z);return this}applyNormalMatrix(e){for(let n=0,i=this.count;n<i;n++)Ct.x=this.getX(n),Ct.y=this.getY(n),Ct.z=this.getZ(n),Ct.applyNormalMatrix(e),this.setXYZ(n,Ct.x,Ct.y,Ct.z);return this}transformDirection(e){for(let n=0,i=this.count;n<i;n++)Ct.x=this.getX(n),Ct.y=this.getY(n),Ct.z=this.getZ(n),Ct.transformDirection(e),this.setXYZ(n,Ct.x,Ct.y,Ct.z);return this}set(e,n=0){return this.array.set(e,n),this}getX(e){return this.array[e*this.itemSize]}setX(e,n){return this.array[e*this.itemSize]=n,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,n){return this.array[e*this.itemSize+1]=n,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,n){return this.array[e*this.itemSize+2]=n,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,n){return this.array[e*this.itemSize+3]=n,this}setXY(e,n,i){return e*=this.itemSize,this.array[e+0]=n,this.array[e+1]=i,this}setXYZ(e,n,i,r){return e*=this.itemSize,this.array[e+0]=n,this.array[e+1]=i,this.array[e+2]=r,this}setXYZW(e,n,i,r,a){return e*=this.itemSize,this.array[e+0]=n,this.array[e+1]=i,this.array[e+2]=r,this.array[e+3]=a,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==wl&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}tn.prototype.isBufferAttribute=!0;class Wd extends tn{constructor(e,n,i){super(new Uint16Array(e),n,i)}}class qv extends tn{constructor(e,n,i){super(new Uint32Array(e),n,i)}}class g1 extends tn{constructor(e,n,i){super(new Uint16Array(e),n,i)}}g1.prototype.isFloat16BufferAttribute=!0;class Dt extends tn{constructor(e,n,i){super(new Float32Array(e),n,i)}}let v1=0;const Kn=new Fe,$d=new gt,Ts=new k,Hn=new ci,Cl=new ci,sn=new k;class wt extends Ar{constructor(){super();Object.defineProperty(this,"id",{value:v1++}),this.uuid=Zn(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Bv(e)?qv:Wd)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,n){return this.attributes[e]=n,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,n,i=0){this.groups.push({start:e,count:n,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,n){this.drawRange.start=e,this.drawRange.count=n}applyMatrix4(e){const n=this.attributes.position;n!==void 0&&(n.applyMatrix4(e),n.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const a=new an().getNormalMatrix(e);i.applyNormalMatrix(a),i.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(e),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Kn.makeRotationFromQuaternion(e),this.applyMatrix4(Kn),this}rotateX(e){return Kn.makeRotationX(e),this.applyMatrix4(Kn),this}rotateY(e){return Kn.makeRotationY(e),this.applyMatrix4(Kn),this}rotateZ(e){return Kn.makeRotationZ(e),this.applyMatrix4(Kn),this}translate(e,n,i){return Kn.makeTranslation(e,n,i),this.applyMatrix4(Kn),this}scale(e,n,i){return Kn.makeScale(e,n,i),this.applyMatrix4(Kn),this}lookAt(e){return $d.lookAt(e),$d.updateMatrix(),this.applyMatrix4($d.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ts).negate(),this.translate(Ts.x,Ts.y,Ts.z),this}setFromPoints(e){const n=[];for(let i=0,r=e.length;i<r;i++){const a=e[i];n.push(a.x,a.y,a.z||0)}return this.setAttribute("position",new Dt(n,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new ci);const e=this.attributes.position,n=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new k(-1/0,-1/0,-1/0),new k(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),n)for(let i=0,r=n.length;i<r;i++){const a=n[i];Hn.setFromBufferAttribute(a),this.morphTargetsRelative?(sn.addVectors(this.boundingBox.min,Hn.min),this.boundingBox.expandByPoint(sn),sn.addVectors(this.boundingBox.max,Hn.max),this.boundingBox.expandByPoint(sn)):(this.boundingBox.expandByPoint(Hn.min),this.boundingBox.expandByPoint(Hn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new _s);const e=this.attributes.position,n=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new k,1/0);return}if(e){const i=this.boundingSphere.center;if(Hn.setFromBufferAttribute(e),n)for(let a=0,s=n.length;a<s;a++){const o=n[a];Cl.setFromBufferAttribute(o),this.morphTargetsRelative?(sn.addVectors(Hn.min,Cl.min),Hn.expandByPoint(sn),sn.addVectors(Hn.max,Cl.max),Hn.expandByPoint(sn)):(Hn.expandByPoint(Cl.min),Hn.expandByPoint(Cl.max))}Hn.getCenter(i);let r=0;for(let a=0,s=e.count;a<s;a++)sn.fromBufferAttribute(e,a),r=Math.max(r,i.distanceToSquared(sn));if(n)for(let a=0,s=n.length;a<s;a++){const o=n[a],l=this.morphTargetsRelative;for(let c=0,h=o.count;c<h;c++)sn.fromBufferAttribute(o,c),l&&(Ts.fromBufferAttribute(e,c),sn.add(Ts)),r=Math.max(r,i.distanceToSquared(sn))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,n=this.attributes;if(e===null||n.position===void 0||n.normal===void 0||n.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=e.array,r=n.position.array,a=n.normal.array,s=n.uv.array,o=r.length/3;n.tangent===void 0&&this.setAttribute("tangent",new tn(new Float32Array(4*o),4));const l=n.tangent.array,c=[],h=[];for(let L=0;L<o;L++)c[L]=new k,h[L]=new k;const u=new k,f=new k,d=new k,p=new Te,m=new Te,x=new Te,g=new k,v=new k;function b(L,S,R){u.fromArray(r,L*3),f.fromArray(r,S*3),d.fromArray(r,R*3),p.fromArray(s,L*2),m.fromArray(s,S*2),x.fromArray(s,R*2),f.sub(u),d.sub(u),m.sub(p),x.sub(p);const D=1/(m.x*x.y-x.x*m.y);!isFinite(D)||(g.copy(f).multiplyScalar(x.y).addScaledVector(d,-m.y).multiplyScalar(D),v.copy(d).multiplyScalar(m.x).addScaledVector(f,-x.x).multiplyScalar(D),c[L].add(g),c[S].add(g),c[R].add(g),h[L].add(v),h[S].add(v),h[R].add(v))}let _=this.groups;_.length===0&&(_=[{start:0,count:i.length}]);for(let L=0,S=_.length;L<S;++L){const R=_[L],D=R.start,I=R.count;for(let F=D,U=D+I;F<U;F+=3)b(i[F+0],i[F+1],i[F+2])}const M=new k,y=new k,w=new k,E=new k;function A(L){w.fromArray(a,L*3),E.copy(w);const S=c[L];M.copy(S),M.sub(w.multiplyScalar(w.dot(S))).normalize(),y.crossVectors(E,S);const D=y.dot(h[L])<0?-1:1;l[L*4]=M.x,l[L*4+1]=M.y,l[L*4+2]=M.z,l[L*4+3]=D}for(let L=0,S=_.length;L<S;++L){const R=_[L],D=R.start,I=R.count;for(let F=D,U=D+I;F<U;F+=3)A(i[F+0]),A(i[F+1]),A(i[F+2])}}computeVertexNormals(){const e=this.index,n=this.getAttribute("position");if(n!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new tn(new Float32Array(n.count*3),3),this.setAttribute("normal",i);else for(let f=0,d=i.count;f<d;f++)i.setXYZ(f,0,0,0);const r=new k,a=new k,s=new k,o=new k,l=new k,c=new k,h=new k,u=new k;if(e)for(let f=0,d=e.count;f<d;f+=3){const p=e.getX(f+0),m=e.getX(f+1),x=e.getX(f+2);r.fromBufferAttribute(n,p),a.fromBufferAttribute(n,m),s.fromBufferAttribute(n,x),h.subVectors(s,a),u.subVectors(r,a),h.cross(u),o.fromBufferAttribute(i,p),l.fromBufferAttribute(i,m),c.fromBufferAttribute(i,x),o.add(h),l.add(h),c.add(h),i.setXYZ(p,o.x,o.y,o.z),i.setXYZ(m,l.x,l.y,l.z),i.setXYZ(x,c.x,c.y,c.z)}else for(let f=0,d=n.count;f<d;f+=3)r.fromBufferAttribute(n,f+0),a.fromBufferAttribute(n,f+1),s.fromBufferAttribute(n,f+2),h.subVectors(s,a),u.subVectors(r,a),h.cross(u),i.setXYZ(f+0,h.x,h.y,h.z),i.setXYZ(f+1,h.x,h.y,h.z),i.setXYZ(f+2,h.x,h.y,h.z);this.normalizeNormals(),i.needsUpdate=!0}}merge(e,n){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}n===void 0&&(n=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const i=this.attributes;for(const r in i){if(e.attributes[r]===void 0)continue;const s=i[r].array,o=e.attributes[r],l=o.array,c=o.itemSize*n,h=Math.min(l.length,s.length-c);for(let u=0,f=c;u<h;u++,f++)s[f]=l[u]}return this}normalizeNormals(){const e=this.attributes.normal;for(let n=0,i=e.count;n<i;n++)sn.fromBufferAttribute(e,n),sn.normalize(),e.setXYZ(n,sn.x,sn.y,sn.z)}toNonIndexed(){function e(o,l){const c=o.array,h=o.itemSize,u=o.normalized,f=new c.constructor(l.length*h);let d=0,p=0;for(let m=0,x=l.length;m<x;m++){o.isInterleavedBufferAttribute?d=l[m]*o.data.stride+o.offset:d=l[m]*h;for(let g=0;g<h;g++)f[p++]=c[d++]}return new tn(f,h,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const n=new wt,i=this.index.array,r=this.attributes;for(const o in r){const l=r[o],c=e(l,i);n.setAttribute(o,c)}const a=this.morphAttributes;for(const o in a){const l=[],c=a[o];for(let h=0,u=c.length;h<u;h++){const f=c[h],d=e(f,i);l.push(d)}n.morphAttributes[o]=l}n.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let o=0,l=s.length;o<l;o++){const c=s[o];n.addGroup(c.start,c.count,c.materialIndex)}return n}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const n=this.index;n!==null&&(e.data.index={type:n.array.constructor.name,array:Array.prototype.slice.call(n.array)});const i=this.attributes;for(const l in i){const c=i[l];e.data.attributes[l]=c.toJSON(e.data)}const r={};let a=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],h=[];for(let u=0,f=c.length;u<f;u++){const d=c[u];h.push(d.toJSON(e.data))}h.length>0&&(r[l]=h,a=!0)}a&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(e.data.groups=JSON.parse(JSON.stringify(s)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const n={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone(n));const r=e.attributes;for(const c in r){const h=r[c];this.setAttribute(c,h.clone(n))}const a=e.morphAttributes;for(const c in a){const h=[],u=a[c];for(let f=0,d=u.length;f<d;f++)h.push(u[f].clone(n));this.morphAttributes[c]=h}this.morphTargetsRelative=e.morphTargetsRelative;const s=e.groups;for(let c=0,h=s.length;c<h;c++){const u=s[c];this.addGroup(u.start,u.count,u.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}wt.prototype.isBufferGeometry=!0;const Yv=new Fe,As=new Ms,jd=new _s,Dr=new k,Ir=new k,Fr=new k,Xd=new k,qd=new k,Yd=new k,Uh=new k,Gh=new k,Hh=new k,Vh=new Te,kh=new Te,Wh=new Te,Zd=new k,$h=new k;class Tn extends gt{constructor(e=new wt,n=new kd){super();this.type="Mesh",this.geometry=e,this.material=n,this.updateMorphTargets()}copy(e){return super.copy(e),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const n=e.morphAttributes,i=Object.keys(n);if(i.length>0){const r=n[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,s=r.length;a<s;a++){const o=r[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=a}}}}else{const n=e.morphTargets;n!==void 0&&n.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(e,n){const i=this.geometry,r=this.material,a=this.matrixWorld;if(r===void 0||(i.boundingSphere===null&&i.computeBoundingSphere(),jd.copy(i.boundingSphere),jd.applyMatrix4(a),e.ray.intersectsSphere(jd)===!1)||(Yv.copy(a).invert(),As.copy(e.ray).applyMatrix4(Yv),i.boundingBox!==null&&As.intersectsBox(i.boundingBox)===!1))return;let s;if(i.isBufferGeometry){const o=i.index,l=i.attributes.position,c=i.morphAttributes.position,h=i.morphTargetsRelative,u=i.attributes.uv,f=i.attributes.uv2,d=i.groups,p=i.drawRange;if(o!==null)if(Array.isArray(r))for(let m=0,x=d.length;m<x;m++){const g=d[m],v=r[g.materialIndex],b=Math.max(g.start,p.start),_=Math.min(o.count,Math.min(g.start+g.count,p.start+p.count));for(let M=b,y=_;M<y;M+=3){const w=o.getX(M),E=o.getX(M+1),A=o.getX(M+2);s=jh(this,v,e,As,l,c,h,u,f,w,E,A),s&&(s.faceIndex=Math.floor(M/3),s.face.materialIndex=g.materialIndex,n.push(s))}}else{const m=Math.max(0,p.start),x=Math.min(o.count,p.start+p.count);for(let g=m,v=x;g<v;g+=3){const b=o.getX(g),_=o.getX(g+1),M=o.getX(g+2);s=jh(this,r,e,As,l,c,h,u,f,b,_,M),s&&(s.faceIndex=Math.floor(g/3),n.push(s))}}else if(l!==void 0)if(Array.isArray(r))for(let m=0,x=d.length;m<x;m++){const g=d[m],v=r[g.materialIndex],b=Math.max(g.start,p.start),_=Math.min(l.count,Math.min(g.start+g.count,p.start+p.count));for(let M=b,y=_;M<y;M+=3){const w=M,E=M+1,A=M+2;s=jh(this,v,e,As,l,c,h,u,f,w,E,A),s&&(s.faceIndex=Math.floor(M/3),s.face.materialIndex=g.materialIndex,n.push(s))}}else{const m=Math.max(0,p.start),x=Math.min(l.count,p.start+p.count);for(let g=m,v=x;g<v;g+=3){const b=g,_=g+1,M=g+2;s=jh(this,r,e,As,l,c,h,u,f,b,_,M),s&&(s.faceIndex=Math.floor(g/3),n.push(s))}}}else i.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}Tn.prototype.isMesh=!0;function y1(t,e,n,i,r,a,s,o){let l;if(e.side===Qt?l=i.intersectTriangle(s,a,r,!0,o):l=i.intersectTriangle(r,a,s,e.side!==os,o),l===null)return null;$h.copy(o),$h.applyMatrix4(t.matrixWorld);const c=n.ray.origin.distanceTo($h);return c<n.near||c>n.far?null:{distance:c,point:$h.clone(),object:t}}function jh(t,e,n,i,r,a,s,o,l,c,h,u){Dr.fromBufferAttribute(r,c),Ir.fromBufferAttribute(r,h),Fr.fromBufferAttribute(r,u);const f=t.morphTargetInfluences;if(a&&f){Uh.set(0,0,0),Gh.set(0,0,0),Hh.set(0,0,0);for(let p=0,m=a.length;p<m;p++){const x=f[p],g=a[p];x!==0&&(Xd.fromBufferAttribute(g,c),qd.fromBufferAttribute(g,h),Yd.fromBufferAttribute(g,u),s?(Uh.addScaledVector(Xd,x),Gh.addScaledVector(qd,x),Hh.addScaledVector(Yd,x)):(Uh.addScaledVector(Xd.sub(Dr),x),Gh.addScaledVector(qd.sub(Ir),x),Hh.addScaledVector(Yd.sub(Fr),x)))}Dr.add(Uh),Ir.add(Gh),Fr.add(Hh)}t.isSkinnedMesh&&(t.boneTransform(c,Dr),t.boneTransform(h,Ir),t.boneTransform(u,Fr));const d=y1(t,e,n,i,Dr,Ir,Fr,Zd);if(d){o&&(Vh.fromBufferAttribute(o,c),kh.fromBufferAttribute(o,h),Wh.fromBufferAttribute(o,u),d.uv=Yt.getUV(Zd,Dr,Ir,Fr,Vh,kh,Wh,new Te)),l&&(Vh.fromBufferAttribute(l,c),kh.fromBufferAttribute(l,h),Wh.fromBufferAttribute(l,u),d.uv2=Yt.getUV(Zd,Dr,Ir,Fr,Vh,kh,Wh,new Te));const p={a:c,b:h,c:u,normal:new k,materialIndex:0};Yt.getNormal(Dr,Ir,Fr,p.normal),d.face=p}return d}class Rl extends wt{constructor(e=1,n=1,i=1,r=1,a=1,s=1){super();this.type="BoxGeometry",this.parameters={width:e,height:n,depth:i,widthSegments:r,heightSegments:a,depthSegments:s};const o=this;r=Math.floor(r),a=Math.floor(a),s=Math.floor(s);const l=[],c=[],h=[],u=[];let f=0,d=0;p("z","y","x",-1,-1,i,n,e,s,a,0),p("z","y","x",1,-1,i,n,-e,s,a,1),p("x","z","y",1,1,e,i,n,r,s,2),p("x","z","y",1,-1,e,i,-n,r,s,3),p("x","y","z",1,-1,e,n,i,r,a,4),p("x","y","z",-1,-1,e,n,-i,r,a,5),this.setIndex(l),this.setAttribute("position",new Dt(c,3)),this.setAttribute("normal",new Dt(h,3)),this.setAttribute("uv",new Dt(u,2));function p(m,x,g,v,b,_,M,y,w,E,A){const L=_/w,S=M/E,R=_/2,D=M/2,I=y/2,F=w+1,U=E+1;let j=0,Y=0;const K=new k;for(let X=0;X<U;X++){const q=X*S-D;for(let he=0;he<F;he++){const Se=he*L-R;K[m]=Se*v,K[x]=q*b,K[g]=I,c.push(K.x,K.y,K.z),K[m]=0,K[x]=0,K[g]=y>0?1:-1,h.push(K.x,K.y,K.z),u.push(he/w),u.push(1-X/E),j+=1}}for(let X=0;X<E;X++)for(let q=0;q<w;q++){const he=f+q+F*X,Se=f+q+F*(X+1),_e=f+(q+1)+F*(X+1),Z=f+(q+1)+F*X;l.push(he,Se,Z),l.push(Se,_e,Z),Y+=6}o.addGroup(d,Y,A),d+=Y,f+=j}}static fromJSON(e){return new Rl(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Ls(t){const e={};for(const n in t){e[n]={};for(const i in t[n]){const r=t[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?e[n][i]=r.clone():Array.isArray(r)?e[n][i]=r.slice():e[n][i]=r}}return e}function gn(t){const e={};for(let n=0;n<t.length;n++){const i=Ls(t[n]);for(const r in i)e[r]=i[r]}return e}const x1={clone:Ls,merge:gn};var _1=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,M1=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class fa extends mn{constructor(e){super();this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=_1,this.fragmentShader=M1,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Ls(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const n=super.toJSON(e);n.glslVersion=this.glslVersion,n.uniforms={};for(const r in this.uniforms){const s=this.uniforms[r].value;s&&s.isTexture?n.uniforms[r]={type:"t",value:s.toJSON(e).uuid}:s&&s.isColor?n.uniforms[r]={type:"c",value:s.getHex()}:s&&s.isVector2?n.uniforms[r]={type:"v2",value:s.toArray()}:s&&s.isVector3?n.uniforms[r]={type:"v3",value:s.toArray()}:s&&s.isVector4?n.uniforms[r]={type:"v4",value:s.toArray()}:s&&s.isMatrix3?n.uniforms[r]={type:"m3",value:s.toArray()}:s&&s.isMatrix4?n.uniforms[r]={type:"m4",value:s.toArray()}:n.uniforms[r]={value:s}}Object.keys(this.defines).length>0&&(n.defines=this.defines),n.vertexShader=this.vertexShader,n.fragmentShader=this.fragmentShader;const i={};for(const r in this.extensions)this.extensions[r]===!0&&(i[r]=!0);return Object.keys(i).length>0&&(n.extensions=i),n}}fa.prototype.isShaderMaterial=!0;class Jd extends gt{constructor(){super();this.type="Camera",this.matrixWorldInverse=new Fe,this.projectionMatrix=new Fe,this.projectionMatrixInverse=new Fe}copy(e,n){return super.copy(e,n),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const n=this.matrixWorld.elements;return e.set(-n[8],-n[9],-n[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,n){super.updateWorldMatrix(e,n),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}Jd.prototype.isCamera=!0;class An extends Jd{constructor(e=50,n=1,i=.1,r=2e3){super();this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=r,this.focus=10,this.aspect=n,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,n){return super.copy(e,n),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const n=.5*this.getFilmHeight()/e;this.fov=Sl*2*Math.atan(n),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(bl*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Sl*2*Math.atan(Math.tan(bl*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,n,i,r,a,s){this.aspect=e/n,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=n,this.view.offsetX=i,this.view.offsetY=r,this.view.width=a,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let n=e*Math.tan(bl*.5*this.fov)/this.zoom,i=2*n,r=this.aspect*i,a=-.5*r;const s=this.view;if(this.view!==null&&this.view.enabled){const l=s.fullWidth,c=s.fullHeight;a+=s.offsetX*r/l,n-=s.offsetY*i/c,r*=s.width/l,i*=s.height/c}const o=this.filmOffset;o!==0&&(a+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(a,a+r,n,n-i,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const n=super.toJSON(e);return n.object.fov=this.fov,n.object.zoom=this.zoom,n.object.near=this.near,n.object.far=this.far,n.object.focus=this.focus,n.object.aspect=this.aspect,this.view!==null&&(n.object.view=Object.assign({},this.view)),n.object.filmGauge=this.filmGauge,n.object.filmOffset=this.filmOffset,n}}An.prototype.isPerspectiveCamera=!0;const Cs=90,Rs=1;class Kd extends gt{constructor(e,n,i){super();if(this.type="CubeCamera",i.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=i;const r=new An(Cs,Rs,e,n);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new k(1,0,0)),this.add(r);const a=new An(Cs,Rs,e,n);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new k(-1,0,0)),this.add(a);const s=new An(Cs,Rs,e,n);s.layers=this.layers,s.up.set(0,0,1),s.lookAt(new k(0,1,0)),this.add(s);const o=new An(Cs,Rs,e,n);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new k(0,-1,0)),this.add(o);const l=new An(Cs,Rs,e,n);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new k(0,0,1)),this.add(l);const c=new An(Cs,Rs,e,n);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new k(0,0,-1)),this.add(c)}update(e,n){this.parent===null&&this.updateMatrixWorld();const i=this.renderTarget,[r,a,s,o,l,c]=this.children,h=e.xr.enabled,u=e.getRenderTarget();e.xr.enabled=!1;const f=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0),e.render(n,r),e.setRenderTarget(i,1),e.render(n,a),e.setRenderTarget(i,2),e.render(n,s),e.setRenderTarget(i,3),e.render(n,o),e.setRenderTarget(i,4),e.render(n,l),i.texture.generateMipmaps=f,e.setRenderTarget(i,5),e.render(n,c),e.setRenderTarget(u),e.xr.enabled=h,i.texture.needsPMREMUpdate=!0}}class Xh extends Xt{constructor(e,n,i,r,a,s,o,l,c,h){e=e!==void 0?e:[],n=n!==void 0?n:yl;super(e,n,i,r,a,s,o,l,c,h);this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}Xh.prototype.isCubeTexture=!0;class Zv extends Jn{constructor(e,n,i){Number.isInteger(n)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),n=i);super(e,e,n);n=n||{},this.texture=new Xh(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:dn}fromEquirectangularTexture(e,n){this.texture.type=n.type,this.texture.format=pn,this.texture.encoding=n.encoding,this.texture.generateMipmaps=n.generateMipmaps,this.texture.minFilter=n.minFilter,this.texture.magFilter=n.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new Rl(5,5,5),a=new fa({name:"CubemapFromEquirect",uniforms:Ls(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:Qt,blending:wr});a.uniforms.tEquirect.value=n;const s=new Tn(r,a),o=n.minFilter;return n.minFilter===bh&&(n.minFilter=dn),new Kd(1,10,this).update(e,s),n.minFilter=o,s.geometry.dispose(),s.material.dispose(),this}clear(e,n,i,r){const a=e.getRenderTarget();for(let s=0;s<6;s++)e.setRenderTarget(this,s),e.clear(n,i,r);e.setRenderTarget(a)}}Zv.prototype.isWebGLCubeRenderTarget=!0;const Qd=new k,w1=new k,b1=new an;class Ki{constructor(e=new k(1,0,0),n=0){this.normal=e,this.constant=n}set(e,n){return this.normal.copy(e),this.constant=n,this}setComponents(e,n,i,r){return this.normal.set(e,n,i),this.constant=r,this}setFromNormalAndCoplanarPoint(e,n){return this.normal.copy(e),this.constant=-n.dot(this.normal),this}setFromCoplanarPoints(e,n,i){const r=Qd.subVectors(i,n).cross(w1.subVectors(e,n)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,n){return n.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,n){const i=e.delta(Qd),r=this.normal.dot(i);if(r===0)return this.distanceToPoint(e.start)===0?n.copy(e.start):null;const a=-(e.start.dot(this.normal)+this.constant)/r;return a<0||a>1?null:n.copy(i).multiplyScalar(a).add(e.start)}intersectsLine(e){const n=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return n<0&&i>0||i<0&&n>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,n){const i=n||b1.getNormalMatrix(e),r=this.coplanarPoint(Qd).applyMatrix4(e),a=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(a),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}Ki.prototype.isPlane=!0;const Ps=new _s,qh=new k;class Yh{constructor(e=new Ki,n=new Ki,i=new Ki,r=new Ki,a=new Ki,s=new Ki){this.planes=[e,n,i,r,a,s]}set(e,n,i,r,a,s){const o=this.planes;return o[0].copy(e),o[1].copy(n),o[2].copy(i),o[3].copy(r),o[4].copy(a),o[5].copy(s),this}copy(e){const n=this.planes;for(let i=0;i<6;i++)n[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e){const n=this.planes,i=e.elements,r=i[0],a=i[1],s=i[2],o=i[3],l=i[4],c=i[5],h=i[6],u=i[7],f=i[8],d=i[9],p=i[10],m=i[11],x=i[12],g=i[13],v=i[14],b=i[15];return n[0].setComponents(o-r,u-l,m-f,b-x).normalize(),n[1].setComponents(o+r,u+l,m+f,b+x).normalize(),n[2].setComponents(o+a,u+c,m+d,b+g).normalize(),n[3].setComponents(o-a,u-c,m-d,b-g).normalize(),n[4].setComponents(o-s,u-h,m-p,b-v).normalize(),n[5].setComponents(o+s,u+h,m+p,b+v).normalize(),this}intersectsObject(e){const n=e.geometry;return n.boundingSphere===null&&n.computeBoundingSphere(),Ps.copy(n.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Ps)}intersectsSprite(e){return Ps.center.set(0,0,0),Ps.radius=.7071067811865476,Ps.applyMatrix4(e.matrixWorld),this.intersectsSphere(Ps)}intersectsSphere(e){const n=this.planes,i=e.center,r=-e.radius;for(let a=0;a<6;a++)if(n[a].distanceToPoint(i)<r)return!1;return!0}intersectsBox(e){const n=this.planes;for(let i=0;i<6;i++){const r=n[i];if(qh.x=r.normal.x>0?e.max.x:e.min.x,qh.y=r.normal.y>0?e.max.y:e.min.y,qh.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(qh)<0)return!1}return!0}containsPoint(e){const n=this.planes;for(let i=0;i<6;i++)if(n[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Jv(){let t=null,e=!1,n=null,i=null;function r(a,s){n(a,s),i=t.requestAnimationFrame(r)}return{start:function(){e!==!0&&n!==null&&(i=t.requestAnimationFrame(r),e=!0)},stop:function(){t.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(a){n=a},setContext:function(a){t=a}}}function S1(t,e){const n=e.isWebGL2,i=new WeakMap;function r(c,h){const u=c.array,f=c.usage,d=t.createBuffer();t.bindBuffer(h,d),t.bufferData(h,u,f),c.onUploadCallback();let p=5126;return u instanceof Float32Array?p=5126:u instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):u instanceof Uint16Array?c.isFloat16BufferAttribute?n?p=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):p=5123:u instanceof Int16Array?p=5122:u instanceof Uint32Array?p=5125:u instanceof Int32Array?p=5124:u instanceof Int8Array?p=5120:(u instanceof Uint8Array||u instanceof Uint8ClampedArray)&&(p=5121),{buffer:d,type:p,bytesPerElement:u.BYTES_PER_ELEMENT,version:c.version}}function a(c,h,u){const f=h.array,d=h.updateRange;t.bindBuffer(u,c),d.count===-1?t.bufferSubData(u,0,f):(n?t.bufferSubData(u,d.offset*f.BYTES_PER_ELEMENT,f,d.offset,d.count):t.bufferSubData(u,d.offset*f.BYTES_PER_ELEMENT,f.subarray(d.offset,d.offset+d.count)),d.count=-1)}function s(c){return c.isInterleavedBufferAttribute&&(c=c.data),i.get(c)}function o(c){c.isInterleavedBufferAttribute&&(c=c.data);const h=i.get(c);h&&(t.deleteBuffer(h.buffer),i.delete(c))}function l(c,h){if(c.isGLBufferAttribute){const f=i.get(c);(!f||f.version<c.version)&&i.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const u=i.get(c);u===void 0?i.set(c,r(c,h)):u.version<c.version&&(a(u.buffer,c,h),u.version=c.version)}return{get:s,remove:o,update:l}}class ep extends wt{constructor(e=1,n=1,i=1,r=1){super();this.type="PlaneGeometry",this.parameters={width:e,height:n,widthSegments:i,heightSegments:r};const a=e/2,s=n/2,o=Math.floor(i),l=Math.floor(r),c=o+1,h=l+1,u=e/o,f=n/l,d=[],p=[],m=[],x=[];for(let g=0;g<h;g++){const v=g*f-s;for(let b=0;b<c;b++){const _=b*u-a;p.push(_,-v,0),m.push(0,0,1),x.push(b/o),x.push(1-g/l)}}for(let g=0;g<l;g++)for(let v=0;v<o;v++){const b=v+c*g,_=v+c*(g+1),M=v+1+c*(g+1),y=v+1+c*g;d.push(b,_,y),d.push(_,M,y)}this.setIndex(d),this.setAttribute("position",new Dt(p,3)),this.setAttribute("normal",new Dt(m,3)),this.setAttribute("uv",new Dt(x,2))}static fromJSON(e){return new ep(e.width,e.height,e.widthSegments,e.heightSegments)}}var E1=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,T1=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,A1=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,L1=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,C1=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,R1=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,P1="vec3 transformed = vec3( position );",D1=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,I1=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,F1=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,B1=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,O1=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,N1=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,z1=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,U1=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,G1=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,H1=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,V1=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,k1=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,W1=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_maxMipLevel 8.0
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_maxTileSize 256.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		float texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );
		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 ) + 0.5;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		if ( mipInt < cubeUV_maxMipLevel ) {
			uv.y += 2.0 * cubeUV_maxTileSize;
		}
		uv.y += filterInt * 2.0 * cubeUV_minTileSize;
		uv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );
		uv *= texelSize;
		return texture2D( envMap, uv ).rgb;
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,$1=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,j1=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,X1=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,q1=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Y1=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Z1="gl_FragColor = linearToOutputTexel( gl_FragColor );",J1=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,K1=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Q1=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,eS=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,tS=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,nS=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,iS=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,rS=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,aS=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,sS=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,oS=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,lS=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		lightMapIrradiance *= PI;
	#endif
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,cS=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,hS=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointLightInfo( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotLightInfo( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
		#endif
	}
	#pragma unroll_loop_end
#endif`,uS=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,fS=`#if defined( USE_ENVMAP )
	#ifdef ENVMAP_MODE_REFRACTION
		uniform float refractionRatio;
	#endif
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec;
			#ifdef ENVMAP_MODE_REFLECTION
				reflectVec = reflect( - viewDir, normal );
				reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			#else
				reflectVec = refract( - viewDir, normal, refractionRatio );
			#endif
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,dS=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,pS=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,mS=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,gS=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,vS=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,yS=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	vec3 FssEss = specularColor * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,xS=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,_S=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,MS=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,wS=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,bS=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,SS=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,ES=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,TS=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,AS=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,LS=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,CS=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,RS=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,PS=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,DS=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,IS=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform vec2 morphTargetsTextureSize;
		vec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {
			float texelIndex = float( vertexIndex * stride + offset );
			float y = floor( texelIndex / morphTargetsTextureSize.x );
			float x = texelIndex - y * morphTargetsTextureSize.x;
			vec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );
			return texture( morphTargetsTexture, morphUV ).xyz;
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,FS=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			#ifndef USE_MORPHNORMALS
				if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];
			#else
				if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];
			#endif
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,BS=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,OS=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,NS=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,zS=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,US=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,GS=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,HS=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,VS=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,kS=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,WS=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,$S=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,jS=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,XS=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,qS=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,YS=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,ZS=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,JS=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,KS=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,QS=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,eE=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,tE=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,nE=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,iE=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`,rE=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,aE=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,sE=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,oE=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,lE=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,cE=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,hE=`#ifdef USE_TRANSMISSION
	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationColor, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );
#endif`,uE=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef TEXTURE_LOD_EXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,fE=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,dE=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,pE=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,mE=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,gE=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,vE=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,yE=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const xE=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,_E=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,ME=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,wE=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,bE=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,SE=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,EE=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,TE=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,AE=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,LE=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,CE=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,RE=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,PE=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,DE=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,IE=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,FE=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,BE=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,OE=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,NE=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,zE=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,UE=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,GE=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,HE=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,VE=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,kE=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,WE=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,$E=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,jE=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,XE=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,qE=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,YE=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,ZE=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,ut={alphamap_fragment:E1,alphamap_pars_fragment:T1,alphatest_fragment:A1,alphatest_pars_fragment:L1,aomap_fragment:C1,aomap_pars_fragment:R1,begin_vertex:P1,beginnormal_vertex:D1,bsdfs:I1,bumpmap_pars_fragment:F1,clipping_planes_fragment:B1,clipping_planes_pars_fragment:O1,clipping_planes_pars_vertex:N1,clipping_planes_vertex:z1,color_fragment:U1,color_pars_fragment:G1,color_pars_vertex:H1,color_vertex:V1,common:k1,cube_uv_reflection_fragment:W1,defaultnormal_vertex:$1,displacementmap_pars_vertex:j1,displacementmap_vertex:X1,emissivemap_fragment:q1,emissivemap_pars_fragment:Y1,encodings_fragment:Z1,encodings_pars_fragment:J1,envmap_fragment:K1,envmap_common_pars_fragment:Q1,envmap_pars_fragment:eS,envmap_pars_vertex:tS,envmap_physical_pars_fragment:fS,envmap_vertex:nS,fog_vertex:iS,fog_pars_vertex:rS,fog_fragment:aS,fog_pars_fragment:sS,gradientmap_pars_fragment:oS,lightmap_fragment:lS,lightmap_pars_fragment:cS,lights_lambert_vertex:hS,lights_pars_begin:uS,lights_toon_fragment:dS,lights_toon_pars_fragment:pS,lights_phong_fragment:mS,lights_phong_pars_fragment:gS,lights_physical_fragment:vS,lights_physical_pars_fragment:yS,lights_fragment_begin:xS,lights_fragment_maps:_S,lights_fragment_end:MS,logdepthbuf_fragment:wS,logdepthbuf_pars_fragment:bS,logdepthbuf_pars_vertex:SS,logdepthbuf_vertex:ES,map_fragment:TS,map_pars_fragment:AS,map_particle_fragment:LS,map_particle_pars_fragment:CS,metalnessmap_fragment:RS,metalnessmap_pars_fragment:PS,morphnormal_vertex:DS,morphtarget_pars_vertex:IS,morphtarget_vertex:FS,normal_fragment_begin:BS,normal_fragment_maps:OS,normal_pars_fragment:NS,normal_pars_vertex:zS,normal_vertex:US,normalmap_pars_fragment:GS,clearcoat_normal_fragment_begin:HS,clearcoat_normal_fragment_maps:VS,clearcoat_pars_fragment:kS,output_fragment:WS,packing:$S,premultiplied_alpha_fragment:jS,project_vertex:XS,dithering_fragment:qS,dithering_pars_fragment:YS,roughnessmap_fragment:ZS,roughnessmap_pars_fragment:JS,shadowmap_pars_fragment:KS,shadowmap_pars_vertex:QS,shadowmap_vertex:eE,shadowmask_pars_fragment:tE,skinbase_vertex:nE,skinning_pars_vertex:iE,skinning_vertex:rE,skinnormal_vertex:aE,specularmap_fragment:sE,specularmap_pars_fragment:oE,tonemapping_fragment:lE,tonemapping_pars_fragment:cE,transmission_fragment:hE,transmission_pars_fragment:uE,uv_pars_fragment:fE,uv_pars_vertex:dE,uv_vertex:pE,uv2_pars_fragment:mE,uv2_pars_vertex:gE,uv2_vertex:vE,worldpos_vertex:yE,background_vert:xE,background_frag:_E,cube_vert:ME,cube_frag:wE,depth_vert:bE,depth_frag:SE,distanceRGBA_vert:EE,distanceRGBA_frag:TE,equirect_vert:AE,equirect_frag:LE,linedashed_vert:CE,linedashed_frag:RE,meshbasic_vert:PE,meshbasic_frag:DE,meshlambert_vert:IE,meshlambert_frag:FE,meshmatcap_vert:BE,meshmatcap_frag:OE,meshnormal_vert:NE,meshnormal_frag:zE,meshphong_vert:UE,meshphong_frag:GE,meshphysical_vert:HE,meshphysical_frag:VE,meshtoon_vert:kE,meshtoon_frag:WE,points_vert:$E,points_frag:jE,shadow_vert:XE,shadow_frag:qE,sprite_vert:YE,sprite_frag:ZE},Oe={common:{diffuse:{value:new We(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new an},uv2Transform:{value:new an},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Te(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new We(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new We(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new an}},sprite:{diffuse:{value:new We(16777215)},opacity:{value:1},center:{value:new Te(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new an}}},Li={basic:{uniforms:gn([Oe.common,Oe.specularmap,Oe.envmap,Oe.aomap,Oe.lightmap,Oe.fog]),vertexShader:ut.meshbasic_vert,fragmentShader:ut.meshbasic_frag},lambert:{uniforms:gn([Oe.common,Oe.specularmap,Oe.envmap,Oe.aomap,Oe.lightmap,Oe.emissivemap,Oe.fog,Oe.lights,{emissive:{value:new We(0)}}]),vertexShader:ut.meshlambert_vert,fragmentShader:ut.meshlambert_frag},phong:{uniforms:gn([Oe.common,Oe.specularmap,Oe.envmap,Oe.aomap,Oe.lightmap,Oe.emissivemap,Oe.bumpmap,Oe.normalmap,Oe.displacementmap,Oe.fog,Oe.lights,{emissive:{value:new We(0)},specular:{value:new We(1118481)},shininess:{value:30}}]),vertexShader:ut.meshphong_vert,fragmentShader:ut.meshphong_frag},standard:{uniforms:gn([Oe.common,Oe.envmap,Oe.aomap,Oe.lightmap,Oe.emissivemap,Oe.bumpmap,Oe.normalmap,Oe.displacementmap,Oe.roughnessmap,Oe.metalnessmap,Oe.fog,Oe.lights,{emissive:{value:new We(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ut.meshphysical_vert,fragmentShader:ut.meshphysical_frag},toon:{uniforms:gn([Oe.common,Oe.aomap,Oe.lightmap,Oe.emissivemap,Oe.bumpmap,Oe.normalmap,Oe.displacementmap,Oe.gradientmap,Oe.fog,Oe.lights,{emissive:{value:new We(0)}}]),vertexShader:ut.meshtoon_vert,fragmentShader:ut.meshtoon_frag},matcap:{uniforms:gn([Oe.common,Oe.bumpmap,Oe.normalmap,Oe.displacementmap,Oe.fog,{matcap:{value:null}}]),vertexShader:ut.meshmatcap_vert,fragmentShader:ut.meshmatcap_frag},points:{uniforms:gn([Oe.points,Oe.fog]),vertexShader:ut.points_vert,fragmentShader:ut.points_frag},dashed:{uniforms:gn([Oe.common,Oe.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ut.linedashed_vert,fragmentShader:ut.linedashed_frag},depth:{uniforms:gn([Oe.common,Oe.displacementmap]),vertexShader:ut.depth_vert,fragmentShader:ut.depth_frag},normal:{uniforms:gn([Oe.common,Oe.bumpmap,Oe.normalmap,Oe.displacementmap,{opacity:{value:1}}]),vertexShader:ut.meshnormal_vert,fragmentShader:ut.meshnormal_frag},sprite:{uniforms:gn([Oe.sprite,Oe.fog]),vertexShader:ut.sprite_vert,fragmentShader:ut.sprite_frag},background:{uniforms:{uvTransform:{value:new an},t2D:{value:null}},vertexShader:ut.background_vert,fragmentShader:ut.background_frag},cube:{uniforms:gn([Oe.envmap,{opacity:{value:1}}]),vertexShader:ut.cube_vert,fragmentShader:ut.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ut.equirect_vert,fragmentShader:ut.equirect_frag},distanceRGBA:{uniforms:gn([Oe.common,Oe.displacementmap,{referencePosition:{value:new k},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ut.distanceRGBA_vert,fragmentShader:ut.distanceRGBA_frag},shadow:{uniforms:gn([Oe.lights,Oe.fog,{color:{value:new We(0)},opacity:{value:1}}]),vertexShader:ut.shadow_vert,fragmentShader:ut.shadow_frag}};Li.physical={uniforms:gn([Li.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Te(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new We(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new Te},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new We(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new We(1,1,1)},specularColorMap:{value:null}}]),vertexShader:ut.meshphysical_vert,fragmentShader:ut.meshphysical_frag};function JE(t,e,n,i,r,a){const s=new We(0);let o=r===!0?0:1,l,c,h=null,u=0,f=null;function d(m,x){let g=!1,v=x.isScene===!0?x.background:null;v&&v.isTexture&&(v=e.get(v));const b=t.xr,_=b.getSession&&b.getSession();_&&_.environmentBlendMode==="additive"&&(v=null),v===null?p(s,o):v&&v.isColor&&(p(v,1),g=!0),(t.autoClear||g)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),v&&(v.isCubeTexture||v.mapping===wh)?(c===void 0&&(c=new Tn(new Rl(1,1,1),new fa({name:"BackgroundCubeMaterial",uniforms:Ls(Li.cube.uniforms),vertexShader:Li.cube.vertexShader,fragmentShader:Li.cube.fragmentShader,side:Qt,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(M,y,w){this.matrixWorld.copyPosition(w.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(c)),c.material.uniforms.envMap.value=v,c.material.uniforms.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,(h!==v||u!==v.version||f!==t.toneMapping)&&(c.material.needsUpdate=!0,h=v,u=v.version,f=t.toneMapping),m.unshift(c,c.geometry,c.material,0,0,null)):v&&v.isTexture&&(l===void 0&&(l=new Tn(new ep(2,2),new fa({name:"BackgroundMaterial",uniforms:Ls(Li.background.uniforms),vertexShader:Li.background.vertexShader,fragmentShader:Li.background.fragmentShader,side:gl,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(l)),l.material.uniforms.t2D.value=v,v.matrixAutoUpdate===!0&&v.updateMatrix(),l.material.uniforms.uvTransform.value.copy(v.matrix),(h!==v||u!==v.version||f!==t.toneMapping)&&(l.material.needsUpdate=!0,h=v,u=v.version,f=t.toneMapping),m.unshift(l,l.geometry,l.material,0,0,null))}function p(m,x){n.buffers.color.setClear(m.r,m.g,m.b,x,a)}return{getClearColor:function(){return s},setClearColor:function(m,x=1){s.set(m),o=x,p(s,o)},getClearAlpha:function(){return o},setClearAlpha:function(m){o=m,p(s,o)},render:d}}function KE(t,e,n,i){const r=t.getParameter(34921),a=i.isWebGL2?null:e.get("OES_vertex_array_object"),s=i.isWebGL2||a!==null,o={},l=m(null);let c=l;function h(D,I,F,U,j){let Y=!1;if(s){const K=p(U,F,I);c!==K&&(c=K,f(c.object)),Y=x(U,j),Y&&g(U,j)}else{const K=I.wireframe===!0;(c.geometry!==U.id||c.program!==F.id||c.wireframe!==K)&&(c.geometry=U.id,c.program=F.id,c.wireframe=K,Y=!0)}D.isInstancedMesh===!0&&(Y=!0),j!==null&&n.update(j,34963),Y&&(w(D,I,F,U),j!==null&&t.bindBuffer(34963,n.get(j).buffer))}function u(){return i.isWebGL2?t.createVertexArray():a.createVertexArrayOES()}function f(D){return i.isWebGL2?t.bindVertexArray(D):a.bindVertexArrayOES(D)}function d(D){return i.isWebGL2?t.deleteVertexArray(D):a.deleteVertexArrayOES(D)}function p(D,I,F){const U=F.wireframe===!0;let j=o[D.id];j===void 0&&(j={},o[D.id]=j);let Y=j[I.id];Y===void 0&&(Y={},j[I.id]=Y);let K=Y[U];return K===void 0&&(K=m(u()),Y[U]=K),K}function m(D){const I=[],F=[],U=[];for(let j=0;j<r;j++)I[j]=0,F[j]=0,U[j]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:I,enabledAttributes:F,attributeDivisors:U,object:D,attributes:{},index:null}}function x(D,I){const F=c.attributes,U=D.attributes;let j=0;for(const Y in U){const K=F[Y],X=U[Y];if(K===void 0||K.attribute!==X||K.data!==X.data)return!0;j++}return c.attributesNum!==j||c.index!==I}function g(D,I){const F={},U=D.attributes;let j=0;for(const Y in U){const K=U[Y],X={};X.attribute=K,K.data&&(X.data=K.data),F[Y]=X,j++}c.attributes=F,c.attributesNum=j,c.index=I}function v(){const D=c.newAttributes;for(let I=0,F=D.length;I<F;I++)D[I]=0}function b(D){_(D,0)}function _(D,I){const F=c.newAttributes,U=c.enabledAttributes,j=c.attributeDivisors;F[D]=1,U[D]===0&&(t.enableVertexAttribArray(D),U[D]=1),j[D]!==I&&((i.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](D,I),j[D]=I)}function M(){const D=c.newAttributes,I=c.enabledAttributes;for(let F=0,U=I.length;F<U;F++)I[F]!==D[F]&&(t.disableVertexAttribArray(F),I[F]=0)}function y(D,I,F,U,j,Y){i.isWebGL2===!0&&(F===5124||F===5125)?t.vertexAttribIPointer(D,I,F,j,Y):t.vertexAttribPointer(D,I,F,U,j,Y)}function w(D,I,F,U){if(i.isWebGL2===!1&&(D.isInstancedMesh||U.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;v();const j=U.attributes,Y=F.getAttributes(),K=I.defaultAttributeValues;for(const X in Y){const q=Y[X];if(q.location>=0){let he=j[X];if(he===void 0&&(X==="instanceMatrix"&&D.instanceMatrix&&(he=D.instanceMatrix),X==="instanceColor"&&D.instanceColor&&(he=D.instanceColor)),he!==void 0){const Se=he.normalized,_e=he.itemSize,Z=n.get(he);if(Z===void 0)continue;const ie=Z.buffer,Le=Z.type,Ee=Z.bytesPerElement;if(he.isInterleavedBufferAttribute){const we=he.data,Ae=we.stride,ae=he.offset;if(we&&we.isInstancedInterleavedBuffer){for(let ee=0;ee<q.locationSize;ee++)_(q.location+ee,we.meshPerAttribute);D.isInstancedMesh!==!0&&U._maxInstanceCount===void 0&&(U._maxInstanceCount=we.meshPerAttribute*we.count)}else for(let ee=0;ee<q.locationSize;ee++)b(q.location+ee);t.bindBuffer(34962,ie);for(let ee=0;ee<q.locationSize;ee++)y(q.location+ee,_e/q.locationSize,Le,Se,Ae*Ee,(ae+_e/q.locationSize*ee)*Ee)}else{if(he.isInstancedBufferAttribute){for(let we=0;we<q.locationSize;we++)_(q.location+we,he.meshPerAttribute);D.isInstancedMesh!==!0&&U._maxInstanceCount===void 0&&(U._maxInstanceCount=he.meshPerAttribute*he.count)}else for(let we=0;we<q.locationSize;we++)b(q.location+we);t.bindBuffer(34962,ie);for(let we=0;we<q.locationSize;we++)y(q.location+we,_e/q.locationSize,Le,Se,_e*Ee,_e/q.locationSize*we*Ee)}}else if(K!==void 0){const Se=K[X];if(Se!==void 0)switch(Se.length){case 2:t.vertexAttrib2fv(q.location,Se);break;case 3:t.vertexAttrib3fv(q.location,Se);break;case 4:t.vertexAttrib4fv(q.location,Se);break;default:t.vertexAttrib1fv(q.location,Se)}}}}M()}function E(){S();for(const D in o){const I=o[D];for(const F in I){const U=I[F];for(const j in U)d(U[j].object),delete U[j];delete I[F]}delete o[D]}}function A(D){if(o[D.id]===void 0)return;const I=o[D.id];for(const F in I){const U=I[F];for(const j in U)d(U[j].object),delete U[j];delete I[F]}delete o[D.id]}function L(D){for(const I in o){const F=o[I];if(F[D.id]===void 0)continue;const U=F[D.id];for(const j in U)d(U[j].object),delete U[j];delete F[D.id]}}function S(){R(),c!==l&&(c=l,f(c.object))}function R(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:h,reset:S,resetDefaultState:R,dispose:E,releaseStatesOfGeometry:A,releaseStatesOfProgram:L,initAttributes:v,enableAttribute:b,disableUnusedAttributes:M}}function QE(t,e,n,i){const r=i.isWebGL2;let a;function s(c){a=c}function o(c,h){t.drawArrays(a,c,h),n.update(h,a,1)}function l(c,h,u){if(u===0)return;let f,d;if(r)f=t,d="drawArraysInstanced";else if(f=e.get("ANGLE_instanced_arrays"),d="drawArraysInstancedANGLE",f===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[d](a,c,h,u),n.update(h,a,u)}this.setMode=s,this.render=o,this.renderInstances=l}function eT(t,e,n){let i;function r(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const w=e.get("EXT_texture_filter_anisotropic");i=t.getParameter(w.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function a(w){if(w==="highp"){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";w="mediump"}return w==="mediump"&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const s=typeof WebGL2RenderingContext!="undefined"&&t instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!="undefined"&&t instanceof WebGL2ComputeRenderingContext;let o=n.precision!==void 0?n.precision:"highp";const l=a(o);l!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",l,"instead."),o=l);const c=s||e.has("WEBGL_draw_buffers"),h=n.logarithmicDepthBuffer===!0,u=t.getParameter(34930),f=t.getParameter(35660),d=t.getParameter(3379),p=t.getParameter(34076),m=t.getParameter(34921),x=t.getParameter(36347),g=t.getParameter(36348),v=t.getParameter(36349),b=f>0,_=s||e.has("OES_texture_float"),M=b&&_,y=s?t.getParameter(36183):0;return{isWebGL2:s,drawBuffers:c,getMaxAnisotropy:r,getMaxPrecision:a,precision:o,logarithmicDepthBuffer:h,maxTextures:u,maxVertexTextures:f,maxTextureSize:d,maxCubemapSize:p,maxAttributes:m,maxVertexUniforms:x,maxVaryings:g,maxFragmentUniforms:v,vertexTextures:b,floatFragmentTextures:_,floatVertexTextures:M,maxSamples:y}}function tT(t){const e=this;let n=null,i=0,r=!1,a=!1;const s=new Ki,o=new an,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(u,f,d){const p=u.length!==0||f||i!==0||r;return r=f,n=h(u,d,0),i=u.length,p},this.beginShadows=function(){a=!0,h(null)},this.endShadows=function(){a=!1,c()},this.setState=function(u,f,d){const p=u.clippingPlanes,m=u.clipIntersection,x=u.clipShadows,g=t.get(u);if(!r||p===null||p.length===0||a&&!x)a?h(null):c();else{const v=a?0:i,b=v*4;let _=g.clippingState||null;l.value=_,_=h(p,f,b,d);for(let M=0;M!==b;++M)_[M]=n[M];g.clippingState=_,this.numIntersection=m?this.numPlanes:0,this.numPlanes+=v}};function c(){l.value!==n&&(l.value=n,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function h(u,f,d,p){const m=u!==null?u.length:0;let x=null;if(m!==0){if(x=l.value,p!==!0||x===null){const g=d+m*4,v=f.matrixWorldInverse;o.getNormalMatrix(v),(x===null||x.length<g)&&(x=new Float32Array(g));for(let b=0,_=d;b!==m;++b,_+=4)s.copy(u[b]).applyMatrix4(v,o),s.normal.toArray(x,_),x[_+3]=s.constant}l.value=x,l.needsUpdate=!0}return e.numPlanes=m,e.numIntersection=0,x}}function nT(t){let e=new WeakMap;function n(s,o){return o===Mh?s.mapping=yl:o===md&&(s.mapping=xl),s}function i(s){if(s&&s.isTexture&&s.isRenderTargetTexture===!1){const o=s.mapping;if(o===Mh||o===md)if(e.has(s)){const l=e.get(s).texture;return n(l,s.mapping)}else{const l=s.image;if(l&&l.height>0){const c=new Zv(l.height/2);return c.fromEquirectangularTexture(t,s),e.set(s,c),s.addEventListener("dispose",r),n(c.texture,s.mapping)}else return null}}return s}function r(s){const o=s.target;o.removeEventListener("dispose",r);const l=e.get(o);l!==void 0&&(e.delete(o),l.dispose())}function a(){e=new WeakMap}return{get:i,dispose:a}}class Zh extends Jd{constructor(e=-1,n=1,i=1,r=-1,a=.1,s=2e3){super();this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=n,this.top=i,this.bottom=r,this.near=a,this.far=s,this.updateProjectionMatrix()}copy(e,n){return super.copy(e,n),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,n,i,r,a,s){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=n,this.view.offsetX=i,this.view.offsetY=r,this.view.width=a,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),n=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let a=i-e,s=i+e,o=r+n,l=r-n;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;a+=c*this.view.offsetX,s=a+c*this.view.width,o-=h*this.view.offsetY,l=o-h*this.view.height}this.projectionMatrix.makeOrthographic(a,s,o,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const n=super.toJSON(e);return n.object.zoom=this.zoom,n.object.left=this.left,n.object.right=this.right,n.object.top=this.top,n.object.bottom=this.bottom,n.object.near=this.near,n.object.far=this.far,this.view!==null&&(n.object.view=Object.assign({},this.view)),n}}Zh.prototype.isOrthographicCamera=!0;class Jh extends fa{constructor(e){super(e);this.type="RawShaderMaterial"}}Jh.prototype.isRawShaderMaterial=!0;const Ds=4,Br=8,Ci=Math.pow(2,Br),Kv=[.125,.215,.35,.446,.526,.582],Qv=Br-Ds+1+Kv.length,Is=20,tp=new Zh,{_lodPlanes:Pl,_sizeLods:ey,_sigmas:Kh}=iT(),ty=new We;let np=null;const da=(1+Math.sqrt(5))/2,Fs=1/da,ny=[new k(1,1,1),new k(-1,1,1),new k(1,1,-1),new k(-1,1,-1),new k(0,da,Fs),new k(0,da,-Fs),new k(Fs,0,da),new k(-Fs,0,da),new k(da,Fs,0),new k(-da,Fs,0)];class iy{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=rT(Is),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(e,n=0,i=.1,r=100){np=this._renderer.getRenderTarget();const a=this._allocateTargets();return this._sceneToCubeUV(e,i,r,a),n>0&&this._blur(a,0,0,n),this._applyPMREM(a),this._cleanup(a),a}fromEquirectangular(e,n=null){return this._fromTexture(e,n)}fromCubemap(e,n=null){return this._fromTexture(e,n)}compileCubemapShader(){this._cubemapShader===null&&(this._cubemapShader=sy(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){this._equirectShader===null&&(this._equirectShader=ay(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose(),this._cubemapShader!==null&&this._cubemapShader.dispose(),this._equirectShader!==null&&this._equirectShader.dispose();for(let e=0;e<Pl.length;e++)Pl[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(np),e.scissorTest=!1,Qh(e,0,0,e.width,e.height)}_fromTexture(e,n){np=this._renderer.getRenderTarget();const i=n||this._allocateTargets(e);return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(e){const n={magFilter:dn,minFilter:dn,generateMipmaps:!1,type:cs,format:pn,encoding:Tr,depthBuffer:!1},i=ry(n);return i.depthBuffer=!e,this._pingPongRenderTarget===null&&(this._pingPongRenderTarget=ry(n)),i}_compileMaterial(e){const n=new Tn(Pl[0],e);this._renderer.compile(n,tp)}_sceneToCubeUV(e,n,i,r){const a=90,s=1,o=new An(a,s,n,i),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],h=this._renderer,u=h.autoClear,f=h.toneMapping;h.getClearColor(ty),h.toneMapping=br,h.autoClear=!1;const d=new kd({name:"PMREM.Background",side:Qt,depthWrite:!1,depthTest:!1}),p=new Tn(new Rl,d);let m=!1;const x=e.background;x?x.isColor&&(d.color.copy(x),e.background=null,m=!0):(d.color.copy(ty),m=!0);for(let g=0;g<6;g++){const v=g%3;v===0?(o.up.set(0,l[g],0),o.lookAt(c[g],0,0)):v===1?(o.up.set(0,0,l[g]),o.lookAt(0,c[g],0)):(o.up.set(0,l[g],0),o.lookAt(0,0,c[g])),Qh(r,v*Ci,g>2?Ci:0,Ci,Ci),h.setRenderTarget(r),m&&h.render(p,o),h.render(e,o)}p.geometry.dispose(),p.material.dispose(),h.toneMapping=f,h.autoClear=u,e.background=x}_textureToCubeUV(e,n){const i=this._renderer,r=e.mapping===yl||e.mapping===xl;r?(this._cubemapShader===null&&(this._cubemapShader=sy()),this._cubemapShader.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectShader===null&&(this._equirectShader=ay());const a=r?this._cubemapShader:this._equirectShader,s=new Tn(Pl[0],a),o=a.uniforms;o.envMap.value=e,r||o.texelSize.value.set(1/e.image.width,1/e.image.height),Qh(n,0,0,3*Ci,2*Ci),i.setRenderTarget(n),i.render(s,tp)}_applyPMREM(e){const n=this._renderer,i=n.autoClear;n.autoClear=!1;for(let r=1;r<Qv;r++){const a=Math.sqrt(Kh[r]*Kh[r]-Kh[r-1]*Kh[r-1]),s=ny[(r-1)%ny.length];this._blur(e,r-1,r,a,s)}n.autoClear=i}_blur(e,n,i,r,a){const s=this._pingPongRenderTarget;this._halfBlur(e,s,n,i,r,"latitudinal",a),this._halfBlur(s,e,i,i,r,"longitudinal",a)}_halfBlur(e,n,i,r,a,s,o){const l=this._renderer,c=this._blurMaterial;s!=="latitudinal"&&s!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,u=new Tn(Pl[r],c),f=c.uniforms,d=ey[i]-1,p=isFinite(a)?Math.PI/(2*d):2*Math.PI/(2*Is-1),m=a/p,x=isFinite(a)?1+Math.floor(h*m):Is;x>Is&&console.warn(`sigmaRadians, ${a}, is too large and will clip, as it requested ${x} samples when the maximum is set to ${Is}`);const g=[];let v=0;for(let y=0;y<Is;++y){const w=y/m,E=Math.exp(-w*w/2);g.push(E),y===0?v+=E:y<x&&(v+=2*E)}for(let y=0;y<g.length;y++)g[y]=g[y]/v;f.envMap.value=e.texture,f.samples.value=x,f.weights.value=g,f.latitudinal.value=s==="latitudinal",o&&(f.poleAxis.value=o),f.dTheta.value=p,f.mipInt.value=Br-i;const b=ey[r],_=3*Math.max(0,Ci-2*b),M=(r===0?0:2*Ci)+2*b*(r>Br-Ds?r-Br+Ds:0);Qh(n,_,M,3*b,2*b),l.setRenderTarget(n),l.render(u,tp)}}function iT(){const t=[],e=[],n=[];let i=Br;for(let r=0;r<Qv;r++){const a=Math.pow(2,i);e.push(a);let s=1/a;r>Br-Ds?s=Kv[r-Br+Ds-1]:r===0&&(s=0),n.push(s);const o=1/(a-1),l=-o/2,c=1+o/2,h=[l,l,c,l,c,c,l,l,c,c,l,c],u=6,f=6,d=3,p=2,m=1,x=new Float32Array(d*f*u),g=new Float32Array(p*f*u),v=new Float32Array(m*f*u);for(let _=0;_<u;_++){const M=_%3*2/3-1,y=_>2?0:-1,w=[M,y,0,M+2/3,y,0,M+2/3,y+1,0,M,y,0,M+2/3,y+1,0,M,y+1,0];x.set(w,d*f*_),g.set(h,p*f*_);const E=[_,_,_,_,_,_];v.set(E,m*f*_)}const b=new wt;b.setAttribute("position",new tn(x,d)),b.setAttribute("uv",new tn(g,p)),b.setAttribute("faceIndex",new tn(v,m)),t.push(b),i>Ds&&i--}return{_lodPlanes:t,_sizeLods:e,_sigmas:n}}function ry(t){const e=new Jn(3*Ci,3*Ci,t);return e.texture.mapping=wh,e.texture.name="PMREM.cubeUv",e.scissorTest=!0,e}function Qh(t,e,n,i,r){t.viewport.set(e,n,i,r),t.scissor.set(e,n,i,r)}function rT(t){const e=new Float32Array(t),n=new k(0,1,0);return new Jh({name:"SphericalGaussianBlur",defines:{n:t},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:e},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n}},vertexShader:ip(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:wr,depthTest:!1,depthWrite:!1})}function ay(){const t=new Te(1,1);return new Jh({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:t}},vertexShader:ip(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = texture2D ( envMap, uv ).rgb;
				uv.x += texelSize.x;
				vec3 tr = texture2D ( envMap, uv ).rgb;
				uv.y += texelSize.y;
				vec3 br = texture2D ( envMap, uv ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = texture2D ( envMap, uv ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

			}
		`,blending:wr,depthTest:!1,depthWrite:!1})}function sy(){return new Jh({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:ip(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:wr,depthTest:!1,depthWrite:!1})}function ip(){return`

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function aT(t){let e=new WeakMap,n=null;function i(o){if(o&&o.isTexture){const l=o.mapping,c=l===Mh||l===md,h=l===yl||l===xl;if(c||h)if(o.isRenderTargetTexture&&o.needsPMREMUpdate===!0){o.needsPMREMUpdate=!1;let u=e.get(o);return n===null&&(n=new iy(t)),u=c?n.fromEquirectangular(o,u):n.fromCubemap(o,u),e.set(o,u),u.texture}else{if(e.has(o))return e.get(o).texture;{const u=o.image;if(c&&u&&u.height>0||h&&u&&r(u)){n===null&&(n=new iy(t));const f=c?n.fromEquirectangular(o):n.fromCubemap(o);return e.set(o,f),o.addEventListener("dispose",a),f.texture}else return null}}}return o}function r(o){let l=0;const c=6;for(let h=0;h<c;h++)o[h]!==void 0&&l++;return l===c}function a(o){const l=o.target;l.removeEventListener("dispose",a);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function s(){e=new WeakMap,n!==null&&(n.dispose(),n=null)}return{get:i,dispose:s}}function sT(t){const e={};function n(i){if(e[i]!==void 0)return e[i];let r;switch(i){case"WEBGL_depth_texture":r=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=t.getExtension(i)}return e[i]=r,r}return{has:function(i){return n(i)!==null},init:function(i){i.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture")},get:function(i){const r=n(i);return r===null&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),r}}}function oT(t,e,n,i){const r={},a=new WeakMap;function s(u){const f=u.target;f.index!==null&&e.remove(f.index);for(const p in f.attributes)e.remove(f.attributes[p]);f.removeEventListener("dispose",s),delete r[f.id];const d=a.get(f);d&&(e.remove(d),a.delete(f)),i.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,n.memory.geometries--}function o(u,f){return r[f.id]===!0||(f.addEventListener("dispose",s),r[f.id]=!0,n.memory.geometries++),f}function l(u){const f=u.attributes;for(const p in f)e.update(f[p],34962);const d=u.morphAttributes;for(const p in d){const m=d[p];for(let x=0,g=m.length;x<g;x++)e.update(m[x],34962)}}function c(u){const f=[],d=u.index,p=u.attributes.position;let m=0;if(d!==null){const v=d.array;m=d.version;for(let b=0,_=v.length;b<_;b+=3){const M=v[b+0],y=v[b+1],w=v[b+2];f.push(M,y,y,w,w,M)}}else{const v=p.array;m=p.version;for(let b=0,_=v.length/3-1;b<_;b+=3){const M=b+0,y=b+1,w=b+2;f.push(M,y,y,w,w,M)}}const x=new(Bv(f)?qv:Wd)(f,1);x.version=m;const g=a.get(u);g&&e.remove(g),a.set(u,x)}function h(u){const f=a.get(u);if(f){const d=u.index;d!==null&&f.version<d.version&&c(u)}else c(u);return a.get(u)}return{get:o,update:l,getWireframeAttribute:h}}function lT(t,e,n,i){const r=i.isWebGL2;let a;function s(f){a=f}let o,l;function c(f){o=f.type,l=f.bytesPerElement}function h(f,d){t.drawElements(a,d,o,f*l),n.update(d,a,1)}function u(f,d,p){if(p===0)return;let m,x;if(r)m=t,x="drawElementsInstanced";else if(m=e.get("ANGLE_instanced_arrays"),x="drawElementsInstancedANGLE",m===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}m[x](a,d,o,f*l,p),n.update(d,a,p)}this.setMode=s,this.setIndex=c,this.render=h,this.renderInstances=u}function cT(t){const e={geometries:0,textures:0},n={frame:0,calls:0,triangles:0,points:0,lines:0};function i(a,s,o){switch(n.calls++,s){case 4:n.triangles+=o*(a/3);break;case 1:n.lines+=o*(a/2);break;case 3:n.lines+=o*(a-1);break;case 2:n.lines+=o*a;break;case 0:n.points+=o*a;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",s);break}}function r(){n.frame++,n.calls=0,n.triangles=0,n.points=0,n.lines=0}return{memory:e,render:n,programs:null,autoReset:!0,reset:r,update:i}}class rp extends Xt{constructor(e=null,n=1,i=1,r=1){super(null);this.image={data:e,width:n,height:i,depth:r},this.magFilter=en,this.minFilter=en,this.wrapR=Sn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}rp.prototype.isDataTexture2DArray=!0;function hT(t,e){return t[0]-e[0]}function uT(t,e){return Math.abs(e[1])-Math.abs(t[1])}function oy(t,e){let n=1;const i=e.isInterleavedBufferAttribute?e.data.array:e.array;i instanceof Int8Array?n=127:i instanceof Int16Array?n=32767:i instanceof Int32Array?n=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",i),t.divideScalar(n)}function fT(t,e,n){const i={},r=new Float32Array(8),a=new WeakMap,s=new k,o=[];for(let c=0;c<8;c++)o[c]=[c,0];function l(c,h,u,f){const d=c.morphTargetInfluences;if(e.isWebGL2===!0){const p=h.morphAttributes.position.length;let m=a.get(h);if(m===void 0||m.count!==p){let R=function(){L.dispose(),a.delete(h),h.removeEventListener("dispose",R)};m!==void 0&&m.texture.dispose();const v=h.morphAttributes.normal!==void 0,b=h.morphAttributes.position,_=h.morphAttributes.normal||[],M=h.attributes.position.count,y=v===!0?2:1;let w=M*y,E=1;w>e.maxTextureSize&&(E=Math.ceil(w/e.maxTextureSize),w=e.maxTextureSize);const A=new Float32Array(w*E*4*p),L=new rp(A,w,E,p);L.format=pn,L.type=Er,L.needsUpdate=!0;const S=y*4;for(let D=0;D<p;D++){const I=b[D],F=_[D],U=w*E*4*D;for(let j=0;j<I.count;j++){s.fromBufferAttribute(I,j),I.normalized===!0&&oy(s,I);const Y=j*S;A[U+Y+0]=s.x,A[U+Y+1]=s.y,A[U+Y+2]=s.z,A[U+Y+3]=0,v===!0&&(s.fromBufferAttribute(F,j),F.normalized===!0&&oy(s,F),A[U+Y+4]=s.x,A[U+Y+5]=s.y,A[U+Y+6]=s.z,A[U+Y+7]=0)}}m={count:p,texture:L,size:new Te(w,E)},a.set(h,m),h.addEventListener("dispose",R)}let x=0;for(let v=0;v<d.length;v++)x+=d[v];const g=h.morphTargetsRelative?1:1-x;f.getUniforms().setValue(t,"morphTargetBaseInfluence",g),f.getUniforms().setValue(t,"morphTargetInfluences",d),f.getUniforms().setValue(t,"morphTargetsTexture",m.texture,n),f.getUniforms().setValue(t,"morphTargetsTextureSize",m.size)}else{const p=d===void 0?0:d.length;let m=i[h.id];if(m===void 0||m.length!==p){m=[];for(let _=0;_<p;_++)m[_]=[_,0];i[h.id]=m}for(let _=0;_<p;_++){const M=m[_];M[0]=_,M[1]=d[_]}m.sort(uT);for(let _=0;_<8;_++)_<p&&m[_][1]?(o[_][0]=m[_][0],o[_][1]=m[_][1]):(o[_][0]=Number.MAX_SAFE_INTEGER,o[_][1]=0);o.sort(hT);const x=h.morphAttributes.position,g=h.morphAttributes.normal;let v=0;for(let _=0;_<8;_++){const M=o[_],y=M[0],w=M[1];y!==Number.MAX_SAFE_INTEGER&&w?(x&&h.getAttribute("morphTarget"+_)!==x[y]&&h.setAttribute("morphTarget"+_,x[y]),g&&h.getAttribute("morphNormal"+_)!==g[y]&&h.setAttribute("morphNormal"+_,g[y]),r[_]=w,v+=w):(x&&h.hasAttribute("morphTarget"+_)===!0&&h.deleteAttribute("morphTarget"+_),g&&h.hasAttribute("morphNormal"+_)===!0&&h.deleteAttribute("morphNormal"+_),r[_]=0)}const b=h.morphTargetsRelative?1:1-v;f.getUniforms().setValue(t,"morphTargetBaseInfluence",b),f.getUniforms().setValue(t,"morphTargetInfluences",r)}}return{update:l}}function dT(t,e,n,i){let r=new WeakMap;function a(l){const c=i.render.frame,h=l.geometry,u=e.get(l,h);return r.get(u)!==c&&(e.update(u),r.set(u,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",o)===!1&&l.addEventListener("dispose",o),n.update(l.instanceMatrix,34962),l.instanceColor!==null&&n.update(l.instanceColor,34962)),u}function s(){r=new WeakMap}function o(l){const c=l.target;c.removeEventListener("dispose",o),n.remove(c.instanceMatrix),c.instanceColor!==null&&n.remove(c.instanceColor)}return{update:a,dispose:s}}class ly extends Xt{constructor(e=null,n=1,i=1,r=1){super(null);this.image={data:e,width:n,height:i,depth:r},this.magFilter=en,this.minFilter=en,this.wrapR=Sn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}ly.prototype.isDataTexture3D=!0;const cy=new Xt,hy=new rp,uy=new ly,fy=new Xh,dy=[],py=[],my=new Float32Array(16),gy=new Float32Array(9),vy=new Float32Array(4);function Bs(t,e,n){const i=t[0];if(i<=0||i>0)return t;const r=e*n;let a=dy[r];if(a===void 0&&(a=new Float32Array(r),dy[r]=a),e!==0){i.toArray(a,0);for(let s=1,o=0;s!==e;++s)o+=n,t[s].toArray(a,o)}return a}function Ln(t,e){if(t.length!==e.length)return!1;for(let n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}function vn(t,e){for(let n=0,i=e.length;n<i;n++)t[n]=e[n]}function eu(t,e){let n=py[e];n===void 0&&(n=new Int32Array(e),py[e]=n);for(let i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function pT(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function mT(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y)&&(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Ln(n,e))return;t.uniform2fv(this.addr,e),vn(n,e)}}function gT(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(e.r!==void 0)(n[0]!==e.r||n[1]!==e.g||n[2]!==e.b)&&(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(Ln(n,e))return;t.uniform3fv(this.addr,e),vn(n,e)}}function vT(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Ln(n,e))return;t.uniform4fv(this.addr,e),vn(n,e)}}function yT(t,e){const n=this.cache,i=e.elements;if(i===void 0){if(Ln(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),vn(n,e)}else{if(Ln(n,i))return;vy.set(i),t.uniformMatrix2fv(this.addr,!1,vy),vn(n,i)}}function xT(t,e){const n=this.cache,i=e.elements;if(i===void 0){if(Ln(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),vn(n,e)}else{if(Ln(n,i))return;gy.set(i),t.uniformMatrix3fv(this.addr,!1,gy),vn(n,i)}}function _T(t,e){const n=this.cache,i=e.elements;if(i===void 0){if(Ln(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),vn(n,e)}else{if(Ln(n,i))return;my.set(i),t.uniformMatrix4fv(this.addr,!1,my),vn(n,i)}}function MT(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function wT(t,e){const n=this.cache;Ln(n,e)||(t.uniform2iv(this.addr,e),vn(n,e))}function bT(t,e){const n=this.cache;Ln(n,e)||(t.uniform3iv(this.addr,e),vn(n,e))}function ST(t,e){const n=this.cache;Ln(n,e)||(t.uniform4iv(this.addr,e),vn(n,e))}function ET(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function TT(t,e){const n=this.cache;Ln(n,e)||(t.uniform2uiv(this.addr,e),vn(n,e))}function AT(t,e){const n=this.cache;Ln(n,e)||(t.uniform3uiv(this.addr,e),vn(n,e))}function LT(t,e){const n=this.cache;Ln(n,e)||(t.uniform4uiv(this.addr,e),vn(n,e))}function CT(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.safeSetTexture2D(e||cy,r)}function RT(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(e||uy,r)}function PT(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.safeSetTextureCube(e||fy,r)}function DT(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(e||hy,r)}function IT(t){switch(t){case 5126:return pT;case 35664:return mT;case 35665:return gT;case 35666:return vT;case 35674:return yT;case 35675:return xT;case 35676:return _T;case 5124:case 35670:return MT;case 35667:case 35671:return wT;case 35668:case 35672:return bT;case 35669:case 35673:return ST;case 5125:return ET;case 36294:return TT;case 36295:return AT;case 36296:return LT;case 35678:case 36198:case 36298:case 36306:case 35682:return CT;case 35679:case 36299:case 36307:return RT;case 35680:case 36300:case 36308:case 36293:return PT;case 36289:case 36303:case 36311:case 36292:return DT}}function FT(t,e){t.uniform1fv(this.addr,e)}function BT(t,e){const n=Bs(e,this.size,2);t.uniform2fv(this.addr,n)}function OT(t,e){const n=Bs(e,this.size,3);t.uniform3fv(this.addr,n)}function NT(t,e){const n=Bs(e,this.size,4);t.uniform4fv(this.addr,n)}function zT(t,e){const n=Bs(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function UT(t,e){const n=Bs(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function GT(t,e){const n=Bs(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function HT(t,e){t.uniform1iv(this.addr,e)}function VT(t,e){t.uniform2iv(this.addr,e)}function kT(t,e){t.uniform3iv(this.addr,e)}function WT(t,e){t.uniform4iv(this.addr,e)}function $T(t,e){t.uniform1uiv(this.addr,e)}function jT(t,e){t.uniform2uiv(this.addr,e)}function XT(t,e){t.uniform3uiv(this.addr,e)}function qT(t,e){t.uniform4uiv(this.addr,e)}function YT(t,e,n){const i=e.length,r=eu(n,i);t.uniform1iv(this.addr,r);for(let a=0;a!==i;++a)n.safeSetTexture2D(e[a]||cy,r[a])}function ZT(t,e,n){const i=e.length,r=eu(n,i);t.uniform1iv(this.addr,r);for(let a=0;a!==i;++a)n.setTexture3D(e[a]||uy,r[a])}function JT(t,e,n){const i=e.length,r=eu(n,i);t.uniform1iv(this.addr,r);for(let a=0;a!==i;++a)n.safeSetTextureCube(e[a]||fy,r[a])}function KT(t,e,n){const i=e.length,r=eu(n,i);t.uniform1iv(this.addr,r);for(let a=0;a!==i;++a)n.setTexture2DArray(e[a]||hy,r[a])}function QT(t){switch(t){case 5126:return FT;case 35664:return BT;case 35665:return OT;case 35666:return NT;case 35674:return zT;case 35675:return UT;case 35676:return GT;case 5124:case 35670:return HT;case 35667:case 35671:return VT;case 35668:case 35672:return kT;case 35669:case 35673:return WT;case 5125:return $T;case 36294:return jT;case 36295:return XT;case 36296:return qT;case 35678:case 36198:case 36298:case 36306:case 35682:return YT;case 35679:case 36299:case 36307:return ZT;case 35680:case 36300:case 36308:case 36293:return JT;case 36289:case 36303:case 36311:case 36292:return KT}}function eA(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=IT(e.type)}function yy(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=QT(e.type)}yy.prototype.updateCache=function(t){const e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),vn(e,t)};function xy(t){this.id=t,this.seq=[],this.map={}}xy.prototype.setValue=function(t,e,n){const i=this.seq;for(let r=0,a=i.length;r!==a;++r){const s=i[r];s.setValue(t,e[s.id],n)}};const ap=/(\w+)(\])?(\[|\.)?/g;function _y(t,e){t.seq.push(e),t.map[e.id]=e}function tA(t,e,n){const i=t.name,r=i.length;for(ap.lastIndex=0;;){const a=ap.exec(i),s=ap.lastIndex;let o=a[1];const l=a[2]==="]",c=a[3];if(l&&(o=o|0),c===void 0||c==="["&&s+2===r){_y(n,c===void 0?new eA(o,t,e):new yy(o,t,e));break}else{let u=n.map[o];u===void 0&&(u=new xy(o),_y(n,u)),n=u}}}function Or(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let i=0;i<n;++i){const r=t.getActiveUniform(e,i),a=t.getUniformLocation(e,r.name);tA(r,a,this)}}Or.prototype.setValue=function(t,e,n,i){const r=this.map[e];r!==void 0&&r.setValue(t,n,i)};Or.prototype.setOptional=function(t,e,n){const i=e[n];i!==void 0&&this.setValue(t,n,i)};Or.upload=function(t,e,n,i){for(let r=0,a=e.length;r!==a;++r){const s=e[r],o=n[s.id];o.needsUpdate!==!1&&s.setValue(t,o.value,i)}};Or.seqWithValue=function(t,e){const n=[];for(let i=0,r=t.length;i!==r;++i){const a=t[i];a.id in e&&n.push(a)}return n};function My(t,e,n){const i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),i}let nA=0;function iA(t){const e=t.split(`
`);for(let n=0;n<e.length;n++)e[n]=n+1+": "+e[n];return e.join(`
`)}function rA(t){switch(t){case Tr:return["Linear","( value )"];case Mt:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}function wy(t,e,n){const i=t.getShaderParameter(e,35713),r=t.getShaderInfoLog(e).trim();return i&&r===""?"":n.toUpperCase()+`

`+r+`

`+iA(t.getShaderSource(e))}function aA(t,e){const n=rA(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function sA(t,e){let n;switch(e){case yb:n="Linear";break;case xb:n="Reinhard";break;case _b:n="OptimizedCineon";break;case Mb:n="ACESFilmic";break;case wb:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function oA(t){return[t.extensionDerivatives||t.envMapCubeUV||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||t.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap||t.transmission)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Dl).join(`
`)}function lA(t){const e=[];for(const n in t){const i=t[n];i!==!1&&e.push("#define "+n+" "+i)}return e.join(`
`)}function cA(t,e){const n={},i=t.getProgramParameter(e,35721);for(let r=0;r<i;r++){const a=t.getActiveAttrib(e,r),s=a.name;let o=1;a.type===35674&&(o=2),a.type===35675&&(o=3),a.type===35676&&(o=4),n[s]={type:a.type,location:t.getAttribLocation(e,s),locationSize:o}}return n}function Dl(t){return t!==""}function by(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Sy(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const hA=/^[ \t]*#include +<([\w\d./]+)>/gm;function sp(t){return t.replace(hA,uA)}function uA(t,e){const n=ut[e];if(n===void 0)throw new Error("Can not resolve #include <"+e+">");return sp(n)}const fA=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,dA=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Ey(t){return t.replace(dA,Ty).replace(fA,pA)}function pA(t,e,n,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Ty(t,e,n,i)}function Ty(t,e,n,i){let r="";for(let a=parseInt(e);a<parseInt(n);a++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return r}function Ay(t){let e="precision "+t.precision+` float;
precision `+t.precision+" int;";return t.precision==="highp"?e+=`
#define HIGH_PRECISION`:t.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:t.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function mA(t){let e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===Kg?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===Zw?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===ml&&(e="SHADOWMAP_TYPE_VSM"),e}function gA(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case yl:case xl:e="ENVMAP_TYPE_CUBE";break;case wh:case gd:e="ENVMAP_TYPE_CUBE_UV";break}return e}function vA(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case xl:case gd:e="ENVMAP_MODE_REFRACTION";break}return e}function yA(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case _h:e="ENVMAP_BLENDING_MULTIPLY";break;case gb:e="ENVMAP_BLENDING_MIX";break;case vb:e="ENVMAP_BLENDING_ADD";break}return e}function xA(t,e,n,i){const r=t.getContext(),a=n.defines;let s=n.vertexShader,o=n.fragmentShader;const l=mA(n),c=gA(n),h=vA(n),u=yA(n),f=n.isWebGL2?"":oA(n),d=lA(a),p=r.createProgram();let m,x,g=n.glslVersion?"#version "+n.glslVersion+`
`:"";n.isRawShaderMaterial?(m=[d].filter(Dl).join(`
`),m.length>0&&(m+=`
`),x=[f,d].filter(Dl).join(`
`),x.length>0&&(x+=`
`)):(m=[Ay(n),"#define SHADER_NAME "+n.shaderName,d,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&n.flatShading===!1?"#define USE_MORPHNORMALS":"",n.morphTargets&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",n.morphTargets&&n.isWebGL2?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Dl).join(`
`),x=[f,Ay(n),"#define SHADER_NAME "+n.shaderName,d,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.envMap?"#define "+h:"",n.envMap?"#define "+u:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==br?"#define TONE_MAPPING":"",n.toneMapping!==br?ut.tonemapping_pars_fragment:"",n.toneMapping!==br?sA("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.transparent?"":"#define OPAQUE",ut.encodings_pars_fragment,aA("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"",`
`].filter(Dl).join(`
`)),s=sp(s),s=by(s,n),s=Sy(s,n),o=sp(o),o=by(o,n),o=Sy(o,n),s=Ey(s),o=Ey(o),n.isWebGL2&&n.isRawShaderMaterial!==!0&&(g=`#version 300 es
`,m=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,x=["#define varying in",n.glslVersion===Dv?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===Dv?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+x);const v=g+m+s,b=g+x+o,_=My(r,35633,v),M=My(r,35632,b);if(r.attachShader(p,_),r.attachShader(p,M),n.index0AttributeName!==void 0?r.bindAttribLocation(p,0,n.index0AttributeName):n.morphTargets===!0&&r.bindAttribLocation(p,0,"position"),r.linkProgram(p),t.debug.checkShaderErrors){const E=r.getProgramInfoLog(p).trim(),A=r.getShaderInfoLog(_).trim(),L=r.getShaderInfoLog(M).trim();let S=!0,R=!0;if(r.getProgramParameter(p,35714)===!1){S=!1;const D=wy(r,_,"vertex"),I=wy(r,M,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(p,35715)+`

Program Info Log: `+E+`
`+D+`
`+I)}else E!==""?console.warn("THREE.WebGLProgram: Program Info Log:",E):(A===""||L==="")&&(R=!1);R&&(this.diagnostics={runnable:S,programLog:E,vertexShader:{log:A,prefix:m},fragmentShader:{log:L,prefix:x}})}r.deleteShader(_),r.deleteShader(M);let y;this.getUniforms=function(){return y===void 0&&(y=new Or(r,p)),y};let w;return this.getAttributes=function(){return w===void 0&&(w=cA(r,p)),w},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(p),this.program=void 0},this.name=n.shaderName,this.id=nA++,this.cacheKey=e,this.usedTimes=1,this.program=p,this.vertexShader=_,this.fragmentShader=M,this}let _A=0;class MA{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const n=e.vertexShader,i=e.fragmentShader,r=this._getShaderStage(n),a=this._getShaderStage(i),s=this._getShaderCacheForMaterial(e);return s.has(r)===!1&&(s.add(r),r.usedTimes++),s.has(a)===!1&&(s.add(a),a.usedTimes++),this}remove(e){const n=this.materialCache.get(e);for(const i of n)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const n=this.materialCache;return n.has(e)===!1&&n.set(e,new Set),n.get(e)}_getShaderStage(e){const n=this.shaderCache;if(n.has(e)===!1){const i=new wA;n.set(e,i)}return n.get(e)}}class wA{constructor(){this.id=_A++,this.usedTimes=0}}function bA(t,e,n,i,r,a,s){const o=new Hv,l=new MA,c=[],h=r.isWebGL2,u=r.logarithmicDepthBuffer,f=r.floatVertexTextures,d=r.maxVertexUniforms,p=r.vertexTextures;let m=r.precision;const x={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function g(S){const D=S.skeleton.bones;if(f)return 1024;{const F=Math.floor((d-20)/4),U=Math.min(F,D.length);return U<D.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+D.length+" bones. This GPU supports "+U+"."),0):U}}function v(S,R,D,I,F){const U=I.fog,j=S.isMeshStandardMaterial?I.environment:null,Y=(S.isMeshStandardMaterial?n:e).get(S.envMap||j),K=x[S.type],X=F.isSkinnedMesh?g(F):0;S.precision!==null&&(m=r.getMaxPrecision(S.precision),m!==S.precision&&console.warn("THREE.WebGLProgram.getParameters:",S.precision,"not supported, using",m,"instead."));let q,he,Se,_e;if(K){const we=Li[K];q=we.vertexShader,he=we.fragmentShader}else q=S.vertexShader,he=S.fragmentShader,l.update(S),Se=l.getVertexShaderID(S),_e=l.getFragmentShaderID(S);const Z=t.getRenderTarget(),ie=S.alphaTest>0,Le=S.clearcoat>0;return{isWebGL2:h,shaderID:K,shaderName:S.type,vertexShader:q,fragmentShader:he,defines:S.defines,customVertexShaderID:Se,customFragmentShaderID:_e,isRawShaderMaterial:S.isRawShaderMaterial===!0,glslVersion:S.glslVersion,precision:m,instancing:F.isInstancedMesh===!0,instancingColor:F.isInstancedMesh===!0&&F.instanceColor!==null,supportsVertexTextures:p,outputEncoding:Z===null?t.outputEncoding:Z.isXRRenderTarget===!0?Z.texture.encoding:Tr,map:!!S.map,matcap:!!S.matcap,envMap:!!Y,envMapMode:Y&&Y.mapping,envMapCubeUV:!!Y&&(Y.mapping===wh||Y.mapping===gd),lightMap:!!S.lightMap,aoMap:!!S.aoMap,emissiveMap:!!S.emissiveMap,bumpMap:!!S.bumpMap,normalMap:!!S.normalMap,objectSpaceNormalMap:S.normalMapType===$b,tangentSpaceNormalMap:S.normalMapType===ps,decodeVideoTexture:!!S.map&&S.map.isVideoTexture===!0&&S.map.encoding===Mt,clearcoat:Le,clearcoatMap:Le&&!!S.clearcoatMap,clearcoatRoughnessMap:Le&&!!S.clearcoatRoughnessMap,clearcoatNormalMap:Le&&!!S.clearcoatNormalMap,displacementMap:!!S.displacementMap,roughnessMap:!!S.roughnessMap,metalnessMap:!!S.metalnessMap,specularMap:!!S.specularMap,specularIntensityMap:!!S.specularIntensityMap,specularColorMap:!!S.specularColorMap,transparent:S.transparent,alphaMap:!!S.alphaMap,alphaTest:ie,gradientMap:!!S.gradientMap,sheen:S.sheen>0,sheenColorMap:!!S.sheenColorMap,sheenRoughnessMap:!!S.sheenRoughnessMap,transmission:S.transmission>0,transmissionMap:!!S.transmissionMap,thicknessMap:!!S.thicknessMap,combine:S.combine,vertexTangents:!!S.normalMap&&!!F.geometry&&!!F.geometry.attributes.tangent,vertexColors:S.vertexColors,vertexAlphas:S.vertexColors===!0&&!!F.geometry&&!!F.geometry.attributes.color&&F.geometry.attributes.color.itemSize===4,vertexUvs:!!S.map||!!S.bumpMap||!!S.normalMap||!!S.specularMap||!!S.alphaMap||!!S.emissiveMap||!!S.roughnessMap||!!S.metalnessMap||!!S.clearcoatMap||!!S.clearcoatRoughnessMap||!!S.clearcoatNormalMap||!!S.displacementMap||!!S.transmissionMap||!!S.thicknessMap||!!S.specularIntensityMap||!!S.specularColorMap||!!S.sheenColorMap||!!S.sheenRoughnessMap,uvsVertexOnly:!(!!S.map||!!S.bumpMap||!!S.normalMap||!!S.specularMap||!!S.alphaMap||!!S.emissiveMap||!!S.roughnessMap||!!S.metalnessMap||!!S.clearcoatNormalMap||S.transmission>0||!!S.transmissionMap||!!S.thicknessMap||!!S.specularIntensityMap||!!S.specularColorMap||S.sheen>0||!!S.sheenColorMap||!!S.sheenRoughnessMap)&&!!S.displacementMap,fog:!!U,useFog:S.fog,fogExp2:U&&U.isFogExp2,flatShading:!!S.flatShading,sizeAttenuation:S.sizeAttenuation,logarithmicDepthBuffer:u,skinning:F.isSkinnedMesh===!0&&X>0,maxBones:X,useVertexTexture:f,morphTargets:!!F.geometry&&!!F.geometry.morphAttributes.position,morphNormals:!!F.geometry&&!!F.geometry.morphAttributes.normal,morphTargetsCount:!!F.geometry&&!!F.geometry.morphAttributes.position?F.geometry.morphAttributes.position.length:0,numDirLights:R.directional.length,numPointLights:R.point.length,numSpotLights:R.spot.length,numRectAreaLights:R.rectArea.length,numHemiLights:R.hemi.length,numDirLightShadows:R.directionalShadowMap.length,numPointLightShadows:R.pointShadowMap.length,numSpotLightShadows:R.spotShadowMap.length,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:S.dithering,shadowMapEnabled:t.shadowMap.enabled&&D.length>0,shadowMapType:t.shadowMap.type,toneMapping:S.toneMapped?t.toneMapping:br,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:S.premultipliedAlpha,doubleSided:S.side===os,flipSided:S.side===Qt,depthPacking:S.depthPacking!==void 0?S.depthPacking:!1,index0AttributeName:S.index0AttributeName,extensionDerivatives:S.extensions&&S.extensions.derivatives,extensionFragDepth:S.extensions&&S.extensions.fragDepth,extensionDrawBuffers:S.extensions&&S.extensions.drawBuffers,extensionShaderTextureLOD:S.extensions&&S.extensions.shaderTextureLOD,rendererExtensionFragDepth:h||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:h||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:h||i.has("EXT_shader_texture_lod"),customProgramCacheKey:S.customProgramCacheKey()}}function b(S){const R=[];if(S.shaderID?R.push(S.shaderID):(R.push(S.customVertexShaderID),R.push(S.customFragmentShaderID)),S.defines!==void 0)for(const D in S.defines)R.push(D),R.push(S.defines[D]);return S.isRawShaderMaterial===!1&&(_(R,S),M(R,S),R.push(t.outputEncoding)),R.push(S.customProgramCacheKey),R.join()}function _(S,R){S.push(R.precision),S.push(R.outputEncoding),S.push(R.envMapMode),S.push(R.combine),S.push(R.vertexUvs),S.push(R.fogExp2),S.push(R.sizeAttenuation),S.push(R.maxBones),S.push(R.morphTargetsCount),S.push(R.numDirLights),S.push(R.numPointLights),S.push(R.numSpotLights),S.push(R.numHemiLights),S.push(R.numRectAreaLights),S.push(R.numDirLightShadows),S.push(R.numPointLightShadows),S.push(R.numSpotLightShadows),S.push(R.shadowMapType),S.push(R.toneMapping),S.push(R.numClippingPlanes),S.push(R.numClipIntersection)}function M(S,R){o.disableAll(),R.isWebGL2&&o.enable(0),R.supportsVertexTextures&&o.enable(1),R.instancing&&o.enable(2),R.instancingColor&&o.enable(3),R.map&&o.enable(4),R.matcap&&o.enable(5),R.envMap&&o.enable(6),R.envMapCubeUV&&o.enable(7),R.lightMap&&o.enable(8),R.aoMap&&o.enable(9),R.emissiveMap&&o.enable(10),R.bumpMap&&o.enable(11),R.normalMap&&o.enable(12),R.objectSpaceNormalMap&&o.enable(13),R.tangentSpaceNormalMap&&o.enable(14),R.clearcoat&&o.enable(15),R.clearcoatMap&&o.enable(16),R.clearcoatRoughnessMap&&o.enable(17),R.clearcoatNormalMap&&o.enable(18),R.displacementMap&&o.enable(19),R.specularMap&&o.enable(20),R.roughnessMap&&o.enable(21),R.metalnessMap&&o.enable(22),R.gradientMap&&o.enable(23),R.alphaMap&&o.enable(24),R.alphaTest&&o.enable(25),R.vertexColors&&o.enable(26),R.vertexAlphas&&o.enable(27),R.vertexUvs&&o.enable(28),R.vertexTangents&&o.enable(29),R.uvsVertexOnly&&o.enable(30),R.fog&&o.enable(31),S.push(o.mask),o.disableAll(),R.useFog&&o.enable(0),R.flatShading&&o.enable(1),R.logarithmicDepthBuffer&&o.enable(2),R.skinning&&o.enable(3),R.useVertexTexture&&o.enable(4),R.morphTargets&&o.enable(5),R.morphNormals&&o.enable(6),R.premultipliedAlpha&&o.enable(7),R.shadowMapEnabled&&o.enable(8),R.physicallyCorrectLights&&o.enable(9),R.doubleSided&&o.enable(10),R.flipSided&&o.enable(11),R.depthPacking&&o.enable(12),R.dithering&&o.enable(13),R.specularIntensityMap&&o.enable(14),R.specularColorMap&&o.enable(15),R.transmission&&o.enable(16),R.transmissionMap&&o.enable(17),R.thicknessMap&&o.enable(18),R.sheen&&o.enable(19),R.sheenColorMap&&o.enable(20),R.sheenRoughnessMap&&o.enable(21),R.decodeVideoTexture&&o.enable(22),R.transparent&&o.enable(23),S.push(o.mask)}function y(S){const R=x[S.type];let D;if(R){const I=Li[R];D=x1.clone(I.uniforms)}else D=S.uniforms;return D}function w(S,R){let D;for(let I=0,F=c.length;I<F;I++){const U=c[I];if(U.cacheKey===R){D=U,++D.usedTimes;break}}return D===void 0&&(D=new xA(t,R,S,a),c.push(D)),D}function E(S){if(--S.usedTimes==0){const R=c.indexOf(S);c[R]=c[c.length-1],c.pop(),S.destroy()}}function A(S){l.remove(S)}function L(){l.dispose()}return{getParameters:v,getProgramCacheKey:b,getUniforms:y,acquireProgram:w,releaseProgram:E,releaseShaderCache:A,programs:c,dispose:L}}function SA(){let t=new WeakMap;function e(a){let s=t.get(a);return s===void 0&&(s={},t.set(a,s)),s}function n(a){t.delete(a)}function i(a,s,o){t.get(a)[s]=o}function r(){t=new WeakMap}return{get:e,remove:n,update:i,dispose:r}}function EA(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function Ly(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Cy(){const t=[];let e=0;const n=[],i=[],r=[];function a(){e=0,n.length=0,i.length=0,r.length=0}function s(u,f,d,p,m,x){let g=t[e];return g===void 0?(g={id:u.id,object:u,geometry:f,material:d,groupOrder:p,renderOrder:u.renderOrder,z:m,group:x},t[e]=g):(g.id=u.id,g.object=u,g.geometry=f,g.material=d,g.groupOrder=p,g.renderOrder=u.renderOrder,g.z=m,g.group=x),e++,g}function o(u,f,d,p,m,x){const g=s(u,f,d,p,m,x);d.transmission>0?i.push(g):d.transparent===!0?r.push(g):n.push(g)}function l(u,f,d,p,m,x){const g=s(u,f,d,p,m,x);d.transmission>0?i.unshift(g):d.transparent===!0?r.unshift(g):n.unshift(g)}function c(u,f){n.length>1&&n.sort(u||EA),i.length>1&&i.sort(f||Ly),r.length>1&&r.sort(f||Ly)}function h(){for(let u=e,f=t.length;u<f;u++){const d=t[u];if(d.id===null)break;d.id=null,d.object=null,d.geometry=null,d.material=null,d.group=null}}return{opaque:n,transmissive:i,transparent:r,init:a,push:o,unshift:l,finish:h,sort:c}}function TA(){let t=new WeakMap;function e(i,r){let a;return t.has(i)===!1?(a=new Cy,t.set(i,[a])):r>=t.get(i).length?(a=new Cy,t.get(i).push(a)):a=t.get(i)[r],a}function n(){t=new WeakMap}return{get:e,dispose:n}}function AA(){const t={};return{get:function(e){if(t[e.id]!==void 0)return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new k,color:new We};break;case"SpotLight":n={position:new k,direction:new k,color:new We,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new k,color:new We,distance:0,decay:0};break;case"HemisphereLight":n={direction:new k,skyColor:new We,groundColor:new We};break;case"RectAreaLight":n={color:new We,position:new k,halfWidth:new k,halfHeight:new k};break}return t[e.id]=n,n}}}function LA(){const t={};return{get:function(e){if(t[e.id]!==void 0)return t[e.id];let n;switch(e.type){case"DirectionalLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Te};break;case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Te};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Te,shadowCameraNear:1,shadowCameraFar:1e3};break}return t[e.id]=n,n}}}let CA=0;function RA(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function PA(t,e){const n=new AA,i=LA(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let h=0;h<9;h++)r.probe.push(new k);const a=new k,s=new Fe,o=new Fe;function l(h,u){let f=0,d=0,p=0;for(let A=0;A<9;A++)r.probe[A].set(0,0,0);let m=0,x=0,g=0,v=0,b=0,_=0,M=0,y=0;h.sort(RA);const w=u!==!0?Math.PI:1;for(let A=0,L=h.length;A<L;A++){const S=h[A],R=S.color,D=S.intensity,I=S.distance,F=S.shadow&&S.shadow.map?S.shadow.map.texture:null;if(S.isAmbientLight)f+=R.r*D*w,d+=R.g*D*w,p+=R.b*D*w;else if(S.isLightProbe)for(let U=0;U<9;U++)r.probe[U].addScaledVector(S.sh.coefficients[U],D);else if(S.isDirectionalLight){const U=n.get(S);if(U.color.copy(S.color).multiplyScalar(S.intensity*w),S.castShadow){const j=S.shadow,Y=i.get(S);Y.shadowBias=j.bias,Y.shadowNormalBias=j.normalBias,Y.shadowRadius=j.radius,Y.shadowMapSize=j.mapSize,r.directionalShadow[m]=Y,r.directionalShadowMap[m]=F,r.directionalShadowMatrix[m]=S.shadow.matrix,_++}r.directional[m]=U,m++}else if(S.isSpotLight){const U=n.get(S);if(U.position.setFromMatrixPosition(S.matrixWorld),U.color.copy(R).multiplyScalar(D*w),U.distance=I,U.coneCos=Math.cos(S.angle),U.penumbraCos=Math.cos(S.angle*(1-S.penumbra)),U.decay=S.decay,S.castShadow){const j=S.shadow,Y=i.get(S);Y.shadowBias=j.bias,Y.shadowNormalBias=j.normalBias,Y.shadowRadius=j.radius,Y.shadowMapSize=j.mapSize,r.spotShadow[g]=Y,r.spotShadowMap[g]=F,r.spotShadowMatrix[g]=S.shadow.matrix,y++}r.spot[g]=U,g++}else if(S.isRectAreaLight){const U=n.get(S);U.color.copy(R).multiplyScalar(D),U.halfWidth.set(S.width*.5,0,0),U.halfHeight.set(0,S.height*.5,0),r.rectArea[v]=U,v++}else if(S.isPointLight){const U=n.get(S);if(U.color.copy(S.color).multiplyScalar(S.intensity*w),U.distance=S.distance,U.decay=S.decay,S.castShadow){const j=S.shadow,Y=i.get(S);Y.shadowBias=j.bias,Y.shadowNormalBias=j.normalBias,Y.shadowRadius=j.radius,Y.shadowMapSize=j.mapSize,Y.shadowCameraNear=j.camera.near,Y.shadowCameraFar=j.camera.far,r.pointShadow[x]=Y,r.pointShadowMap[x]=F,r.pointShadowMatrix[x]=S.shadow.matrix,M++}r.point[x]=U,x++}else if(S.isHemisphereLight){const U=n.get(S);U.skyColor.copy(S.color).multiplyScalar(D*w),U.groundColor.copy(S.groundColor).multiplyScalar(D*w),r.hemi[b]=U,b++}}v>0&&(e.isWebGL2||t.has("OES_texture_float_linear")===!0?(r.rectAreaLTC1=Oe.LTC_FLOAT_1,r.rectAreaLTC2=Oe.LTC_FLOAT_2):t.has("OES_texture_half_float_linear")===!0?(r.rectAreaLTC1=Oe.LTC_HALF_1,r.rectAreaLTC2=Oe.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=f,r.ambient[1]=d,r.ambient[2]=p;const E=r.hash;(E.directionalLength!==m||E.pointLength!==x||E.spotLength!==g||E.rectAreaLength!==v||E.hemiLength!==b||E.numDirectionalShadows!==_||E.numPointShadows!==M||E.numSpotShadows!==y)&&(r.directional.length=m,r.spot.length=g,r.rectArea.length=v,r.point.length=x,r.hemi.length=b,r.directionalShadow.length=_,r.directionalShadowMap.length=_,r.pointShadow.length=M,r.pointShadowMap.length=M,r.spotShadow.length=y,r.spotShadowMap.length=y,r.directionalShadowMatrix.length=_,r.pointShadowMatrix.length=M,r.spotShadowMatrix.length=y,E.directionalLength=m,E.pointLength=x,E.spotLength=g,E.rectAreaLength=v,E.hemiLength=b,E.numDirectionalShadows=_,E.numPointShadows=M,E.numSpotShadows=y,r.version=CA++)}function c(h,u){let f=0,d=0,p=0,m=0,x=0;const g=u.matrixWorldInverse;for(let v=0,b=h.length;v<b;v++){const _=h[v];if(_.isDirectionalLight){const M=r.directional[f];M.direction.setFromMatrixPosition(_.matrixWorld),a.setFromMatrixPosition(_.target.matrixWorld),M.direction.sub(a),M.direction.transformDirection(g),f++}else if(_.isSpotLight){const M=r.spot[p];M.position.setFromMatrixPosition(_.matrixWorld),M.position.applyMatrix4(g),M.direction.setFromMatrixPosition(_.matrixWorld),a.setFromMatrixPosition(_.target.matrixWorld),M.direction.sub(a),M.direction.transformDirection(g),p++}else if(_.isRectAreaLight){const M=r.rectArea[m];M.position.setFromMatrixPosition(_.matrixWorld),M.position.applyMatrix4(g),o.identity(),s.copy(_.matrixWorld),s.premultiply(g),o.extractRotation(s),M.halfWidth.set(_.width*.5,0,0),M.halfHeight.set(0,_.height*.5,0),M.halfWidth.applyMatrix4(o),M.halfHeight.applyMatrix4(o),m++}else if(_.isPointLight){const M=r.point[d];M.position.setFromMatrixPosition(_.matrixWorld),M.position.applyMatrix4(g),d++}else if(_.isHemisphereLight){const M=r.hemi[x];M.direction.setFromMatrixPosition(_.matrixWorld),M.direction.transformDirection(g),M.direction.normalize(),x++}}}return{setup:l,setupView:c,state:r}}function Ry(t,e){const n=new PA(t,e),i=[],r=[];function a(){i.length=0,r.length=0}function s(u){i.push(u)}function o(u){r.push(u)}function l(u){n.setup(i,u)}function c(u){n.setupView(i,u)}return{init:a,state:{lightsArray:i,shadowsArray:r,lights:n},setupLights:l,setupLightsView:c,pushLight:s,pushShadow:o}}function DA(t,e){let n=new WeakMap;function i(a,s=0){let o;return n.has(a)===!1?(o=new Ry(t,e),n.set(a,[o])):s>=n.get(a).length?(o=new Ry(t,e),n.get(a).push(o)):o=n.get(a)[s],o}function r(){n=new WeakMap}return{get:i,dispose:r}}class Py extends mn{constructor(e){super();this.type="MeshDepthMaterial",this.depthPacking=kb,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}Py.prototype.isMeshDepthMaterial=!0;class Dy extends mn{constructor(e){super();this.type="MeshDistanceMaterial",this.referencePosition=new k,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}Dy.prototype.isMeshDistanceMaterial=!0;const IA=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,FA=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function Iy(t,e,n){let i=new Yh;const r=new Te,a=new Te,s=new yt,o=new Py({depthPacking:Wb}),l=new Dy,c={},h=n.maxTextureSize,u={0:Qt,1:gl,2:os},f=new fa({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Te},radius:{value:4}},vertexShader:IA,fragmentShader:FA}),d=f.clone();d.defines.HORIZONTAL_PASS=1;const p=new wt;p.setAttribute("position",new tn(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const m=new Tn(p,f),x=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Kg,this.render=function(_,M,y){if(x.enabled===!1||x.autoUpdate===!1&&x.needsUpdate===!1||_.length===0)return;const w=t.getRenderTarget(),E=t.getActiveCubeFace(),A=t.getActiveMipmapLevel(),L=t.state;L.setBlending(wr),L.buffers.color.setClear(1,1,1,1),L.buffers.depth.setTest(!0),L.setScissorTest(!1);for(let S=0,R=_.length;S<R;S++){const D=_[S],I=D.shadow;if(I===void 0){console.warn("THREE.WebGLShadowMap:",D,"has no shadow.");continue}if(I.autoUpdate===!1&&I.needsUpdate===!1)continue;r.copy(I.mapSize);const F=I.getFrameExtents();if(r.multiply(F),a.copy(I.mapSize),(r.x>h||r.y>h)&&(r.x>h&&(a.x=Math.floor(h/F.x),r.x=a.x*F.x,I.mapSize.x=a.x),r.y>h&&(a.y=Math.floor(h/F.y),r.y=a.y*F.y,I.mapSize.y=a.y)),I.map===null&&!I.isPointLightShadow&&this.type===ml){const j={minFilter:dn,magFilter:dn,format:pn};I.map=new Jn(r.x,r.y,j),I.map.texture.name=D.name+".shadowMap",I.mapPass=new Jn(r.x,r.y,j),I.camera.updateProjectionMatrix()}if(I.map===null){const j={minFilter:en,magFilter:en,format:pn};I.map=new Jn(r.x,r.y,j),I.map.texture.name=D.name+".shadowMap",I.camera.updateProjectionMatrix()}t.setRenderTarget(I.map),t.clear();const U=I.getViewportCount();for(let j=0;j<U;j++){const Y=I.getViewport(j);s.set(a.x*Y.x,a.y*Y.y,a.x*Y.z,a.y*Y.w),L.viewport(s),I.updateMatrices(D,j),i=I.getFrustum(),b(M,y,I.camera,D,this.type)}!I.isPointLightShadow&&this.type===ml&&g(I,y),I.needsUpdate=!1}x.needsUpdate=!1,t.setRenderTarget(w,E,A)};function g(_,M){const y=e.update(m);f.defines.VSM_SAMPLES!==_.blurSamples&&(f.defines.VSM_SAMPLES=_.blurSamples,d.defines.VSM_SAMPLES=_.blurSamples,f.needsUpdate=!0,d.needsUpdate=!0),f.uniforms.shadow_pass.value=_.map.texture,f.uniforms.resolution.value=_.mapSize,f.uniforms.radius.value=_.radius,t.setRenderTarget(_.mapPass),t.clear(),t.renderBufferDirect(M,null,y,f,m,null),d.uniforms.shadow_pass.value=_.mapPass.texture,d.uniforms.resolution.value=_.mapSize,d.uniforms.radius.value=_.radius,t.setRenderTarget(_.map),t.clear(),t.renderBufferDirect(M,null,y,d,m,null)}function v(_,M,y,w,E,A,L){let S=null;const R=w.isPointLight===!0?_.customDistanceMaterial:_.customDepthMaterial;if(R!==void 0?S=R:S=w.isPointLight===!0?l:o,t.localClippingEnabled&&y.clipShadows===!0&&y.clippingPlanes.length!==0||y.displacementMap&&y.displacementScale!==0||y.alphaMap&&y.alphaTest>0){const D=S.uuid,I=y.uuid;let F=c[D];F===void 0&&(F={},c[D]=F);let U=F[I];U===void 0&&(U=S.clone(),F[I]=U),S=U}return S.visible=y.visible,S.wireframe=y.wireframe,L===ml?S.side=y.shadowSide!==null?y.shadowSide:y.side:S.side=y.shadowSide!==null?y.shadowSide:u[y.side],S.alphaMap=y.alphaMap,S.alphaTest=y.alphaTest,S.clipShadows=y.clipShadows,S.clippingPlanes=y.clippingPlanes,S.clipIntersection=y.clipIntersection,S.displacementMap=y.displacementMap,S.displacementScale=y.displacementScale,S.displacementBias=y.displacementBias,S.wireframeLinewidth=y.wireframeLinewidth,S.linewidth=y.linewidth,w.isPointLight===!0&&S.isMeshDistanceMaterial===!0&&(S.referencePosition.setFromMatrixPosition(w.matrixWorld),S.nearDistance=E,S.farDistance=A),S}function b(_,M,y,w,E){if(_.visible===!1)return;if(_.layers.test(M.layers)&&(_.isMesh||_.isLine||_.isPoints)&&(_.castShadow||_.receiveShadow&&E===ml)&&(!_.frustumCulled||i.intersectsObject(_))){_.modelViewMatrix.multiplyMatrices(y.matrixWorldInverse,_.matrixWorld);const S=e.update(_),R=_.material;if(Array.isArray(R)){const D=S.groups;for(let I=0,F=D.length;I<F;I++){const U=D[I],j=R[U.materialIndex];if(j&&j.visible){const Y=v(_,S,j,w,y.near,y.far,E);t.renderBufferDirect(y,null,S,Y,_,U)}}}else if(R.visible){const D=v(_,S,R,w,y.near,y.far,E);t.renderBufferDirect(y,null,S,D,_,null)}}const L=_.children;for(let S=0,R=L.length;S<R;S++)b(L[S],M,y,w,E)}}function BA(t,e,n){const i=n.isWebGL2;function r(){let W=!1;const ce=new yt;let be=null;const Ie=new yt(0,0,0,0);return{setMask:function(se){be!==se&&!W&&(t.colorMask(se,se,se,se),be=se)},setLocked:function(se){W=se},setClear:function(se,Be,je,ot,At){At===!0&&(se*=ot,Be*=ot,je*=ot),ce.set(se,Be,je,ot),Ie.equals(ce)===!1&&(t.clearColor(se,Be,je,ot),Ie.copy(ce))},reset:function(){W=!1,be=null,Ie.set(-1,0,0,0)}}}function a(){let W=!1,ce=null,be=null,Ie=null;return{setTest:function(se){se?Z(2929):ie(2929)},setMask:function(se){ce!==se&&!W&&(t.depthMask(se),ce=se)},setFunc:function(se){if(be!==se){if(se)switch(se){case cb:t.depthFunc(512);break;case hb:t.depthFunc(519);break;case ub:t.depthFunc(513);break;case pd:t.depthFunc(515);break;case fb:t.depthFunc(514);break;case db:t.depthFunc(518);break;case pb:t.depthFunc(516);break;case mb:t.depthFunc(517);break;default:t.depthFunc(515)}else t.depthFunc(515);be=se}},setLocked:function(se){W=se},setClear:function(se){Ie!==se&&(t.clearDepth(se),Ie=se)},reset:function(){W=!1,ce=null,be=null,Ie=null}}}function s(){let W=!1,ce=null,be=null,Ie=null,se=null,Be=null,je=null,ot=null,At=null;return{setTest:function(pt){W||(pt?Z(2960):ie(2960))},setMask:function(pt){ce!==pt&&!W&&(t.stencilMask(pt),ce=pt)},setFunc:function(pt,wn,Ht){(be!==pt||Ie!==wn||se!==Ht)&&(t.stencilFunc(pt,wn,Ht),be=pt,Ie=wn,se=Ht)},setOp:function(pt,wn,Ht){(Be!==pt||je!==wn||ot!==Ht)&&(t.stencilOp(pt,wn,Ht),Be=pt,je=wn,ot=Ht)},setLocked:function(pt){W=pt},setClear:function(pt){At!==pt&&(t.clearStencil(pt),At=pt)},reset:function(){W=!1,ce=null,be=null,Ie=null,se=null,Be=null,je=null,ot=null,At=null}}}const o=new r,l=new a,c=new s;let h={},u={},f=new WeakMap,d=[],p=null,m=!1,x=null,g=null,v=null,b=null,_=null,M=null,y=null,w=!1,E=null,A=null,L=null,S=null,R=null;const D=t.getParameter(35661);let I=!1,F=0;const U=t.getParameter(7938);U.indexOf("WebGL")!==-1?(F=parseFloat(/^WebGL (\d)/.exec(U)[1]),I=F>=1):U.indexOf("OpenGL ES")!==-1&&(F=parseFloat(/^OpenGL ES (\d)/.exec(U)[1]),I=F>=2);let j=null,Y={};const K=t.getParameter(3088),X=t.getParameter(2978),q=new yt().fromArray(K),he=new yt().fromArray(X);function Se(W,ce,be){const Ie=new Uint8Array(4),se=t.createTexture();t.bindTexture(W,se),t.texParameteri(W,10241,9728),t.texParameteri(W,10240,9728);for(let Be=0;Be<be;Be++)t.texImage2D(ce+Be,0,6408,1,1,0,6408,5121,Ie);return se}const _e={};_e[3553]=Se(3553,3553,1),_e[34067]=Se(34067,34069,6),o.setClear(0,0,0,1),l.setClear(1),c.setClear(0),Z(2929),l.setFunc(pd),pe(!1),De(Jg),Z(2884),ee(wr);function Z(W){h[W]!==!0&&(t.enable(W),h[W]=!0)}function ie(W){h[W]!==!1&&(t.disable(W),h[W]=!1)}function Le(W,ce){return u[W]!==ce?(t.bindFramebuffer(W,ce),u[W]=ce,i&&(W===36009&&(u[36160]=ce),W===36160&&(u[36009]=ce)),!0):!1}function Ee(W,ce){let be=d,Ie=!1;if(W)if(be=f.get(ce),be===void 0&&(be=[],f.set(ce,be)),W.isWebGLMultipleRenderTargets){const se=W.texture;if(be.length!==se.length||be[0]!==36064){for(let Be=0,je=se.length;Be<je;Be++)be[Be]=36064+Be;be.length=se.length,Ie=!0}}else be[0]!==36064&&(be[0]=36064,Ie=!0);else be[0]!==1029&&(be[0]=1029,Ie=!0);Ie&&(n.isWebGL2?t.drawBuffers(be):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(be))}function we(W){return p!==W?(t.useProgram(W),p=W,!0):!1}const Ae={[ls]:32774,[Kw]:32778,[Qw]:32779};if(i)Ae[iv]=32775,Ae[rv]=32776;else{const W=e.get("EXT_blend_minmax");W!==null&&(Ae[iv]=W.MIN_EXT,Ae[rv]=W.MAX_EXT)}const ae={[eb]:0,[tb]:1,[nb]:768,[av]:770,[lb]:776,[sb]:774,[rb]:772,[ib]:769,[sv]:771,[ob]:775,[ab]:773};function ee(W,ce,be,Ie,se,Be,je,ot){if(W===wr){m===!0&&(ie(3042),m=!1);return}if(m===!1&&(Z(3042),m=!0),W!==Jw){if(W!==x||ot!==w){if((g!==ls||_!==ls)&&(t.blendEquation(32774),g=ls,_=ls),ot)switch(W){case vl:t.blendFuncSeparate(1,771,1,771);break;case ev:t.blendFunc(1,1);break;case tv:t.blendFuncSeparate(0,769,0,1);break;case nv:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",W);break}else switch(W){case vl:t.blendFuncSeparate(770,771,1,771);break;case ev:t.blendFunc(770,1);break;case tv:t.blendFuncSeparate(0,769,0,1);break;case nv:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",W);break}v=null,b=null,M=null,y=null,x=W,w=ot}return}se=se||ce,Be=Be||be,je=je||Ie,(ce!==g||se!==_)&&(t.blendEquationSeparate(Ae[ce],Ae[se]),g=ce,_=se),(be!==v||Ie!==b||Be!==M||je!==y)&&(t.blendFuncSeparate(ae[be],ae[Ie],ae[Be],ae[je]),v=be,b=Ie,M=Be,y=je),x=W,w=null}function ve(W,ce){W.side===os?ie(2884):Z(2884);let be=W.side===Qt;ce&&(be=!be),pe(be),W.blending===vl&&W.transparent===!1?ee(wr):ee(W.blending,W.blendEquation,W.blendSrc,W.blendDst,W.blendEquationAlpha,W.blendSrcAlpha,W.blendDstAlpha,W.premultipliedAlpha),l.setFunc(W.depthFunc),l.setTest(W.depthTest),l.setMask(W.depthWrite),o.setMask(W.colorWrite);const Ie=W.stencilWrite;c.setTest(Ie),Ie&&(c.setMask(W.stencilWriteMask),c.setFunc(W.stencilFunc,W.stencilRef,W.stencilFuncMask),c.setOp(W.stencilFail,W.stencilZFail,W.stencilZPass)),O(W.polygonOffset,W.polygonOffsetFactor,W.polygonOffsetUnits),W.alphaToCoverage===!0?Z(32926):ie(32926)}function pe(W){E!==W&&(W?t.frontFace(2304):t.frontFace(2305),E=W)}function De(W){W!==qw?(Z(2884),W!==A&&(W===Jg?t.cullFace(1029):W===Yw?t.cullFace(1028):t.cullFace(1032))):ie(2884),A=W}function Ce(W){W!==L&&(I&&t.lineWidth(W),L=W)}function O(W,ce,be){W?(Z(32823),(S!==ce||R!==be)&&(t.polygonOffset(ce,be),S=ce,R=be)):ie(32823)}function G(W){W?Z(3089):ie(3089)}function ye(W){W===void 0&&(W=33984+D-1),j!==W&&(t.activeTexture(W),j=W)}function de(W,ce){j===null&&ye();let be=Y[j];be===void 0&&(be={type:void 0,texture:void 0},Y[j]=be),(be.type!==W||be.texture!==ce)&&(t.bindTexture(W,ce||_e[W]),be.type=W,be.texture=ce)}function He(){const W=Y[j];W!==void 0&&W.type!==void 0&&(t.bindTexture(W.type,null),W.type=void 0,W.texture=void 0)}function N(){try{t.compressedTexImage2D.apply(t,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function P(){try{t.texSubImage2D.apply(t,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function te(){try{t.texSubImage3D.apply(t,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function fe(){try{t.compressedTexSubImage2D.apply(t,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function me(){try{t.texStorage2D.apply(t,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function J(){try{t.texStorage3D.apply(t,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function xe(){try{t.texImage2D.apply(t,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function V(){try{t.texImage3D.apply(t,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function B(W){q.equals(W)===!1&&(t.scissor(W.x,W.y,W.z,W.w),q.copy(W))}function Q(W){he.equals(W)===!1&&(t.viewport(W.x,W.y,W.z,W.w),he.copy(W))}function ue(){t.disable(3042),t.disable(2884),t.disable(2929),t.disable(32823),t.disable(3089),t.disable(2960),t.disable(32926),t.blendEquation(32774),t.blendFunc(1,0),t.blendFuncSeparate(1,0,1,0),t.colorMask(!0,!0,!0,!0),t.clearColor(0,0,0,0),t.depthMask(!0),t.depthFunc(513),t.clearDepth(1),t.stencilMask(4294967295),t.stencilFunc(519,0,4294967295),t.stencilOp(7680,7680,7680),t.clearStencil(0),t.cullFace(1029),t.frontFace(2305),t.polygonOffset(0,0),t.activeTexture(33984),t.bindFramebuffer(36160,null),i===!0&&(t.bindFramebuffer(36009,null),t.bindFramebuffer(36008,null)),t.useProgram(null),t.lineWidth(1),t.scissor(0,0,t.canvas.width,t.canvas.height),t.viewport(0,0,t.canvas.width,t.canvas.height),h={},j=null,Y={},u={},f=new WeakMap,d=[],p=null,m=!1,x=null,g=null,v=null,b=null,_=null,M=null,y=null,w=!1,E=null,A=null,L=null,S=null,R=null,q.set(0,0,t.canvas.width,t.canvas.height),he.set(0,0,t.canvas.width,t.canvas.height),o.reset(),l.reset(),c.reset()}return{buffers:{color:o,depth:l,stencil:c},enable:Z,disable:ie,bindFramebuffer:Le,drawBuffers:Ee,useProgram:we,setBlending:ee,setMaterial:ve,setFlipSided:pe,setCullFace:De,setLineWidth:Ce,setPolygonOffset:O,setScissorTest:G,activeTexture:ye,bindTexture:de,unbindTexture:He,compressedTexImage2D:N,texImage2D:xe,texImage3D:V,texStorage2D:me,texStorage3D:J,texSubImage2D:P,texSubImage3D:te,compressedTexSubImage2D:fe,scissor:B,viewport:Q,reset:ue}}function OA(t,e,n,i,r,a,s){const o=r.isWebGL2,l=r.maxTextures,c=r.maxCubemapSize,h=r.maxTextureSize,u=r.maxSamples,d=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):void 0,p=new WeakMap;let m,x=!1;try{x=typeof OffscreenCanvas!="undefined"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function g(N,P){return x?new OffscreenCanvas(N,P):Tl("canvas")}function v(N,P,te,fe){let me=1;if((N.width>fe||N.height>fe)&&(me=fe/Math.max(N.width,N.height)),me<1||P===!0)if(typeof HTMLImageElement!="undefined"&&N instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&N instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&N instanceof ImageBitmap){const J=P?Fv:Math.floor,xe=J(me*N.width),V=J(me*N.height);m===void 0&&(m=g(xe,V));const B=te?g(xe,V):m;return B.width=xe,B.height=V,B.getContext("2d").drawImage(N,0,0,xe,V),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+N.width+"x"+N.height+") to ("+xe+"x"+V+")."),B}else return"data"in N&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+N.width+"x"+N.height+")."),N;return N}function b(N){return Ad(N.width)&&Ad(N.height)}function _(N){return o?!1:N.wrapS!==Sn||N.wrapT!==Sn||N.minFilter!==en&&N.minFilter!==dn}function M(N,P){return N.generateMipmaps&&P&&N.minFilter!==en&&N.minFilter!==dn}function y(N){t.generateMipmap(N)}function w(N,P,te,fe,me=!1){if(o===!1)return P;if(N!==null){if(t[N]!==void 0)return t[N];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+N+"'")}let J=P;return P===6403&&(te===5126&&(J=33326),te===5131&&(J=33325),te===5121&&(J=33321)),P===33319&&(te===5126&&(J=33328),te===5131&&(J=33327),te===5121&&(J=33323)),P===6408&&(te===5126&&(J=34836),te===5131&&(J=34842),te===5121&&(J=fe===Mt&&me===!1?35907:32856),te===32819&&(J=32854),te===32820&&(J=32855)),(J===33325||J===33326||J===33327||J===33328||J===34842||J===34836)&&e.get("EXT_color_buffer_float"),J}function E(N,P,te){return M(N,te)===!0||N.isFramebufferTexture&&N.minFilter!==en&&N.minFilter!==dn?Math.log2(Math.max(P.width,P.height))+1:N.mipmaps!==void 0&&N.mipmaps.length>0?N.mipmaps.length:N.isCompressedTexture&&Array.isArray(N.image)?P.mipmaps.length:1}function A(N){return N===en||N===lv||N===cv?9728:9729}function L(N){const P=N.target;P.removeEventListener("dispose",L),R(P),P.isVideoTexture&&p.delete(P),s.memory.textures--}function S(N){const P=N.target;P.removeEventListener("dispose",S),D(P)}function R(N){const P=i.get(N);P.__webglInit!==void 0&&(t.deleteTexture(P.__webglTexture),i.remove(N))}function D(N){const P=N.texture,te=i.get(N),fe=i.get(P);if(!!N){if(fe.__webglTexture!==void 0&&(t.deleteTexture(fe.__webglTexture),s.memory.textures--),N.depthTexture&&N.depthTexture.dispose(),N.isWebGLCubeRenderTarget)for(let me=0;me<6;me++)t.deleteFramebuffer(te.__webglFramebuffer[me]),te.__webglDepthbuffer&&t.deleteRenderbuffer(te.__webglDepthbuffer[me]);else t.deleteFramebuffer(te.__webglFramebuffer),te.__webglDepthbuffer&&t.deleteRenderbuffer(te.__webglDepthbuffer),te.__webglMultisampledFramebuffer&&t.deleteFramebuffer(te.__webglMultisampledFramebuffer),te.__webglColorRenderbuffer&&t.deleteRenderbuffer(te.__webglColorRenderbuffer),te.__webglDepthRenderbuffer&&t.deleteRenderbuffer(te.__webglDepthRenderbuffer);if(N.isWebGLMultipleRenderTargets)for(let me=0,J=P.length;me<J;me++){const xe=i.get(P[me]);xe.__webglTexture&&(t.deleteTexture(xe.__webglTexture),s.memory.textures--),i.remove(P[me])}i.remove(P),i.remove(N)}}let I=0;function F(){I=0}function U(){const N=I;return N>=l&&console.warn("THREE.WebGLTextures: Trying to use "+N+" texture units while this GPU supports only "+l),I+=1,N}function j(N,P){const te=i.get(N);if(N.isVideoTexture&&Ce(N),N.version>0&&te.__version!==N.version){const fe=N.image;if(fe===void 0)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(fe.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Z(te,N,P);return}}n.activeTexture(33984+P),n.bindTexture(3553,te.__webglTexture)}function Y(N,P){const te=i.get(N);if(N.version>0&&te.__version!==N.version){Z(te,N,P);return}n.activeTexture(33984+P),n.bindTexture(35866,te.__webglTexture)}function K(N,P){const te=i.get(N);if(N.version>0&&te.__version!==N.version){Z(te,N,P);return}n.activeTexture(33984+P),n.bindTexture(32879,te.__webglTexture)}function X(N,P){const te=i.get(N);if(N.version>0&&te.__version!==N.version){ie(te,N,P);return}n.activeTexture(33984+P),n.bindTexture(34067,te.__webglTexture)}const q={[_l]:10497,[Sn]:33071,[vd]:33648},he={[en]:9728,[lv]:9984,[cv]:9986,[dn]:9729,[bb]:9985,[bh]:9987};function Se(N,P,te){if(te?(t.texParameteri(N,10242,q[P.wrapS]),t.texParameteri(N,10243,q[P.wrapT]),(N===32879||N===35866)&&t.texParameteri(N,32882,q[P.wrapR]),t.texParameteri(N,10240,he[P.magFilter]),t.texParameteri(N,10241,he[P.minFilter])):(t.texParameteri(N,10242,33071),t.texParameteri(N,10243,33071),(N===32879||N===35866)&&t.texParameteri(N,32882,33071),(P.wrapS!==Sn||P.wrapT!==Sn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(N,10240,A(P.magFilter)),t.texParameteri(N,10241,A(P.minFilter)),P.minFilter!==en&&P.minFilter!==dn&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const fe=e.get("EXT_texture_filter_anisotropic");if(P.type===Er&&e.has("OES_texture_float_linear")===!1||o===!1&&P.type===cs&&e.has("OES_texture_half_float_linear")===!1)return;(P.anisotropy>1||i.get(P).__currentAnisotropy)&&(t.texParameterf(N,fe.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(P.anisotropy,r.getMaxAnisotropy())),i.get(P).__currentAnisotropy=P.anisotropy)}}function _e(N,P){N.__webglInit===void 0&&(N.__webglInit=!0,P.addEventListener("dispose",L),N.__webglTexture=t.createTexture(),s.memory.textures++)}function Z(N,P,te){let fe=3553;P.isDataTexture2DArray&&(fe=35866),P.isDataTexture3D&&(fe=32879),_e(N,P),n.activeTexture(33984+te),n.bindTexture(fe,N.__webglTexture),t.pixelStorei(37440,P.flipY),t.pixelStorei(37441,P.premultiplyAlpha),t.pixelStorei(3317,P.unpackAlignment),t.pixelStorei(37443,0);const me=_(P)&&b(P.image)===!1;let J=v(P.image,me,!1,h);J=O(P,J);const xe=b(J)||o,V=a.convert(P.format,P.encoding);let B=a.convert(P.type),Q=w(P.internalFormat,V,B,P.encoding,P.isVideoTexture);Se(fe,P,xe);let ue;const W=P.mipmaps,ce=o&&P.isVideoTexture!==!0,be=N.__version===void 0,Ie=E(P,J,xe);if(P.isDepthTexture)Q=6402,o?P.type===Er?Q=36012:P.type===Sh?Q=33190:P.type===hs?Q=35056:Q=33189:P.type===Er&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),P.format===oa&&Q===6402&&P.type!==Ml&&P.type!==Sh&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),P.type=Ml,B=a.convert(P.type)),P.format===us&&Q===6402&&(Q=34041,P.type!==hs&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),P.type=hs,B=a.convert(P.type))),ce&&be?n.texStorage2D(3553,1,Q,J.width,J.height):n.texImage2D(3553,0,Q,J.width,J.height,0,V,B,null);else if(P.isDataTexture)if(W.length>0&&xe){ce&&be&&n.texStorage2D(3553,Ie,Q,W[0].width,W[0].height);for(let se=0,Be=W.length;se<Be;se++)ue=W[se],ce?n.texSubImage2D(3553,0,0,0,ue.width,ue.height,V,B,ue.data):n.texImage2D(3553,se,Q,ue.width,ue.height,0,V,B,ue.data);P.generateMipmaps=!1}else ce?(be&&n.texStorage2D(3553,Ie,Q,J.width,J.height),n.texSubImage2D(3553,0,0,0,J.width,J.height,V,B,J.data)):n.texImage2D(3553,0,Q,J.width,J.height,0,V,B,J.data);else if(P.isCompressedTexture){ce&&be&&n.texStorage2D(3553,Ie,Q,W[0].width,W[0].height);for(let se=0,Be=W.length;se<Be;se++)ue=W[se],P.format!==pn?V!==null?ce?n.compressedTexSubImage2D(3553,se,0,0,ue.width,ue.height,V,ue.data):n.compressedTexImage2D(3553,se,Q,ue.width,ue.height,0,ue.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):ce?n.texSubImage2D(3553,se,0,0,ue.width,ue.height,V,B,ue.data):n.texImage2D(3553,se,Q,ue.width,ue.height,0,V,B,ue.data)}else if(P.isDataTexture2DArray)ce?(be&&n.texStorage3D(35866,Ie,Q,J.width,J.height,J.depth),n.texSubImage3D(35866,0,0,0,0,J.width,J.height,J.depth,V,B,J.data)):n.texImage3D(35866,0,Q,J.width,J.height,J.depth,0,V,B,J.data);else if(P.isDataTexture3D)ce?(be&&n.texStorage3D(32879,Ie,Q,J.width,J.height,J.depth),n.texSubImage3D(32879,0,0,0,0,J.width,J.height,J.depth,V,B,J.data)):n.texImage3D(32879,0,Q,J.width,J.height,J.depth,0,V,B,J.data);else if(P.isFramebufferTexture)ce&&be?n.texStorage2D(3553,Ie,Q,J.width,J.height):n.texImage2D(3553,0,Q,J.width,J.height,0,V,B,null);else if(W.length>0&&xe){ce&&be&&n.texStorage2D(3553,Ie,Q,W[0].width,W[0].height);for(let se=0,Be=W.length;se<Be;se++)ue=W[se],ce?n.texSubImage2D(3553,se,0,0,V,B,ue):n.texImage2D(3553,se,Q,V,B,ue);P.generateMipmaps=!1}else ce?(be&&n.texStorage2D(3553,Ie,Q,J.width,J.height),n.texSubImage2D(3553,0,0,0,V,B,J)):n.texImage2D(3553,0,Q,V,B,J);M(P,xe)&&y(fe),N.__version=P.version,P.onUpdate&&P.onUpdate(P)}function ie(N,P,te){if(P.image.length!==6)return;_e(N,P),n.activeTexture(33984+te),n.bindTexture(34067,N.__webglTexture),t.pixelStorei(37440,P.flipY),t.pixelStorei(37441,P.premultiplyAlpha),t.pixelStorei(3317,P.unpackAlignment),t.pixelStorei(37443,0);const fe=P&&(P.isCompressedTexture||P.image[0].isCompressedTexture),me=P.image[0]&&P.image[0].isDataTexture,J=[];for(let se=0;se<6;se++)!fe&&!me?J[se]=v(P.image[se],!1,!0,c):J[se]=me?P.image[se].image:P.image[se],J[se]=O(P,J[se]);const xe=J[0],V=b(xe)||o,B=a.convert(P.format,P.encoding),Q=a.convert(P.type),ue=w(P.internalFormat,B,Q,P.encoding),W=o&&P.isVideoTexture!==!0,ce=N.__version===void 0;let be=E(P,xe,V);Se(34067,P,V);let Ie;if(fe){W&&ce&&n.texStorage2D(34067,be,ue,xe.width,xe.height);for(let se=0;se<6;se++){Ie=J[se].mipmaps;for(let Be=0;Be<Ie.length;Be++){const je=Ie[Be];P.format!==pn?B!==null?W?n.compressedTexSubImage2D(34069+se,Be,0,0,je.width,je.height,B,je.data):n.compressedTexImage2D(34069+se,Be,ue,je.width,je.height,0,je.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):W?n.texSubImage2D(34069+se,Be,0,0,je.width,je.height,B,Q,je.data):n.texImage2D(34069+se,Be,ue,je.width,je.height,0,B,Q,je.data)}}}else{Ie=P.mipmaps,W&&ce&&(Ie.length>0&&be++,n.texStorage2D(34067,be,ue,J[0].width,J[0].height));for(let se=0;se<6;se++)if(me){W?n.texSubImage2D(34069+se,0,0,0,J[se].width,J[se].height,B,Q,J[se].data):n.texImage2D(34069+se,0,ue,J[se].width,J[se].height,0,B,Q,J[se].data);for(let Be=0;Be<Ie.length;Be++){const ot=Ie[Be].image[se].image;W?n.texSubImage2D(34069+se,Be+1,0,0,ot.width,ot.height,B,Q,ot.data):n.texImage2D(34069+se,Be+1,ue,ot.width,ot.height,0,B,Q,ot.data)}}else{W?n.texSubImage2D(34069+se,0,0,0,B,Q,J[se]):n.texImage2D(34069+se,0,ue,B,Q,J[se]);for(let Be=0;Be<Ie.length;Be++){const je=Ie[Be];W?n.texSubImage2D(34069+se,Be+1,0,0,B,Q,je.image[se]):n.texImage2D(34069+se,Be+1,ue,B,Q,je.image[se])}}}M(P,V)&&y(34067),N.__version=P.version,P.onUpdate&&P.onUpdate(P)}function Le(N,P,te,fe,me){const J=a.convert(te.format,te.encoding),xe=a.convert(te.type),V=w(te.internalFormat,J,xe,te.encoding);i.get(P).__hasExternalTextures||(me===32879||me===35866?n.texImage3D(me,0,V,P.width,P.height,P.depth,0,J,xe,null):n.texImage2D(me,0,V,P.width,P.height,0,J,xe,null)),n.bindFramebuffer(36160,N),P.useRenderToTexture?d.framebufferTexture2DMultisampleEXT(36160,fe,me,i.get(te).__webglTexture,0,De(P)):t.framebufferTexture2D(36160,fe,me,i.get(te).__webglTexture,0),n.bindFramebuffer(36160,null)}function Ee(N,P,te){if(t.bindRenderbuffer(36161,N),P.depthBuffer&&!P.stencilBuffer){let fe=33189;if(te||P.useRenderToTexture){const me=P.depthTexture;me&&me.isDepthTexture&&(me.type===Er?fe=36012:me.type===Sh&&(fe=33190));const J=De(P);P.useRenderToTexture?d.renderbufferStorageMultisampleEXT(36161,J,fe,P.width,P.height):t.renderbufferStorageMultisample(36161,J,fe,P.width,P.height)}else t.renderbufferStorage(36161,fe,P.width,P.height);t.framebufferRenderbuffer(36160,36096,36161,N)}else if(P.depthBuffer&&P.stencilBuffer){const fe=De(P);te&&P.useRenderbuffer?t.renderbufferStorageMultisample(36161,fe,35056,P.width,P.height):P.useRenderToTexture?d.renderbufferStorageMultisampleEXT(36161,fe,35056,P.width,P.height):t.renderbufferStorage(36161,34041,P.width,P.height),t.framebufferRenderbuffer(36160,33306,36161,N)}else{const fe=P.isWebGLMultipleRenderTargets===!0?P.texture[0]:P.texture,me=a.convert(fe.format,fe.encoding),J=a.convert(fe.type),xe=w(fe.internalFormat,me,J,fe.encoding),V=De(P);te&&P.useRenderbuffer?t.renderbufferStorageMultisample(36161,V,xe,P.width,P.height):P.useRenderToTexture?d.renderbufferStorageMultisampleEXT(36161,V,xe,P.width,P.height):t.renderbufferStorage(36161,xe,P.width,P.height)}t.bindRenderbuffer(36161,null)}function we(N,P){if(P&&P.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(36160,N),!(P.depthTexture&&P.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(P.depthTexture).__webglTexture||P.depthTexture.image.width!==P.width||P.depthTexture.image.height!==P.height)&&(P.depthTexture.image.width=P.width,P.depthTexture.image.height=P.height,P.depthTexture.needsUpdate=!0),j(P.depthTexture,0);const fe=i.get(P.depthTexture).__webglTexture,me=De(P);if(P.depthTexture.format===oa)P.useRenderToTexture?d.framebufferTexture2DMultisampleEXT(36160,36096,3553,fe,0,me):t.framebufferTexture2D(36160,36096,3553,fe,0);else if(P.depthTexture.format===us)P.useRenderToTexture?d.framebufferTexture2DMultisampleEXT(36160,33306,3553,fe,0,me):t.framebufferTexture2D(36160,33306,3553,fe,0);else throw new Error("Unknown depthTexture format")}function Ae(N){const P=i.get(N),te=N.isWebGLCubeRenderTarget===!0;if(N.depthTexture&&!P.__autoAllocateDepthBuffer){if(te)throw new Error("target.depthTexture not supported in Cube render targets");we(P.__webglFramebuffer,N)}else if(te){P.__webglDepthbuffer=[];for(let fe=0;fe<6;fe++)n.bindFramebuffer(36160,P.__webglFramebuffer[fe]),P.__webglDepthbuffer[fe]=t.createRenderbuffer(),Ee(P.__webglDepthbuffer[fe],N,!1)}else n.bindFramebuffer(36160,P.__webglFramebuffer),P.__webglDepthbuffer=t.createRenderbuffer(),Ee(P.__webglDepthbuffer,N,!1);n.bindFramebuffer(36160,null)}function ae(N,P,te){const fe=i.get(N);P!==void 0&&Le(fe.__webglFramebuffer,N,N.texture,36064,3553),te!==void 0&&Ae(N)}function ee(N){const P=N.texture,te=i.get(N),fe=i.get(P);N.addEventListener("dispose",S),N.isWebGLMultipleRenderTargets!==!0&&(fe.__webglTexture===void 0&&(fe.__webglTexture=t.createTexture()),fe.__version=P.version,s.memory.textures++);const me=N.isWebGLCubeRenderTarget===!0,J=N.isWebGLMultipleRenderTargets===!0,xe=P.isDataTexture3D||P.isDataTexture2DArray,V=b(N)||o;if(me){te.__webglFramebuffer=[];for(let B=0;B<6;B++)te.__webglFramebuffer[B]=t.createFramebuffer()}else if(te.__webglFramebuffer=t.createFramebuffer(),J)if(r.drawBuffers){const B=N.texture;for(let Q=0,ue=B.length;Q<ue;Q++){const W=i.get(B[Q]);W.__webglTexture===void 0&&(W.__webglTexture=t.createTexture(),s.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(N.useRenderbuffer)if(o){te.__webglMultisampledFramebuffer=t.createFramebuffer(),te.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(36161,te.__webglColorRenderbuffer);const B=a.convert(P.format,P.encoding),Q=a.convert(P.type),ue=w(P.internalFormat,B,Q,P.encoding),W=De(N);t.renderbufferStorageMultisample(36161,W,ue,N.width,N.height),n.bindFramebuffer(36160,te.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064,36161,te.__webglColorRenderbuffer),t.bindRenderbuffer(36161,null),N.depthBuffer&&(te.__webglDepthRenderbuffer=t.createRenderbuffer(),Ee(te.__webglDepthRenderbuffer,N,!0)),n.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(me){n.bindTexture(34067,fe.__webglTexture),Se(34067,P,V);for(let B=0;B<6;B++)Le(te.__webglFramebuffer[B],N,P,36064,34069+B);M(P,V)&&y(34067),n.unbindTexture()}else if(J){const B=N.texture;for(let Q=0,ue=B.length;Q<ue;Q++){const W=B[Q],ce=i.get(W);n.bindTexture(3553,ce.__webglTexture),Se(3553,W,V),Le(te.__webglFramebuffer,N,W,36064+Q,3553),M(W,V)&&y(3553)}n.unbindTexture()}else{let B=3553;xe&&(o?B=P.isDataTexture3D?32879:35866:console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")),n.bindTexture(B,fe.__webglTexture),Se(B,P,V),Le(te.__webglFramebuffer,N,P,36064,B),M(P,V)&&y(B),n.unbindTexture()}N.depthBuffer&&Ae(N)}function ve(N){const P=b(N)||o,te=N.isWebGLMultipleRenderTargets===!0?N.texture:[N.texture];for(let fe=0,me=te.length;fe<me;fe++){const J=te[fe];if(M(J,P)){const xe=N.isWebGLCubeRenderTarget?34067:3553,V=i.get(J).__webglTexture;n.bindTexture(xe,V),y(xe),n.unbindTexture()}}}function pe(N){if(N.useRenderbuffer)if(o){const P=N.width,te=N.height;let fe=16384;const me=[36064],J=N.stencilBuffer?33306:36096;N.depthBuffer&&me.push(J),N.ignoreDepthForMultisampleCopy||(N.depthBuffer&&(fe|=256),N.stencilBuffer&&(fe|=1024));const xe=i.get(N);n.bindFramebuffer(36008,xe.__webglMultisampledFramebuffer),n.bindFramebuffer(36009,xe.__webglFramebuffer),N.ignoreDepthForMultisampleCopy&&(t.invalidateFramebuffer(36008,[J]),t.invalidateFramebuffer(36009,[J])),t.blitFramebuffer(0,0,P,te,0,0,P,te,fe,9728),t.invalidateFramebuffer(36008,me),n.bindFramebuffer(36008,null),n.bindFramebuffer(36009,xe.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}function De(N){return o&&(N.useRenderbuffer||N.useRenderToTexture)?Math.min(u,N.samples):0}function Ce(N){const P=s.render.frame;p.get(N)!==P&&(p.set(N,P),N.update())}function O(N,P){const te=N.encoding,fe=N.format,me=N.type;return N.isCompressedTexture===!0||N.isVideoTexture===!0||N.format===Ed||te!==Tr&&(te===Mt?o===!1?e.has("EXT_sRGB")===!0&&fe===pn?(N.format=Ed,N.minFilter=dn,N.generateMipmaps=!1):P=la.sRGBToLinear(P):(fe!==pn||me!==Sr)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",te)),P}let G=!1,ye=!1;function de(N,P){N&&N.isWebGLRenderTarget&&(G===!1&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),G=!0),N=N.texture),j(N,P)}function He(N,P){N&&N.isWebGLCubeRenderTarget&&(ye===!1&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),ye=!0),N=N.texture),X(N,P)}this.allocateTextureUnit=U,this.resetTextureUnits=F,this.setTexture2D=j,this.setTexture2DArray=Y,this.setTexture3D=K,this.setTextureCube=X,this.rebindTextures=ae,this.setupRenderTarget=ee,this.updateRenderTargetMipmap=ve,this.updateMultisampleRenderTarget=pe,this.setupDepthRenderbuffer=Ae,this.setupFrameBufferTexture=Le,this.safeSetTexture2D=de,this.safeSetTextureCube=He}function NA(t,e,n){const i=n.isWebGL2;function r(a,s=null){let o;if(a===Sr)return 5121;if(a===Ab)return 32819;if(a===Lb)return 32820;if(a===Sb)return 5120;if(a===Eb)return 5122;if(a===Ml)return 5123;if(a===Tb)return 5124;if(a===Sh)return 5125;if(a===Er)return 5126;if(a===cs)return i?5131:(o=e.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(a===Cb)return 6406;if(a===pn)return 6408;if(a===Pb)return 6409;if(a===Db)return 6410;if(a===oa)return 6402;if(a===us)return 34041;if(a===Ib)return 6403;if(a===Rb)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(a===Ed)return o=e.get("EXT_sRGB"),o!==null?o.SRGB_ALPHA_EXT:null;if(a===Fb)return 36244;if(a===Bb)return 33319;if(a===Ob)return 33320;if(a===Nb)return 36249;if(a===yd||a===xd||a===_d||a===Md)if(s===Mt)if(o=e.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(a===yd)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(a===xd)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(a===_d)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(a===Md)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=e.get("WEBGL_compressed_texture_s3tc"),o!==null){if(a===yd)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===xd)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===_d)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===Md)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(a===hv||a===uv||a===fv||a===dv)if(o=e.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(a===hv)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(a===uv)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(a===fv)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(a===dv)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(a===zb)return o=e.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if(a===pv||a===mv)if(o=e.get("WEBGL_compressed_texture_etc"),o!==null){if(a===pv)return s===Mt?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(a===mv)return s===Mt?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(a===gv||a===vv||a===yv||a===xv||a===_v||a===Mv||a===wv||a===bv||a===Sv||a===Ev||a===Tv||a===Av||a===Lv||a===Cv)if(o=e.get("WEBGL_compressed_texture_astc"),o!==null){if(a===gv)return s===Mt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(a===vv)return s===Mt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(a===yv)return s===Mt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(a===xv)return s===Mt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(a===_v)return s===Mt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(a===Mv)return s===Mt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(a===wv)return s===Mt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(a===bv)return s===Mt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(a===Sv)return s===Mt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(a===Ev)return s===Mt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(a===Tv)return s===Mt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(a===Av)return s===Mt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(a===Lv)return s===Mt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(a===Cv)return s===Mt?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(a===Rv)if(o=e.get("EXT_texture_compression_bptc"),o!==null){if(a===Rv)return s===Mt?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(a===hs)return i?34042:(o=e.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null)}return{convert:r}}class Fy extends An{constructor(e=[]){super();this.cameras=e}}Fy.prototype.isArrayCamera=!0;class pa extends gt{constructor(){super();this.type="Group"}}pa.prototype.isGroup=!0;const zA={type:"move"};class op{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new pa,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new pa,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new k,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new k),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new pa,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new k,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new k),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,n,i){let r=null,a=null,s=null;const o=this._targetRay,l=this._grip,c=this._hand;if(e&&n.session.visibilityState!=="visible-blurred")if(o!==null&&(r=n.getPose(e.targetRaySpace,i),r!==null&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(zA))),c&&e.hand){s=!0;for(const m of e.hand.values()){const x=n.getJointPose(m,i);if(c.joints[m.jointName]===void 0){const v=new pa;v.matrixAutoUpdate=!1,v.visible=!1,c.joints[m.jointName]=v,c.add(v)}const g=c.joints[m.jointName];x!==null&&(g.matrix.fromArray(x.transform.matrix),g.matrix.decompose(g.position,g.rotation,g.scale),g.jointRadius=x.radius),g.visible=x!==null}const h=c.joints["index-finger-tip"],u=c.joints["thumb-tip"],f=h.position.distanceTo(u.position),d=.02,p=.005;c.inputState.pinching&&f>d+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&f<=d-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(a=n.getPose(e.gripSpace,i),a!==null&&(l.matrix.fromArray(a.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),a.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(a.linearVelocity)):l.hasLinearVelocity=!1,a.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(a.angularVelocity)):l.hasAngularVelocity=!1));return o!==null&&(o.visible=r!==null),l!==null&&(l.visible=a!==null),c!==null&&(c.visible=s!==null),this}}class lp extends Xt{constructor(e,n,i,r,a,s,o,l,c,h){if(h=h!==void 0?h:oa,h!==oa&&h!==us)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&h===oa&&(i=Ml),i===void 0&&h===us&&(i=hs);super(null,r,a,s,o,l,h,i,c);this.image={width:e,height:n},this.magFilter=o!==void 0?o:en,this.minFilter=l!==void 0?l:en,this.flipY=!1,this.generateMipmaps=!1}}lp.prototype.isDepthTexture=!0;class UA extends Ar{constructor(e,n){super();const i=this;let r=null,a=1,s=null,o="local-floor";const l=e.extensions.has("WEBGL_multisampled_render_to_texture");let c=null,h=null,u=null,f=null,d=!1,p=null;const m=n.getContextAttributes();let x=null,g=null;const v=[],b=new Map,_=new An;_.layers.enable(1),_.viewport=new yt;const M=new An;M.layers.enable(2),M.viewport=new yt;const y=[_,M],w=new Fy;w.layers.enable(1),w.layers.enable(2);let E=null,A=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(X){let q=v[X];return q===void 0&&(q=new op,v[X]=q),q.getTargetRaySpace()},this.getControllerGrip=function(X){let q=v[X];return q===void 0&&(q=new op,v[X]=q),q.getGripSpace()},this.getHand=function(X){let q=v[X];return q===void 0&&(q=new op,v[X]=q),q.getHandSpace()};function L(X){const q=b.get(X.inputSource);q&&q.dispatchEvent({type:X.type,data:X.inputSource})}function S(){b.forEach(function(X,q){X.disconnect(q)}),b.clear(),E=null,A=null,e.setRenderTarget(x),f=null,u=null,h=null,r=null,g=null,K.stop(),i.isPresenting=!1,i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(X){a=X,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(X){o=X,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return s},this.getBaseLayer=function(){return u!==null?u:f},this.getBinding=function(){return h},this.getFrame=function(){return p},this.getSession=function(){return r},this.setSession=async function(X){if(r=X,r!==null){if(x=e.getRenderTarget(),r.addEventListener("select",L),r.addEventListener("selectstart",L),r.addEventListener("selectend",L),r.addEventListener("squeeze",L),r.addEventListener("squeezestart",L),r.addEventListener("squeezeend",L),r.addEventListener("end",S),r.addEventListener("inputsourceschange",R),m.xrCompatible!==!0&&await n.makeXRCompatible(),r.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const q={antialias:r.renderState.layers===void 0?m.antialias:!0,alpha:m.alpha,depth:m.depth,stencil:m.stencil,framebufferScaleFactor:a};f=new XRWebGLLayer(r,n,q),r.updateRenderState({baseLayer:f}),g=new Jn(f.framebufferWidth,f.framebufferHeight,{format:pn,type:Sr,encoding:e.outputEncoding})}else{d=m.antialias;let q=null,he=null,Se=null;m.depth&&(Se=m.stencil?35056:33190,q=m.stencil?us:oa,he=m.stencil?hs:Ml);const _e={colorFormat:e.outputEncoding===Mt?35907:32856,depthFormat:Se,scaleFactor:a};h=new XRWebGLBinding(r,n),u=h.createProjectionLayer(_e),r.updateRenderState({layers:[u]}),d?g=new Pd(u.textureWidth,u.textureHeight,{format:pn,type:Sr,depthTexture:new lp(u.textureWidth,u.textureHeight,he,void 0,void 0,void 0,void 0,void 0,void 0,q),stencilBuffer:m.stencil,ignoreDepth:u.ignoreDepthValues,useRenderToTexture:l,encoding:e.outputEncoding}):g=new Jn(u.textureWidth,u.textureHeight,{format:pn,type:Sr,depthTexture:new lp(u.textureWidth,u.textureHeight,he,void 0,void 0,void 0,void 0,void 0,void 0,q),stencilBuffer:m.stencil,ignoreDepth:u.ignoreDepthValues,encoding:e.outputEncoding})}g.isXRRenderTarget=!0,this.setFoveation(1),s=await r.requestReferenceSpace(o),K.setContext(r),K.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}};function R(X){const q=r.inputSources;for(let he=0;he<v.length;he++)b.set(q[he],v[he]);for(let he=0;he<X.removed.length;he++){const Se=X.removed[he],_e=b.get(Se);_e&&(_e.dispatchEvent({type:"disconnected",data:Se}),b.delete(Se))}for(let he=0;he<X.added.length;he++){const Se=X.added[he],_e=b.get(Se);_e&&_e.dispatchEvent({type:"connected",data:Se})}}const D=new k,I=new k;function F(X,q,he){D.setFromMatrixPosition(q.matrixWorld),I.setFromMatrixPosition(he.matrixWorld);const Se=D.distanceTo(I),_e=q.projectionMatrix.elements,Z=he.projectionMatrix.elements,ie=_e[14]/(_e[10]-1),Le=_e[14]/(_e[10]+1),Ee=(_e[9]+1)/_e[5],we=(_e[9]-1)/_e[5],Ae=(_e[8]-1)/_e[0],ae=(Z[8]+1)/Z[0],ee=ie*Ae,ve=ie*ae,pe=Se/(-Ae+ae),De=pe*-Ae;q.matrixWorld.decompose(X.position,X.quaternion,X.scale),X.translateX(De),X.translateZ(pe),X.matrixWorld.compose(X.position,X.quaternion,X.scale),X.matrixWorldInverse.copy(X.matrixWorld).invert();const Ce=ie+pe,O=Le+pe,G=ee-De,ye=ve+(Se-De),de=Ee*Le/O*Ce,He=we*Le/O*Ce;X.projectionMatrix.makePerspective(G,ye,de,He,Ce,O)}function U(X,q){q===null?X.matrixWorld.copy(X.matrix):X.matrixWorld.multiplyMatrices(q.matrixWorld,X.matrix),X.matrixWorldInverse.copy(X.matrixWorld).invert()}this.updateCamera=function(X){if(r===null)return;w.near=M.near=_.near=X.near,w.far=M.far=_.far=X.far,(E!==w.near||A!==w.far)&&(r.updateRenderState({depthNear:w.near,depthFar:w.far}),E=w.near,A=w.far);const q=X.parent,he=w.cameras;U(w,q);for(let _e=0;_e<he.length;_e++)U(he[_e],q);w.matrixWorld.decompose(w.position,w.quaternion,w.scale),X.position.copy(w.position),X.quaternion.copy(w.quaternion),X.scale.copy(w.scale),X.matrix.copy(w.matrix),X.matrixWorld.copy(w.matrixWorld);const Se=X.children;for(let _e=0,Z=Se.length;_e<Z;_e++)Se[_e].updateMatrixWorld(!0);he.length===2?F(w,_,M):w.projectionMatrix.copy(_.projectionMatrix)},this.getCamera=function(){return w},this.getFoveation=function(){if(u!==null)return u.fixedFoveation;if(f!==null)return f.fixedFoveation},this.setFoveation=function(X){u!==null&&(u.fixedFoveation=X),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=X)};let j=null;function Y(X,q){if(c=q.getViewerPose(s),p=q,c!==null){const Se=c.views;f!==null&&(e.setRenderTargetFramebuffer(g,f.framebuffer),e.setRenderTarget(g));let _e=!1;Se.length!==w.cameras.length&&(w.cameras.length=0,_e=!0);for(let Z=0;Z<Se.length;Z++){const ie=Se[Z];let Le=null;if(f!==null)Le=f.getViewport(ie);else{const we=h.getViewSubImage(u,ie);Le=we.viewport,Z===0&&(e.setRenderTargetTextures(g,we.colorTexture,u.ignoreDepthValues?void 0:we.depthStencilTexture),e.setRenderTarget(g))}const Ee=y[Z];Ee.matrix.fromArray(ie.transform.matrix),Ee.projectionMatrix.fromArray(ie.projectionMatrix),Ee.viewport.set(Le.x,Le.y,Le.width,Le.height),Z===0&&w.matrix.copy(Ee.matrix),_e===!0&&w.cameras.push(Ee)}}const he=r.inputSources;for(let Se=0;Se<v.length;Se++){const _e=v[Se],Z=he[Se];_e.update(Z,q,s)}j&&j(X,q),p=null}const K=new Jv;K.setAnimationLoop(Y),this.setAnimationLoop=function(X){j=X},this.dispose=function(){}}}function GA(t){function e(g,v){g.fogColor.value.copy(v.color),v.isFog?(g.fogNear.value=v.near,g.fogFar.value=v.far):v.isFogExp2&&(g.fogDensity.value=v.density)}function n(g,v,b,_,M){v.isMeshBasicMaterial?i(g,v):v.isMeshLambertMaterial?(i(g,v),l(g,v)):v.isMeshToonMaterial?(i(g,v),h(g,v)):v.isMeshPhongMaterial?(i(g,v),c(g,v)):v.isMeshStandardMaterial?(i(g,v),v.isMeshPhysicalMaterial?f(g,v,M):u(g,v)):v.isMeshMatcapMaterial?(i(g,v),d(g,v)):v.isMeshDepthMaterial?(i(g,v),p(g,v)):v.isMeshDistanceMaterial?(i(g,v),m(g,v)):v.isMeshNormalMaterial?(i(g,v),x(g,v)):v.isLineBasicMaterial?(r(g,v),v.isLineDashedMaterial&&a(g,v)):v.isPointsMaterial?s(g,v,b,_):v.isSpriteMaterial?o(g,v):v.isShadowMaterial?(g.color.value.copy(v.color),g.opacity.value=v.opacity):v.isShaderMaterial&&(v.uniformsNeedUpdate=!1)}function i(g,v){g.opacity.value=v.opacity,v.color&&g.diffuse.value.copy(v.color),v.emissive&&g.emissive.value.copy(v.emissive).multiplyScalar(v.emissiveIntensity),v.map&&(g.map.value=v.map),v.alphaMap&&(g.alphaMap.value=v.alphaMap),v.specularMap&&(g.specularMap.value=v.specularMap),v.alphaTest>0&&(g.alphaTest.value=v.alphaTest);const b=t.get(v).envMap;b&&(g.envMap.value=b,g.flipEnvMap.value=b.isCubeTexture&&b.isRenderTargetTexture===!1?-1:1,g.reflectivity.value=v.reflectivity,g.ior.value=v.ior,g.refractionRatio.value=v.refractionRatio),v.lightMap&&(g.lightMap.value=v.lightMap,g.lightMapIntensity.value=v.lightMapIntensity),v.aoMap&&(g.aoMap.value=v.aoMap,g.aoMapIntensity.value=v.aoMapIntensity);let _;v.map?_=v.map:v.specularMap?_=v.specularMap:v.displacementMap?_=v.displacementMap:v.normalMap?_=v.normalMap:v.bumpMap?_=v.bumpMap:v.roughnessMap?_=v.roughnessMap:v.metalnessMap?_=v.metalnessMap:v.alphaMap?_=v.alphaMap:v.emissiveMap?_=v.emissiveMap:v.clearcoatMap?_=v.clearcoatMap:v.clearcoatNormalMap?_=v.clearcoatNormalMap:v.clearcoatRoughnessMap?_=v.clearcoatRoughnessMap:v.specularIntensityMap?_=v.specularIntensityMap:v.specularColorMap?_=v.specularColorMap:v.transmissionMap?_=v.transmissionMap:v.thicknessMap?_=v.thicknessMap:v.sheenColorMap?_=v.sheenColorMap:v.sheenRoughnessMap&&(_=v.sheenRoughnessMap),_!==void 0&&(_.isWebGLRenderTarget&&(_=_.texture),_.matrixAutoUpdate===!0&&_.updateMatrix(),g.uvTransform.value.copy(_.matrix));let M;v.aoMap?M=v.aoMap:v.lightMap&&(M=v.lightMap),M!==void 0&&(M.isWebGLRenderTarget&&(M=M.texture),M.matrixAutoUpdate===!0&&M.updateMatrix(),g.uv2Transform.value.copy(M.matrix))}function r(g,v){g.diffuse.value.copy(v.color),g.opacity.value=v.opacity}function a(g,v){g.dashSize.value=v.dashSize,g.totalSize.value=v.dashSize+v.gapSize,g.scale.value=v.scale}function s(g,v,b,_){g.diffuse.value.copy(v.color),g.opacity.value=v.opacity,g.size.value=v.size*b,g.scale.value=_*.5,v.map&&(g.map.value=v.map),v.alphaMap&&(g.alphaMap.value=v.alphaMap),v.alphaTest>0&&(g.alphaTest.value=v.alphaTest);let M;v.map?M=v.map:v.alphaMap&&(M=v.alphaMap),M!==void 0&&(M.matrixAutoUpdate===!0&&M.updateMatrix(),g.uvTransform.value.copy(M.matrix))}function o(g,v){g.diffuse.value.copy(v.color),g.opacity.value=v.opacity,g.rotation.value=v.rotation,v.map&&(g.map.value=v.map),v.alphaMap&&(g.alphaMap.value=v.alphaMap),v.alphaTest>0&&(g.alphaTest.value=v.alphaTest);let b;v.map?b=v.map:v.alphaMap&&(b=v.alphaMap),b!==void 0&&(b.matrixAutoUpdate===!0&&b.updateMatrix(),g.uvTransform.value.copy(b.matrix))}function l(g,v){v.emissiveMap&&(g.emissiveMap.value=v.emissiveMap)}function c(g,v){g.specular.value.copy(v.specular),g.shininess.value=Math.max(v.shininess,1e-4),v.emissiveMap&&(g.emissiveMap.value=v.emissiveMap),v.bumpMap&&(g.bumpMap.value=v.bumpMap,g.bumpScale.value=v.bumpScale,v.side===Qt&&(g.bumpScale.value*=-1)),v.normalMap&&(g.normalMap.value=v.normalMap,g.normalScale.value.copy(v.normalScale),v.side===Qt&&g.normalScale.value.negate()),v.displacementMap&&(g.displacementMap.value=v.displacementMap,g.displacementScale.value=v.displacementScale,g.displacementBias.value=v.displacementBias)}function h(g,v){v.gradientMap&&(g.gradientMap.value=v.gradientMap),v.emissiveMap&&(g.emissiveMap.value=v.emissiveMap),v.bumpMap&&(g.bumpMap.value=v.bumpMap,g.bumpScale.value=v.bumpScale,v.side===Qt&&(g.bumpScale.value*=-1)),v.normalMap&&(g.normalMap.value=v.normalMap,g.normalScale.value.copy(v.normalScale),v.side===Qt&&g.normalScale.value.negate()),v.displacementMap&&(g.displacementMap.value=v.displacementMap,g.displacementScale.value=v.displacementScale,g.displacementBias.value=v.displacementBias)}function u(g,v){g.roughness.value=v.roughness,g.metalness.value=v.metalness,v.roughnessMap&&(g.roughnessMap.value=v.roughnessMap),v.metalnessMap&&(g.metalnessMap.value=v.metalnessMap),v.emissiveMap&&(g.emissiveMap.value=v.emissiveMap),v.bumpMap&&(g.bumpMap.value=v.bumpMap,g.bumpScale.value=v.bumpScale,v.side===Qt&&(g.bumpScale.value*=-1)),v.normalMap&&(g.normalMap.value=v.normalMap,g.normalScale.value.copy(v.normalScale),v.side===Qt&&g.normalScale.value.negate()),v.displacementMap&&(g.displacementMap.value=v.displacementMap,g.displacementScale.value=v.displacementScale,g.displacementBias.value=v.displacementBias),t.get(v).envMap&&(g.envMapIntensity.value=v.envMapIntensity)}function f(g,v,b){u(g,v),g.ior.value=v.ior,v.sheen>0&&(g.sheenColor.value.copy(v.sheenColor).multiplyScalar(v.sheen),g.sheenRoughness.value=v.sheenRoughness,v.sheenColorMap&&(g.sheenColorMap.value=v.sheenColorMap),v.sheenRoughnessMap&&(g.sheenRoughnessMap.value=v.sheenRoughnessMap)),v.clearcoat>0&&(g.clearcoat.value=v.clearcoat,g.clearcoatRoughness.value=v.clearcoatRoughness,v.clearcoatMap&&(g.clearcoatMap.value=v.clearcoatMap),v.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=v.clearcoatRoughnessMap),v.clearcoatNormalMap&&(g.clearcoatNormalScale.value.copy(v.clearcoatNormalScale),g.clearcoatNormalMap.value=v.clearcoatNormalMap,v.side===Qt&&g.clearcoatNormalScale.value.negate())),v.transmission>0&&(g.transmission.value=v.transmission,g.transmissionSamplerMap.value=b.texture,g.transmissionSamplerSize.value.set(b.width,b.height),v.transmissionMap&&(g.transmissionMap.value=v.transmissionMap),g.thickness.value=v.thickness,v.thicknessMap&&(g.thicknessMap.value=v.thicknessMap),g.attenuationDistance.value=v.attenuationDistance,g.attenuationColor.value.copy(v.attenuationColor)),g.specularIntensity.value=v.specularIntensity,g.specularColor.value.copy(v.specularColor),v.specularIntensityMap&&(g.specularIntensityMap.value=v.specularIntensityMap),v.specularColorMap&&(g.specularColorMap.value=v.specularColorMap)}function d(g,v){v.matcap&&(g.matcap.value=v.matcap),v.bumpMap&&(g.bumpMap.value=v.bumpMap,g.bumpScale.value=v.bumpScale,v.side===Qt&&(g.bumpScale.value*=-1)),v.normalMap&&(g.normalMap.value=v.normalMap,g.normalScale.value.copy(v.normalScale),v.side===Qt&&g.normalScale.value.negate()),v.displacementMap&&(g.displacementMap.value=v.displacementMap,g.displacementScale.value=v.displacementScale,g.displacementBias.value=v.displacementBias)}function p(g,v){v.displacementMap&&(g.displacementMap.value=v.displacementMap,g.displacementScale.value=v.displacementScale,g.displacementBias.value=v.displacementBias)}function m(g,v){v.displacementMap&&(g.displacementMap.value=v.displacementMap,g.displacementScale.value=v.displacementScale,g.displacementBias.value=v.displacementBias),g.referencePosition.value.copy(v.referencePosition),g.nearDistance.value=v.nearDistance,g.farDistance.value=v.farDistance}function x(g,v){v.bumpMap&&(g.bumpMap.value=v.bumpMap,g.bumpScale.value=v.bumpScale,v.side===Qt&&(g.bumpScale.value*=-1)),v.normalMap&&(g.normalMap.value=v.normalMap,g.normalScale.value.copy(v.normalScale),v.side===Qt&&g.normalScale.value.negate()),v.displacementMap&&(g.displacementMap.value=v.displacementMap,g.displacementScale.value=v.displacementScale,g.displacementBias.value=v.displacementBias)}return{refreshFogUniforms:e,refreshMaterialUniforms:n}}function HA(){const t=Tl("canvas");return t.style.display="block",t}function bt(t={}){const e=t.canvas!==void 0?t.canvas:HA(),n=t.context!==void 0?t.context:null,i=t.alpha!==void 0?t.alpha:!1,r=t.depth!==void 0?t.depth:!0,a=t.stencil!==void 0?t.stencil:!0,s=t.antialias!==void 0?t.antialias:!1,o=t.premultipliedAlpha!==void 0?t.premultipliedAlpha:!0,l=t.preserveDrawingBuffer!==void 0?t.preserveDrawingBuffer:!1,c=t.powerPreference!==void 0?t.powerPreference:"default",h=t.failIfMajorPerformanceCaveat!==void 0?t.failIfMajorPerformanceCaveat:!1;let u=null,f=null;const d=[],p=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=Tr,this.physicallyCorrectLights=!1,this.toneMapping=br,this.toneMappingExposure=1;const m=this;let x=!1,g=0,v=0,b=null,_=-1,M=null;const y=new yt,w=new yt;let E=null,A=e.width,L=e.height,S=1,R=null,D=null;const I=new yt(0,0,A,L),F=new yt(0,0,A,L);let U=!1;const j=new Yh;let Y=!1,K=!1,X=null;const q=new Fe,he=new k,Se={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function _e(){return b===null?S:1}let Z=n;function ie(H,ne){for(let le=0;le<H.length;le++){const oe=H[le],ge=e.getContext(oe,ne);if(ge!==null)return ge}return null}try{const H={alpha:!0,depth:r,stencil:a,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:h};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${dd}`),e.addEventListener("webglcontextlost",ue,!1),e.addEventListener("webglcontextrestored",W,!1),Z===null){const ne=["webgl2","webgl","experimental-webgl"];if(m.isWebGL1Renderer===!0&&ne.shift(),Z=ie(ne,H),Z===null)throw ie(ne)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}Z.getShaderPrecisionFormat===void 0&&(Z.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(H){throw console.error("THREE.WebGLRenderer: "+H.message),H}let Le,Ee,we,Ae,ae,ee,ve,pe,De,Ce,O,G,ye,de,He,N,P,te,fe,me,J,xe,V;function B(){Le=new sT(Z),Ee=new eT(Z,Le,t),Le.init(Ee),xe=new NA(Z,Le,Ee),we=new BA(Z,Le,Ee),Ae=new cT(Z),ae=new SA,ee=new OA(Z,Le,we,ae,Ee,xe,Ae),ve=new nT(m),pe=new aT(m),De=new S1(Z,Ee),V=new KE(Z,Le,De,Ee),Ce=new oT(Z,De,Ae,V),O=new dT(Z,Ce,De,Ae),fe=new fT(Z,Ee,ee),N=new tT(ae),G=new bA(m,ve,pe,Le,Ee,V,N),ye=new GA(ae),de=new TA,He=new DA(Le,Ee),te=new JE(m,ve,we,O,i,o),P=new Iy(m,O,Ee),me=new QE(Z,Le,Ae,Ee),J=new lT(Z,Le,Ae,Ee),Ae.programs=G.programs,m.capabilities=Ee,m.extensions=Le,m.properties=ae,m.renderLists=de,m.shadowMap=P,m.state=we,m.info=Ae}B();const Q=new UA(m,Z);this.xr=Q,this.getContext=function(){return Z},this.getContextAttributes=function(){return Z.getContextAttributes()},this.forceContextLoss=function(){const H=Le.get("WEBGL_lose_context");H&&H.loseContext()},this.forceContextRestore=function(){const H=Le.get("WEBGL_lose_context");H&&H.restoreContext()},this.getPixelRatio=function(){return S},this.setPixelRatio=function(H){H!==void 0&&(S=H,this.setSize(A,L,!1))},this.getSize=function(H){return H.set(A,L)},this.setSize=function(H,ne,le){if(Q.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}A=H,L=ne,e.width=Math.floor(H*S),e.height=Math.floor(ne*S),le!==!1&&(e.style.width=H+"px",e.style.height=ne+"px"),this.setViewport(0,0,H,ne)},this.getDrawingBufferSize=function(H){return H.set(A*S,L*S).floor()},this.setDrawingBufferSize=function(H,ne,le){A=H,L=ne,S=le,e.width=Math.floor(H*le),e.height=Math.floor(ne*le),this.setViewport(0,0,H,ne)},this.getCurrentViewport=function(H){return H.copy(y)},this.getViewport=function(H){return H.copy(I)},this.setViewport=function(H,ne,le,oe){H.isVector4?I.set(H.x,H.y,H.z,H.w):I.set(H,ne,le,oe),we.viewport(y.copy(I).multiplyScalar(S).floor())},this.getScissor=function(H){return H.copy(F)},this.setScissor=function(H,ne,le,oe){H.isVector4?F.set(H.x,H.y,H.z,H.w):F.set(H,ne,le,oe),we.scissor(w.copy(F).multiplyScalar(S).floor())},this.getScissorTest=function(){return U},this.setScissorTest=function(H){we.setScissorTest(U=H)},this.setOpaqueSort=function(H){R=H},this.setTransparentSort=function(H){D=H},this.getClearColor=function(H){return H.copy(te.getClearColor())},this.setClearColor=function(){te.setClearColor.apply(te,arguments)},this.getClearAlpha=function(){return te.getClearAlpha()},this.setClearAlpha=function(){te.setClearAlpha.apply(te,arguments)},this.clear=function(H,ne,le){let oe=0;(H===void 0||H)&&(oe|=16384),(ne===void 0||ne)&&(oe|=256),(le===void 0||le)&&(oe|=1024),Z.clear(oe)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",ue,!1),e.removeEventListener("webglcontextrestored",W,!1),de.dispose(),He.dispose(),ae.dispose(),ve.dispose(),pe.dispose(),O.dispose(),V.dispose(),G.dispose(),Q.dispose(),Q.removeEventListener("sessionstart",je),Q.removeEventListener("sessionend",ot),X&&(X.dispose(),X=null),At.stop()};function ue(H){H.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),x=!0}function W(){console.log("THREE.WebGLRenderer: Context Restored."),x=!1;const H=Ae.autoReset,ne=P.enabled,le=P.autoUpdate,oe=P.needsUpdate,ge=P.type;B(),Ae.autoReset=H,P.enabled=ne,P.autoUpdate=le,P.needsUpdate=oe,P.type=ge}function ce(H){const ne=H.target;ne.removeEventListener("dispose",ce),be(ne)}function be(H){Ie(H),ae.remove(H)}function Ie(H){const ne=ae.get(H).programs;ne!==void 0&&(ne.forEach(function(le){G.releaseProgram(le)}),H.isShaderMaterial&&G.releaseShaderCache(H))}this.renderBufferDirect=function(H,ne,le,oe,ge,et){ne===null&&(ne=Se);const nt=ge.isMesh&&ge.matrixWorld.determinant()<0,st=ld(H,ne,le,oe,ge);we.setMaterial(oe,nt);let rt=le.index;const T=le.attributes.position;if(rt===null){if(T===void 0||T.count===0)return}else if(rt.count===0)return;let C=1;oe.wireframe===!0&&(rt=Ce.getWireframeAttribute(le),C=2),V.setup(ge,oe,st,le,rt);let $,re=me;rt!==null&&($=De.get(rt),re=J,re.setIndex($));const Re=rt!==null?rt.count:T.count,Xe=le.drawRange.start*C,Pe=le.drawRange.count*C,tt=et!==null?et.start*C:0,$e=et!==null?et.count*C:1/0,Ze=Math.max(Xe,tt),vt=Math.min(Re,Xe+Pe,tt+$e)-1,lt=Math.max(0,vt-Ze+1);if(lt!==0){if(ge.isMesh)oe.wireframe===!0?(we.setLineWidth(oe.wireframeLinewidth*_e()),re.setMode(1)):re.setMode(4);else if(ge.isLine){let at=oe.linewidth;at===void 0&&(at=1),we.setLineWidth(at*_e()),ge.isLineSegments?re.setMode(1):ge.isLineLoop?re.setMode(2):re.setMode(3)}else ge.isPoints?re.setMode(0):ge.isSprite&&re.setMode(4);if(ge.isInstancedMesh)re.renderInstances(Ze,lt,ge.count);else if(le.isInstancedBufferGeometry){const at=Math.min(le.instanceCount,le._maxInstanceCount);re.renderInstances(Ze,lt,at)}else re.render(Ze,lt)}},this.compile=function(H,ne){f=He.get(H),f.init(),p.push(f),H.traverseVisible(function(le){le.isLight&&le.layers.test(ne.layers)&&(f.pushLight(le),le.castShadow&&f.pushShadow(le))}),f.setupLights(m.physicallyCorrectLights),H.traverse(function(le){const oe=le.material;if(oe)if(Array.isArray(oe))for(let ge=0;ge<oe.length;ge++){const et=oe[ge];Ti(et,H,le)}else Ti(oe,H,le)}),p.pop(),f=null};let se=null;function Be(H){se&&se(H)}function je(){At.stop()}function ot(){At.start()}const At=new Jv;At.setAnimationLoop(Be),typeof window!="undefined"&&At.setContext(window),this.setAnimationLoop=function(H){se=H,Q.setAnimationLoop(H),H===null?At.stop():At.start()},Q.addEventListener("sessionstart",je),Q.addEventListener("sessionend",ot),this.render=function(H,ne){if(ne!==void 0&&ne.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(x===!0)return;H.autoUpdate===!0&&H.updateMatrixWorld(),ne.parent===null&&ne.updateMatrixWorld(),Q.enabled===!0&&Q.isPresenting===!0&&(Q.cameraAutoUpdate===!0&&Q.updateCamera(ne),ne=Q.getCamera()),H.isScene===!0&&H.onBeforeRender(m,H,ne,b),f=He.get(H,p.length),f.init(),p.push(f),q.multiplyMatrices(ne.projectionMatrix,ne.matrixWorldInverse),j.setFromProjectionMatrix(q),K=this.localClippingEnabled,Y=N.init(this.clippingPlanes,K,ne),u=de.get(H,d.length),u.init(),d.push(u),pt(H,ne,0,m.sortObjects),u.finish(),m.sortObjects===!0&&u.sort(R,D),Y===!0&&N.beginShadows();const le=f.state.shadowsArray;if(P.render(le,H,ne),Y===!0&&N.endShadows(),this.info.autoReset===!0&&this.info.reset(),te.render(u,H),f.setupLights(m.physicallyCorrectLights),ne.isArrayCamera){const oe=ne.cameras;for(let ge=0,et=oe.length;ge<et;ge++){const nt=oe[ge];wn(u,H,nt,nt.viewport)}}else wn(u,H,ne);b!==null&&(ee.updateMultisampleRenderTarget(b),ee.updateRenderTargetMipmap(b)),H.isScene===!0&&H.onAfterRender(m,H,ne),we.buffers.depth.setTest(!0),we.buffers.depth.setMask(!0),we.buffers.color.setMask(!0),we.setPolygonOffset(!1),V.resetDefaultState(),_=-1,M=null,p.pop(),p.length>0?f=p[p.length-1]:f=null,d.pop(),d.length>0?u=d[d.length-1]:u=null};function pt(H,ne,le,oe){if(H.visible===!1)return;if(H.layers.test(ne.layers)){if(H.isGroup)le=H.renderOrder;else if(H.isLOD)H.autoUpdate===!0&&H.update(ne);else if(H.isLight)f.pushLight(H),H.castShadow&&f.pushShadow(H);else if(H.isSprite){if(!H.frustumCulled||j.intersectsSprite(H)){oe&&he.setFromMatrixPosition(H.matrixWorld).applyMatrix4(q);const nt=O.update(H),st=H.material;st.visible&&u.push(H,nt,st,le,he.z,null)}}else if((H.isMesh||H.isLine||H.isPoints)&&(H.isSkinnedMesh&&H.skeleton.frame!==Ae.render.frame&&(H.skeleton.update(),H.skeleton.frame=Ae.render.frame),!H.frustumCulled||j.intersectsObject(H))){oe&&he.setFromMatrixPosition(H.matrixWorld).applyMatrix4(q);const nt=O.update(H),st=H.material;if(Array.isArray(st)){const rt=nt.groups;for(let T=0,C=rt.length;T<C;T++){const $=rt[T],re=st[$.materialIndex];re&&re.visible&&u.push(H,nt,re,le,he.z,$)}}else st.visible&&u.push(H,nt,st,le,he.z,null)}}const et=H.children;for(let nt=0,st=et.length;nt<st;nt++)pt(et[nt],ne,le,oe)}function wn(H,ne,le,oe){const ge=H.opaque,et=H.transmissive,nt=H.transparent;f.setupLightsView(le),et.length>0&&Ht(ge,ne,le),oe&&we.viewport(y.copy(oe)),ge.length>0&&ji(ge,ne,le),et.length>0&&ji(et,ne,le),nt.length>0&&ji(nt,ne,le)}function Ht(H,ne,le){if(X===null){const nt=s===!0&&Ee.isWebGL2===!0?Pd:Jn;X=new nt(1024,1024,{generateMipmaps:!0,type:xe.convert(cs)!==null?cs:Sr,minFilter:bh,magFilter:en,wrapS:Sn,wrapT:Sn,useRenderToTexture:Le.has("WEBGL_multisampled_render_to_texture")})}const oe=m.getRenderTarget();m.setRenderTarget(X),m.clear();const ge=m.toneMapping;m.toneMapping=br,ji(H,ne,le),m.toneMapping=ge,ee.updateMultisampleRenderTarget(X),ee.updateRenderTargetMipmap(X),m.setRenderTarget(oe)}function ji(H,ne,le){const oe=ne.isScene===!0?ne.overrideMaterial:null;for(let ge=0,et=H.length;ge<et;ge++){const nt=H[ge],st=nt.object,rt=nt.geometry,T=oe===null?nt.material:oe,C=nt.group;st.layers.test(le.layers)&&is(st,ne,le,rt,T,C)}}function is(H,ne,le,oe,ge,et){H.onBeforeRender(m,ne,le,oe,ge,et),H.modelViewMatrix.multiplyMatrices(le.matrixWorldInverse,H.matrixWorld),H.normalMatrix.getNormalMatrix(H.modelViewMatrix),ge.onBeforeRender(m,ne,le,oe,H,et),ge.transparent===!0&&ge.side===os?(ge.side=Qt,ge.needsUpdate=!0,m.renderBufferDirect(le,ne,oe,ge,H,et),ge.side=gl,ge.needsUpdate=!0,m.renderBufferDirect(le,ne,oe,ge,H,et),ge.side=os):m.renderBufferDirect(le,ne,oe,ge,H,et),H.onAfterRender(m,ne,le,oe,ge,et)}function Ti(H,ne,le){ne.isScene!==!0&&(ne=Se);const oe=ae.get(H),ge=f.state.lights,et=f.state.shadowsArray,nt=ge.state.version,st=G.getParameters(H,ge.state,et,ne,le),rt=G.getProgramCacheKey(st);let T=oe.programs;oe.environment=H.isMeshStandardMaterial?ne.environment:null,oe.fog=ne.fog,oe.envMap=(H.isMeshStandardMaterial?pe:ve).get(H.envMap||oe.environment),T===void 0&&(H.addEventListener("dispose",ce),T=new Map,oe.programs=T);let C=T.get(rt);if(C!==void 0){if(oe.currentProgram===C&&oe.lightsStateVersion===nt)return yh(H,st),C}else st.uniforms=G.getUniforms(H),H.onBuild(le,st,m),H.onBeforeCompile(st,m),C=G.acquireProgram(st,rt),T.set(rt,C),oe.uniforms=st.uniforms;const $=oe.uniforms;(!H.isShaderMaterial&&!H.isRawShaderMaterial||H.clipping===!0)&&($.clippingPlanes=N.uniform),yh(H,st),oe.needsLights=hd(H),oe.lightsStateVersion=nt,oe.needsLights&&($.ambientLightColor.value=ge.state.ambient,$.lightProbe.value=ge.state.probe,$.directionalLights.value=ge.state.directional,$.directionalLightShadows.value=ge.state.directionalShadow,$.spotLights.value=ge.state.spot,$.spotLightShadows.value=ge.state.spotShadow,$.rectAreaLights.value=ge.state.rectArea,$.ltc_1.value=ge.state.rectAreaLTC1,$.ltc_2.value=ge.state.rectAreaLTC2,$.pointLights.value=ge.state.point,$.pointLightShadows.value=ge.state.pointShadow,$.hemisphereLights.value=ge.state.hemi,$.directionalShadowMap.value=ge.state.directionalShadowMap,$.directionalShadowMatrix.value=ge.state.directionalShadowMatrix,$.spotShadowMap.value=ge.state.spotShadowMap,$.spotShadowMatrix.value=ge.state.spotShadowMatrix,$.pointShadowMap.value=ge.state.pointShadowMap,$.pointShadowMatrix.value=ge.state.pointShadowMatrix);const re=C.getUniforms(),Re=Or.seqWithValue(re.seq,$);return oe.currentProgram=C,oe.uniformsList=Re,C}function yh(H,ne){const le=ae.get(H);le.outputEncoding=ne.outputEncoding,le.instancing=ne.instancing,le.skinning=ne.skinning,le.morphTargets=ne.morphTargets,le.morphNormals=ne.morphNormals,le.morphTargetsCount=ne.morphTargetsCount,le.numClippingPlanes=ne.numClippingPlanes,le.numIntersection=ne.numClipIntersection,le.vertexAlphas=ne.vertexAlphas,le.vertexTangents=ne.vertexTangents,le.toneMapping=ne.toneMapping}function ld(H,ne,le,oe,ge){ne.isScene!==!0&&(ne=Se),ee.resetTextureUnits();const et=ne.fog,nt=oe.isMeshStandardMaterial?ne.environment:null,st=b===null?m.outputEncoding:b.isXRRenderTarget===!0?b.texture.encoding:Tr,rt=(oe.isMeshStandardMaterial?pe:ve).get(oe.envMap||nt),T=oe.vertexColors===!0&&!!le.attributes.color&&le.attributes.color.itemSize===4,C=!!oe.normalMap&&!!le.attributes.tangent,$=!!le.morphAttributes.position,re=!!le.morphAttributes.normal,Re=le.morphAttributes.position?le.morphAttributes.position.length:0,Xe=oe.toneMapped?m.toneMapping:br,Pe=ae.get(oe),tt=f.state.lights;if(Y===!0&&(K===!0||H!==M)){const zt=H===M&&oe.id===_;N.setState(oe,H,zt)}let $e=!1;oe.version===Pe.__version?(Pe.needsLights&&Pe.lightsStateVersion!==tt.state.version||Pe.outputEncoding!==st||ge.isInstancedMesh&&Pe.instancing===!1||!ge.isInstancedMesh&&Pe.instancing===!0||ge.isSkinnedMesh&&Pe.skinning===!1||!ge.isSkinnedMesh&&Pe.skinning===!0||Pe.envMap!==rt||oe.fog&&Pe.fog!==et||Pe.numClippingPlanes!==void 0&&(Pe.numClippingPlanes!==N.numPlanes||Pe.numIntersection!==N.numIntersection)||Pe.vertexAlphas!==T||Pe.vertexTangents!==C||Pe.morphTargets!==$||Pe.morphNormals!==re||Pe.toneMapping!==Xe||Ee.isWebGL2===!0&&Pe.morphTargetsCount!==Re)&&($e=!0):($e=!0,Pe.__version=oe.version);let Ze=Pe.currentProgram;$e===!0&&(Ze=Ti(oe,ne,ge));let vt=!1,lt=!1,at=!1;const Ne=Ze.getUniforms(),qe=Pe.uniforms;if(we.useProgram(Ze.program)&&(vt=!0,lt=!0,at=!0),oe.id!==_&&(_=oe.id,lt=!0),vt||M!==H){if(Ne.setValue(Z,"projectionMatrix",H.projectionMatrix),Ee.logarithmicDepthBuffer&&Ne.setValue(Z,"logDepthBufFC",2/(Math.log(H.far+1)/Math.LN2)),M!==H&&(M=H,lt=!0,at=!0),oe.isShaderMaterial||oe.isMeshPhongMaterial||oe.isMeshToonMaterial||oe.isMeshStandardMaterial||oe.envMap){const zt=Ne.map.cameraPosition;zt!==void 0&&zt.setValue(Z,he.setFromMatrixPosition(H.matrixWorld))}(oe.isMeshPhongMaterial||oe.isMeshToonMaterial||oe.isMeshLambertMaterial||oe.isMeshBasicMaterial||oe.isMeshStandardMaterial||oe.isShaderMaterial)&&Ne.setValue(Z,"isOrthographic",H.isOrthographicCamera===!0),(oe.isMeshPhongMaterial||oe.isMeshToonMaterial||oe.isMeshLambertMaterial||oe.isMeshBasicMaterial||oe.isMeshStandardMaterial||oe.isShaderMaterial||oe.isShadowMaterial||ge.isSkinnedMesh)&&Ne.setValue(Z,"viewMatrix",H.matrixWorldInverse)}if(ge.isSkinnedMesh){Ne.setOptional(Z,ge,"bindMatrix"),Ne.setOptional(Z,ge,"bindMatrixInverse");const zt=ge.skeleton;zt&&(Ee.floatVertexTextures?(zt.boneTexture===null&&zt.computeBoneTexture(),Ne.setValue(Z,"boneTexture",zt.boneTexture,ee),Ne.setValue(Z,"boneTextureSize",zt.boneTextureSize)):Ne.setOptional(Z,zt,"boneMatrices"))}return!!le&&(le.morphAttributes.position!==void 0||le.morphAttributes.normal!==void 0)&&fe.update(ge,le,oe,Ze),(lt||Pe.receiveShadow!==ge.receiveShadow)&&(Pe.receiveShadow=ge.receiveShadow,Ne.setValue(Z,"receiveShadow",ge.receiveShadow)),lt&&(Ne.setValue(Z,"toneMappingExposure",m.toneMappingExposure),Pe.needsLights&&cd(qe,at),et&&oe.fog&&ye.refreshFogUniforms(qe,et),ye.refreshMaterialUniforms(qe,oe,S,L,X),Or.upload(Z,Pe.uniformsList,qe,ee)),oe.isShaderMaterial&&oe.uniformsNeedUpdate===!0&&(Or.upload(Z,Pe.uniformsList,qe,ee),oe.uniformsNeedUpdate=!1),oe.isSpriteMaterial&&Ne.setValue(Z,"center",ge.center),Ne.setValue(Z,"modelViewMatrix",ge.modelViewMatrix),Ne.setValue(Z,"normalMatrix",ge.normalMatrix),Ne.setValue(Z,"modelMatrix",ge.matrixWorld),Ze}function cd(H,ne){H.ambientLightColor.needsUpdate=ne,H.lightProbe.needsUpdate=ne,H.directionalLights.needsUpdate=ne,H.directionalLightShadows.needsUpdate=ne,H.pointLights.needsUpdate=ne,H.pointLightShadows.needsUpdate=ne,H.spotLights.needsUpdate=ne,H.spotLightShadows.needsUpdate=ne,H.rectAreaLights.needsUpdate=ne,H.hemisphereLights.needsUpdate=ne}function hd(H){return H.isMeshLambertMaterial||H.isMeshToonMaterial||H.isMeshPhongMaterial||H.isMeshStandardMaterial||H.isShadowMaterial||H.isShaderMaterial&&H.lights===!0}this.getActiveCubeFace=function(){return g},this.getActiveMipmapLevel=function(){return v},this.getRenderTarget=function(){return b},this.setRenderTargetTextures=function(H,ne,le){ae.get(H.texture).__webglTexture=ne,ae.get(H.depthTexture).__webglTexture=le;const oe=ae.get(H);oe.__hasExternalTextures=!0,oe.__hasExternalTextures&&(oe.__autoAllocateDepthBuffer=le===void 0,oe.__autoAllocateDepthBuffer||H.useRenderToTexture&&(console.warn("render-to-texture extension was disabled because an external texture was provided"),H.useRenderToTexture=!1,H.useRenderbuffer=!0))},this.setRenderTargetFramebuffer=function(H,ne){const le=ae.get(H);le.__webglFramebuffer=ne,le.__useDefaultFramebuffer=ne===void 0},this.setRenderTarget=function(H,ne=0,le=0){b=H,g=ne,v=le;let oe=!0;if(H){const rt=ae.get(H);rt.__useDefaultFramebuffer!==void 0?(we.bindFramebuffer(36160,null),oe=!1):rt.__webglFramebuffer===void 0?ee.setupRenderTarget(H):rt.__hasExternalTextures&&ee.rebindTextures(H,ae.get(H.texture).__webglTexture,ae.get(H.depthTexture).__webglTexture)}let ge=null,et=!1,nt=!1;if(H){const rt=H.texture;(rt.isDataTexture3D||rt.isDataTexture2DArray)&&(nt=!0);const T=ae.get(H).__webglFramebuffer;H.isWebGLCubeRenderTarget?(ge=T[ne],et=!0):H.useRenderbuffer?ge=ae.get(H).__webglMultisampledFramebuffer:ge=T,y.copy(H.viewport),w.copy(H.scissor),E=H.scissorTest}else y.copy(I).multiplyScalar(S).floor(),w.copy(F).multiplyScalar(S).floor(),E=U;if(we.bindFramebuffer(36160,ge)&&Ee.drawBuffers&&oe&&we.drawBuffers(H,ge),we.viewport(y),we.scissor(w),we.setScissorTest(E),et){const rt=ae.get(H.texture);Z.framebufferTexture2D(36160,36064,34069+ne,rt.__webglTexture,le)}else if(nt){const rt=ae.get(H.texture),T=ne||0;Z.framebufferTextureLayer(36160,36064,rt.__webglTexture,le||0,T)}_=-1},this.readRenderTargetPixels=function(H,ne,le,oe,ge,et,nt){if(!(H&&H.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let st=ae.get(H).__webglFramebuffer;if(H.isWebGLCubeRenderTarget&&nt!==void 0&&(st=st[nt]),st){we.bindFramebuffer(36160,st);try{const rt=H.texture,T=rt.format,C=rt.type;if(T!==pn&&xe.convert(T)!==Z.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const $=C===cs&&(Le.has("EXT_color_buffer_half_float")||Ee.isWebGL2&&Le.has("EXT_color_buffer_float"));if(C!==Sr&&xe.convert(C)!==Z.getParameter(35738)&&!(C===Er&&(Ee.isWebGL2||Le.has("OES_texture_float")||Le.has("WEBGL_color_buffer_float")))&&!$){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}Z.checkFramebufferStatus(36160)===36053?ne>=0&&ne<=H.width-oe&&le>=0&&le<=H.height-ge&&Z.readPixels(ne,le,oe,ge,xe.convert(T),xe.convert(C),et):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const rt=b!==null?ae.get(b).__webglFramebuffer:null;we.bindFramebuffer(36160,rt)}}},this.copyFramebufferToTexture=function(H,ne,le=0){if(ne.isFramebufferTexture!==!0){console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");return}const oe=Math.pow(2,-le),ge=Math.floor(ne.image.width*oe),et=Math.floor(ne.image.height*oe);ee.setTexture2D(ne,0),Z.copyTexSubImage2D(3553,le,0,0,H.x,H.y,ge,et),we.unbindTexture()},this.copyTextureToTexture=function(H,ne,le,oe=0){const ge=ne.image.width,et=ne.image.height,nt=xe.convert(le.format),st=xe.convert(le.type);ee.setTexture2D(le,0),Z.pixelStorei(37440,le.flipY),Z.pixelStorei(37441,le.premultiplyAlpha),Z.pixelStorei(3317,le.unpackAlignment),ne.isDataTexture?Z.texSubImage2D(3553,oe,H.x,H.y,ge,et,nt,st,ne.image.data):ne.isCompressedTexture?Z.compressedTexSubImage2D(3553,oe,H.x,H.y,ne.mipmaps[0].width,ne.mipmaps[0].height,nt,ne.mipmaps[0].data):Z.texSubImage2D(3553,oe,H.x,H.y,nt,st,ne.image),oe===0&&le.generateMipmaps&&Z.generateMipmap(3553),we.unbindTexture()},this.copyTextureToTexture3D=function(H,ne,le,oe,ge=0){if(m.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const et=H.max.x-H.min.x+1,nt=H.max.y-H.min.y+1,st=H.max.z-H.min.z+1,rt=xe.convert(oe.format),T=xe.convert(oe.type);let C;if(oe.isDataTexture3D)ee.setTexture3D(oe,0),C=32879;else if(oe.isDataTexture2DArray)ee.setTexture2DArray(oe,0),C=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}Z.pixelStorei(37440,oe.flipY),Z.pixelStorei(37441,oe.premultiplyAlpha),Z.pixelStorei(3317,oe.unpackAlignment);const $=Z.getParameter(3314),re=Z.getParameter(32878),Re=Z.getParameter(3316),Xe=Z.getParameter(3315),Pe=Z.getParameter(32877),tt=le.isCompressedTexture?le.mipmaps[0]:le.image;Z.pixelStorei(3314,tt.width),Z.pixelStorei(32878,tt.height),Z.pixelStorei(3316,H.min.x),Z.pixelStorei(3315,H.min.y),Z.pixelStorei(32877,H.min.z),le.isDataTexture||le.isDataTexture3D?Z.texSubImage3D(C,ge,ne.x,ne.y,ne.z,et,nt,st,rt,T,tt.data):le.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),Z.compressedTexSubImage3D(C,ge,ne.x,ne.y,ne.z,et,nt,st,rt,tt.data)):Z.texSubImage3D(C,ge,ne.x,ne.y,ne.z,et,nt,st,rt,T,tt),Z.pixelStorei(3314,$),Z.pixelStorei(32878,re),Z.pixelStorei(3316,Re),Z.pixelStorei(3315,Xe),Z.pixelStorei(32877,Pe),ge===0&&oe.generateMipmaps&&Z.generateMipmap(C),we.unbindTexture()},this.initTexture=function(H){ee.setTexture2D(H,0),we.unbindTexture()},this.resetState=function(){g=0,v=0,b=null,we.reset(),V.reset()},typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}bt.prototype.isWebGLRenderer=!0;class VA extends bt{}VA.prototype.isWebGL1Renderer=!0;class By extends gt{constructor(){super();this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,n){return super.copy(e,n),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const n=super.toJSON(e);return this.fog!==null&&(n.object.fog=this.fog.toJSON()),n}}By.prototype.isScene=!0;class Il{constructor(e,n){this.array=e,this.stride=n,this.count=e!==void 0?e.length/n:0,this.usage=wl,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Zn()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,n,i){e*=this.stride,i*=n.stride;for(let r=0,a=this.stride;r<a;r++)this.array[e+r]=n.array[i+r];return this}set(e,n=0){return this.array.set(e,n),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Zn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const n=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(n,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Zn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}Il.prototype.isInterleavedBuffer=!0;const Vt=new k;class Fl{constructor(e,n,i,r=!1){this.name="",this.data=e,this.itemSize=n,this.offset=i,this.normalized=r===!0}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let n=0,i=this.data.count;n<i;n++)Vt.x=this.getX(n),Vt.y=this.getY(n),Vt.z=this.getZ(n),Vt.applyMatrix4(e),this.setXYZ(n,Vt.x,Vt.y,Vt.z);return this}applyNormalMatrix(e){for(let n=0,i=this.count;n<i;n++)Vt.x=this.getX(n),Vt.y=this.getY(n),Vt.z=this.getZ(n),Vt.applyNormalMatrix(e),this.setXYZ(n,Vt.x,Vt.y,Vt.z);return this}transformDirection(e){for(let n=0,i=this.count;n<i;n++)Vt.x=this.getX(n),Vt.y=this.getY(n),Vt.z=this.getZ(n),Vt.transformDirection(e),this.setXYZ(n,Vt.x,Vt.y,Vt.z);return this}setX(e,n){return this.data.array[e*this.data.stride+this.offset]=n,this}setY(e,n){return this.data.array[e*this.data.stride+this.offset+1]=n,this}setZ(e,n){return this.data.array[e*this.data.stride+this.offset+2]=n,this}setW(e,n){return this.data.array[e*this.data.stride+this.offset+3]=n,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,n,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=n,this.data.array[e+1]=i,this}setXYZ(e,n,i,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=n,this.data.array[e+1]=i,this.data.array[e+2]=r,this}setXYZW(e,n,i,r,a){return e=e*this.data.stride+this.offset,this.data.array[e+0]=n,this.data.array[e+1]=i,this.data.array[e+2]=r,this.data.array[e+3]=a,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const n=[];for(let i=0;i<this.count;i++){const r=i*this.data.stride+this.offset;for(let a=0;a<this.itemSize;a++)n.push(this.data.array[r+a])}return new tn(new this.array.constructor(n),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Fl(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const n=[];for(let i=0;i<this.count;i++){const r=i*this.data.stride+this.offset;for(let a=0;a<this.itemSize;a++)n.push(this.data.array[r+a])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:n,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}Fl.prototype.isInterleavedBufferAttribute=!0;class Oy extends mn{constructor(e){super();this.type="SpriteMaterial",this.color=new We(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this}}Oy.prototype.isSpriteMaterial=!0;let Os;const Bl=new k,Ns=new k,zs=new k,Us=new Te,Ol=new Te,Ny=new Fe,tu=new k,Nl=new k,nu=new k,zy=new Te,cp=new Te,Uy=new Te;class kA extends gt{constructor(e){super();if(this.type="Sprite",Os===void 0){Os=new wt;const n=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),i=new Il(n,5);Os.setIndex([0,1,2,0,2,3]),Os.setAttribute("position",new Fl(i,3,0,!1)),Os.setAttribute("uv",new Fl(i,2,3,!1))}this.geometry=Os,this.material=e!==void 0?e:new Oy,this.center=new Te(.5,.5)}raycast(e,n){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Ns.setFromMatrixScale(this.matrixWorld),Ny.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),zs.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Ns.multiplyScalar(-zs.z);const i=this.material.rotation;let r,a;i!==0&&(a=Math.cos(i),r=Math.sin(i));const s=this.center;iu(tu.set(-.5,-.5,0),zs,s,Ns,r,a),iu(Nl.set(.5,-.5,0),zs,s,Ns,r,a),iu(nu.set(.5,.5,0),zs,s,Ns,r,a),zy.set(0,0),cp.set(1,0),Uy.set(1,1);let o=e.ray.intersectTriangle(tu,Nl,nu,!1,Bl);if(o===null&&(iu(Nl.set(-.5,.5,0),zs,s,Ns,r,a),cp.set(0,1),o=e.ray.intersectTriangle(tu,nu,Nl,!1,Bl),o===null))return;const l=e.ray.origin.distanceTo(Bl);l<e.near||l>e.far||n.push({distance:l,point:Bl.clone(),uv:Yt.getUV(Bl,tu,Nl,nu,zy,cp,Uy,new Te),face:null,object:this})}copy(e){return super.copy(e),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}kA.prototype.isSprite=!0;function iu(t,e,n,i,r,a){Us.subVectors(t,n).addScalar(.5).multiply(i),r!==void 0?(Ol.x=a*Us.x-r*Us.y,Ol.y=r*Us.x+a*Us.y):Ol.copy(Us),t.copy(e),t.x+=Ol.x,t.y+=Ol.y,t.applyMatrix4(Ny)}const Gy=new k,Hy=new yt,Vy=new yt,WA=new k,ky=new Fe;class hp extends Tn{constructor(e,n){super(e,n);this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Fe,this.bindMatrixInverse=new Fe}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,n){this.skeleton=e,n===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),n=this.matrixWorld),this.bindMatrix.copy(n),this.bindMatrixInverse.copy(n).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new yt,n=this.geometry.attributes.skinWeight;for(let i=0,r=n.count;i<r;i++){e.x=n.getX(i),e.y=n.getY(i),e.z=n.getZ(i),e.w=n.getW(i);const a=1/e.manhattanLength();a!==1/0?e.multiplyScalar(a):e.set(1,0,0,0),n.setXYZW(i,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,n){const i=this.skeleton,r=this.geometry;Hy.fromBufferAttribute(r.attributes.skinIndex,e),Vy.fromBufferAttribute(r.attributes.skinWeight,e),Gy.copy(n).applyMatrix4(this.bindMatrix),n.set(0,0,0);for(let a=0;a<4;a++){const s=Vy.getComponent(a);if(s!==0){const o=Hy.getComponent(a);ky.multiplyMatrices(i.bones[o].matrixWorld,i.boneInverses[o]),n.addScaledVector(WA.copy(Gy).applyMatrix4(ky),s)}}return n.applyMatrix4(this.bindMatrixInverse)}}hp.prototype.isSkinnedMesh=!0;class ru extends gt{constructor(){super();this.type="Bone"}}ru.prototype.isBone=!0;class Wy extends Xt{constructor(e=null,n=1,i=1,r,a,s,o,l,c=en,h=en,u,f){super(null,s,o,l,c,h,r,a,u,f);this.image={data:e,width:n,height:i},this.magFilter=c,this.minFilter=h,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}Wy.prototype.isDataTexture=!0;const $y=new Fe,$A=new Fe;class up{constructor(e=[],n=[]){this.uuid=Zn(),this.bones=e.slice(0),this.boneInverses=n,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const e=this.bones,n=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),n.length===0)this.calculateInverses();else if(e.length!==n.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let i=0,r=this.bones.length;i<r;i++)this.boneInverses.push(new Fe)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,n=this.bones.length;e<n;e++){const i=new Fe;this.bones[e]&&i.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(i)}}pose(){for(let e=0,n=this.bones.length;e<n;e++){const i=this.bones[e];i&&i.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,n=this.bones.length;e<n;e++){const i=this.bones[e];i&&(i.parent&&i.parent.isBone?(i.matrix.copy(i.parent.matrixWorld).invert(),i.matrix.multiply(i.matrixWorld)):i.matrix.copy(i.matrixWorld),i.matrix.decompose(i.position,i.quaternion,i.scale))}}update(){const e=this.bones,n=this.boneInverses,i=this.boneMatrices,r=this.boneTexture;for(let a=0,s=e.length;a<s;a++){const o=e[a]?e[a].matrixWorld:$A;$y.multiplyMatrices(o,n[a]),$y.toArray(i,a*16)}r!==null&&(r.needsUpdate=!0)}clone(){return new up(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Iv(e),e=Math.max(e,4);const n=new Float32Array(e*e*4);n.set(this.boneMatrices);const i=new Wy(n,e,e,pn,Er);return i.needsUpdate=!0,this.boneMatrices=n,this.boneTexture=i,this.boneTextureSize=e,this}getBoneByName(e){for(let n=0,i=this.bones.length;n<i;n++){const r=this.bones[n];if(r.name===e)return r}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,n){this.uuid=e.uuid;for(let i=0,r=e.bones.length;i<r;i++){const a=e.bones[i];let s=n[a];s===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",a),s=new ru),this.bones.push(s),this.boneInverses.push(new Fe().fromArray(e.boneInverses[i]))}return this.init(),this}toJSON(){const e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const n=this.bones,i=this.boneInverses;for(let r=0,a=n.length;r<a;r++){const s=n[r];e.bones.push(s.uuid);const o=i[r];e.boneInverses.push(o.toArray())}return e}}class fp extends tn{constructor(e,n,i,r=1){typeof i=="number"&&(r=i,i=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument."));super(e,n,i);this.meshPerAttribute=r}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}fp.prototype.isInstancedBufferAttribute=!0;const jy=new Fe,Xy=new Fe,au=[],zl=new Tn;class jA extends Tn{constructor(e,n,i){super(e,n);this.instanceMatrix=new fp(new Float32Array(i*16),16),this.instanceColor=null,this.count=i,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,n){n.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,n){n.fromArray(this.instanceMatrix.array,e*16)}raycast(e,n){const i=this.matrixWorld,r=this.count;if(zl.geometry=this.geometry,zl.material=this.material,zl.material!==void 0)for(let a=0;a<r;a++){this.getMatrixAt(a,jy),Xy.multiplyMatrices(i,jy),zl.matrixWorld=Xy,zl.raycast(e,au);for(let s=0,o=au.length;s<o;s++){const l=au[s];l.instanceId=a,l.object=this,n.push(l)}au.length=0}}setColorAt(e,n){this.instanceColor===null&&(this.instanceColor=new fp(new Float32Array(this.instanceMatrix.count*3),3)),n.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,n){n.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}jA.prototype.isInstancedMesh=!0;class Gs extends mn{constructor(e){super();this.type="LineBasicMaterial",this.color=new We(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this}}Gs.prototype.isLineBasicMaterial=!0;const qy=new k,Yy=new k,Zy=new Fe,dp=new Ms,su=new _s;class ou extends gt{constructor(e=new wt,n=new Gs){super();this.type="Line",this.geometry=e,this.material=n,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const n=e.attributes.position,i=[0];for(let r=1,a=n.count;r<a;r++)qy.fromBufferAttribute(n,r-1),Yy.fromBufferAttribute(n,r),i[r]=i[r-1],i[r]+=qy.distanceTo(Yy);e.setAttribute("lineDistance",new Dt(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(e,n){const i=this.geometry,r=this.matrixWorld,a=e.params.Line.threshold,s=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),su.copy(i.boundingSphere),su.applyMatrix4(r),su.radius+=a,e.ray.intersectsSphere(su)===!1)return;Zy.copy(r).invert(),dp.copy(e.ray).applyMatrix4(Zy);const o=a/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,c=new k,h=new k,u=new k,f=new k,d=this.isLineSegments?2:1;if(i.isBufferGeometry){const p=i.index,x=i.attributes.position;if(p!==null){const g=Math.max(0,s.start),v=Math.min(p.count,s.start+s.count);for(let b=g,_=v-1;b<_;b+=d){const M=p.getX(b),y=p.getX(b+1);if(c.fromBufferAttribute(x,M),h.fromBufferAttribute(x,y),dp.distanceSqToSegment(c,h,f,u)>l)continue;f.applyMatrix4(this.matrixWorld);const E=e.ray.origin.distanceTo(f);E<e.near||E>e.far||n.push({distance:E,point:u.clone().applyMatrix4(this.matrixWorld),index:b,face:null,faceIndex:null,object:this})}}else{const g=Math.max(0,s.start),v=Math.min(x.count,s.start+s.count);for(let b=g,_=v-1;b<_;b+=d){if(c.fromBufferAttribute(x,b),h.fromBufferAttribute(x,b+1),dp.distanceSqToSegment(c,h,f,u)>l)continue;f.applyMatrix4(this.matrixWorld);const y=e.ray.origin.distanceTo(f);y<e.near||y>e.far||n.push({distance:y,point:u.clone().applyMatrix4(this.matrixWorld),index:b,face:null,faceIndex:null,object:this})}}}else i.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const n=e.morphAttributes,i=Object.keys(n);if(i.length>0){const r=n[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,s=r.length;a<s;a++){const o=r[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=a}}}}else{const n=e.morphTargets;n!==void 0&&n.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}ou.prototype.isLine=!0;const Jy=new k,Ky=new k;class pp extends ou{constructor(e,n){super(e,n);this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const n=e.attributes.position,i=[];for(let r=0,a=n.count;r<a;r+=2)Jy.fromBufferAttribute(n,r),Ky.fromBufferAttribute(n,r+1),i[r]=r===0?0:i[r-1],i[r+1]=i[r]+Jy.distanceTo(Ky);e.setAttribute("lineDistance",new Dt(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}pp.prototype.isLineSegments=!0;class XA extends ou{constructor(e,n){super(e,n);this.type="LineLoop"}}XA.prototype.isLineLoop=!0;class Qy extends mn{constructor(e){super();this.type="PointsMaterial",this.color=new We(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this}}Qy.prototype.isPointsMaterial=!0;const ex=new Fe,mp=new Ms,lu=new _s,cu=new k;class qA extends gt{constructor(e=new wt,n=new Qy){super();this.type="Points",this.geometry=e,this.material=n,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(e,n){const i=this.geometry,r=this.matrixWorld,a=e.params.Points.threshold,s=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),lu.copy(i.boundingSphere),lu.applyMatrix4(r),lu.radius+=a,e.ray.intersectsSphere(lu)===!1)return;ex.copy(r).invert(),mp.copy(e.ray).applyMatrix4(ex);const o=a/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o;if(i.isBufferGeometry){const c=i.index,u=i.attributes.position;if(c!==null){const f=Math.max(0,s.start),d=Math.min(c.count,s.start+s.count);for(let p=f,m=d;p<m;p++){const x=c.getX(p);cu.fromBufferAttribute(u,x),tx(cu,x,l,r,e,n,this)}}else{const f=Math.max(0,s.start),d=Math.min(u.count,s.start+s.count);for(let p=f,m=d;p<m;p++)cu.fromBufferAttribute(u,p),tx(cu,p,l,r,e,n,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const n=e.morphAttributes,i=Object.keys(n);if(i.length>0){const r=n[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,s=r.length;a<s;a++){const o=r[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=a}}}}else{const n=e.morphTargets;n!==void 0&&n.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}qA.prototype.isPoints=!0;function tx(t,e,n,i,r,a,s){const o=mp.distanceSqToPoint(t);if(o<n){const l=new k;mp.closestPointToPoint(t,l),l.applyMatrix4(i);const c=r.ray.origin.distanceTo(l);if(c<r.near||c>r.far)return;a.push({distance:c,distanceToRay:Math.sqrt(o),point:l,index:e,face:null,object:s})}}class YA extends Xt{constructor(e,n,i,r,a,s,o,l,c){super(e,n,i,r,a,s,o,l,c);this.minFilter=s!==void 0?s:dn,this.magFilter=a!==void 0?a:dn,this.generateMipmaps=!1;const h=this;function u(){h.needsUpdate=!0,e.requestVideoFrameCallback(u)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(u)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}YA.prototype.isVideoTexture=!0;class ZA extends Xt{constructor(e,n,i){super({width:e,height:n});this.format=i,this.magFilter=en,this.minFilter=en,this.generateMipmaps=!1,this.needsUpdate=!0}}ZA.prototype.isFramebufferTexture=!0;class JA extends Xt{constructor(e,n,i,r,a,s,o,l,c,h,u,f){super(null,s,o,l,c,h,r,a,u,f);this.image={width:n,height:i},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}JA.prototype.isCompressedTexture=!0;class KA extends Xt{constructor(e,n,i,r,a,s,o,l,c){super(e,n,i,r,a,s,o,l,c);this.needsUpdate=!0}}KA.prototype.isCanvasTexture=!0;new k;new k;new k;new Yt;class Vn{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,n){const i=this.getUtoTmapping(e);return this.getPoint(i,n)}getPoints(e=5){const n=[];for(let i=0;i<=e;i++)n.push(this.getPoint(i/e));return n}getSpacedPoints(e=5){const n=[];for(let i=0;i<=e;i++)n.push(this.getPointAt(i/e));return n}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const n=[];let i,r=this.getPoint(0),a=0;n.push(0);for(let s=1;s<=e;s++)i=this.getPoint(s/e),a+=i.distanceTo(r),n.push(a),r=i;return this.cacheArcLengths=n,n}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,n){const i=this.getLengths();let r=0;const a=i.length;let s;n?s=n:s=e*i[a-1];let o=0,l=a-1,c;for(;o<=l;)if(r=Math.floor(o+(l-o)/2),c=i[r]-s,c<0)o=r+1;else if(c>0)l=r-1;else{l=r;break}if(r=l,i[r]===s)return r/(a-1);const h=i[r],f=i[r+1]-h,d=(s-h)/f;return(r+d)/(a-1)}getTangent(e,n){const i=1e-4;let r=e-i,a=e+i;r<0&&(r=0),a>1&&(a=1);const s=this.getPoint(r),o=this.getPoint(a),l=n||(s.isVector2?new Te:new k);return l.copy(o).sub(s).normalize(),l}getTangentAt(e,n){const i=this.getUtoTmapping(e);return this.getTangent(i,n)}computeFrenetFrames(e,n){const i=new k,r=[],a=[],s=[],o=new k,l=new Fe;for(let d=0;d<=e;d++){const p=d/e;r[d]=this.getTangentAt(p,new k)}a[0]=new k,s[0]=new k;let c=Number.MAX_VALUE;const h=Math.abs(r[0].x),u=Math.abs(r[0].y),f=Math.abs(r[0].z);h<=c&&(c=h,i.set(1,0,0)),u<=c&&(c=u,i.set(0,1,0)),f<=c&&i.set(0,0,1),o.crossVectors(r[0],i).normalize(),a[0].crossVectors(r[0],o),s[0].crossVectors(r[0],a[0]);for(let d=1;d<=e;d++){if(a[d]=a[d-1].clone(),s[d]=s[d-1].clone(),o.crossVectors(r[d-1],r[d]),o.length()>Number.EPSILON){o.normalize();const p=Math.acos(En(r[d-1].dot(r[d]),-1,1));a[d].applyMatrix4(l.makeRotationAxis(o,p))}s[d].crossVectors(r[d],a[d])}if(n===!0){let d=Math.acos(En(a[0].dot(a[e]),-1,1));d/=e,r[0].dot(o.crossVectors(a[0],a[e]))>0&&(d=-d);for(let p=1;p<=e;p++)a[p].applyMatrix4(l.makeRotationAxis(r[p],d*p)),s[p].crossVectors(r[p],a[p])}return{tangents:r,normals:a,binormals:s}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class hu extends Vn{constructor(e=0,n=0,i=1,r=1,a=0,s=Math.PI*2,o=!1,l=0){super();this.type="EllipseCurve",this.aX=e,this.aY=n,this.xRadius=i,this.yRadius=r,this.aStartAngle=a,this.aEndAngle=s,this.aClockwise=o,this.aRotation=l}getPoint(e,n){const i=n||new Te,r=Math.PI*2;let a=this.aEndAngle-this.aStartAngle;const s=Math.abs(a)<Number.EPSILON;for(;a<0;)a+=r;for(;a>r;)a-=r;a<Number.EPSILON&&(s?a=0:a=r),this.aClockwise===!0&&!s&&(a===r?a=-r:a=a-r);const o=this.aStartAngle+e*a;let l=this.aX+this.xRadius*Math.cos(o),c=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const h=Math.cos(this.aRotation),u=Math.sin(this.aRotation),f=l-this.aX,d=c-this.aY;l=f*h-d*u+this.aX,c=f*u+d*h+this.aY}return i.set(l,c)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}hu.prototype.isEllipseCurve=!0;class nx extends hu{constructor(e,n,i,r,a,s){super(e,n,i,i,r,a,s);this.type="ArcCurve"}}nx.prototype.isArcCurve=!0;function gp(){let t=0,e=0,n=0,i=0;function r(a,s,o,l){t=a,e=o,n=-3*a+3*s-2*o-l,i=2*a-2*s+o+l}return{initCatmullRom:function(a,s,o,l,c){r(s,o,c*(o-a),c*(l-s))},initNonuniformCatmullRom:function(a,s,o,l,c,h,u){let f=(s-a)/c-(o-a)/(c+h)+(o-s)/h,d=(o-s)/h-(l-s)/(h+u)+(l-o)/u;f*=h,d*=h,r(s,o,f,d)},calc:function(a){const s=a*a,o=s*a;return t+e*a+n*s+i*o}}}const uu=new k,vp=new gp,yp=new gp,xp=new gp;class ix extends Vn{constructor(e=[],n=!1,i="centripetal",r=.5){super();this.type="CatmullRomCurve3",this.points=e,this.closed=n,this.curveType=i,this.tension=r}getPoint(e,n=new k){const i=n,r=this.points,a=r.length,s=(a-(this.closed?0:1))*e;let o=Math.floor(s),l=s-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/a)+1)*a:l===0&&o===a-1&&(o=a-2,l=1);let c,h;this.closed||o>0?c=r[(o-1)%a]:(uu.subVectors(r[0],r[1]).add(r[0]),c=uu);const u=r[o%a],f=r[(o+1)%a];if(this.closed||o+2<a?h=r[(o+2)%a]:(uu.subVectors(r[a-1],r[a-2]).add(r[a-1]),h=uu),this.curveType==="centripetal"||this.curveType==="chordal"){const d=this.curveType==="chordal"?.5:.25;let p=Math.pow(c.distanceToSquared(u),d),m=Math.pow(u.distanceToSquared(f),d),x=Math.pow(f.distanceToSquared(h),d);m<1e-4&&(m=1),p<1e-4&&(p=m),x<1e-4&&(x=m),vp.initNonuniformCatmullRom(c.x,u.x,f.x,h.x,p,m,x),yp.initNonuniformCatmullRom(c.y,u.y,f.y,h.y,p,m,x),xp.initNonuniformCatmullRom(c.z,u.z,f.z,h.z,p,m,x)}else this.curveType==="catmullrom"&&(vp.initCatmullRom(c.x,u.x,f.x,h.x,this.tension),yp.initCatmullRom(c.y,u.y,f.y,h.y,this.tension),xp.initCatmullRom(c.z,u.z,f.z,h.z,this.tension));return i.set(vp.calc(l),yp.calc(l),xp.calc(l)),i}copy(e){super.copy(e),this.points=[];for(let n=0,i=e.points.length;n<i;n++){const r=e.points[n];this.points.push(r.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let n=0,i=this.points.length;n<i;n++){const r=this.points[n];e.points.push(r.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let n=0,i=e.points.length;n<i;n++){const r=e.points[n];this.points.push(new k().fromArray(r))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}ix.prototype.isCatmullRomCurve3=!0;function rx(t,e,n,i,r){const a=(i-e)*.5,s=(r-n)*.5,o=t*t,l=t*o;return(2*n-2*i+a+s)*l+(-3*n+3*i-2*a-s)*o+a*t+n}function QA(t,e){const n=1-t;return n*n*e}function eL(t,e){return 2*(1-t)*t*e}function tL(t,e){return t*t*e}function Ul(t,e,n,i){return QA(t,e)+eL(t,n)+tL(t,i)}function nL(t,e){const n=1-t;return n*n*n*e}function iL(t,e){const n=1-t;return 3*n*n*t*e}function rL(t,e){return 3*(1-t)*t*t*e}function aL(t,e){return t*t*t*e}function Gl(t,e,n,i,r){return nL(t,e)+iL(t,n)+rL(t,i)+aL(t,r)}class _p extends Vn{constructor(e=new Te,n=new Te,i=new Te,r=new Te){super();this.type="CubicBezierCurve",this.v0=e,this.v1=n,this.v2=i,this.v3=r}getPoint(e,n=new Te){const i=n,r=this.v0,a=this.v1,s=this.v2,o=this.v3;return i.set(Gl(e,r.x,a.x,s.x,o.x),Gl(e,r.y,a.y,s.y,o.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}_p.prototype.isCubicBezierCurve=!0;class ax extends Vn{constructor(e=new k,n=new k,i=new k,r=new k){super();this.type="CubicBezierCurve3",this.v0=e,this.v1=n,this.v2=i,this.v3=r}getPoint(e,n=new k){const i=n,r=this.v0,a=this.v1,s=this.v2,o=this.v3;return i.set(Gl(e,r.x,a.x,s.x,o.x),Gl(e,r.y,a.y,s.y,o.y),Gl(e,r.z,a.z,s.z,o.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}ax.prototype.isCubicBezierCurve3=!0;class fu extends Vn{constructor(e=new Te,n=new Te){super();this.type="LineCurve",this.v1=e,this.v2=n}getPoint(e,n=new Te){const i=n;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,n){return this.getPoint(e,n)}getTangent(e,n){const i=n||new Te;return i.copy(this.v2).sub(this.v1).normalize(),i}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}fu.prototype.isLineCurve=!0;class sL extends Vn{constructor(e=new k,n=new k){super();this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=n}getPoint(e,n=new k){const i=n;return e===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,n){return this.getPoint(e,n)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Mp extends Vn{constructor(e=new Te,n=new Te,i=new Te){super();this.type="QuadraticBezierCurve",this.v0=e,this.v1=n,this.v2=i}getPoint(e,n=new Te){const i=n,r=this.v0,a=this.v1,s=this.v2;return i.set(Ul(e,r.x,a.x,s.x),Ul(e,r.y,a.y,s.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Mp.prototype.isQuadraticBezierCurve=!0;class sx extends Vn{constructor(e=new k,n=new k,i=new k){super();this.type="QuadraticBezierCurve3",this.v0=e,this.v1=n,this.v2=i}getPoint(e,n=new k){const i=n,r=this.v0,a=this.v1,s=this.v2;return i.set(Ul(e,r.x,a.x,s.x),Ul(e,r.y,a.y,s.y),Ul(e,r.z,a.z,s.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}sx.prototype.isQuadraticBezierCurve3=!0;class wp extends Vn{constructor(e=[]){super();this.type="SplineCurve",this.points=e}getPoint(e,n=new Te){const i=n,r=this.points,a=(r.length-1)*e,s=Math.floor(a),o=a-s,l=r[s===0?s:s-1],c=r[s],h=r[s>r.length-2?r.length-1:s+1],u=r[s>r.length-3?r.length-1:s+2];return i.set(rx(o,l.x,c.x,h.x,u.x),rx(o,l.y,c.y,h.y,u.y)),i}copy(e){super.copy(e),this.points=[];for(let n=0,i=e.points.length;n<i;n++){const r=e.points[n];this.points.push(r.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let n=0,i=this.points.length;n<i;n++){const r=this.points[n];e.points.push(r.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let n=0,i=e.points.length;n<i;n++){const r=e.points[n];this.points.push(new Te().fromArray(r))}return this}}wp.prototype.isSplineCurve=!0;var ox=Object.freeze({__proto__:null,ArcCurve:nx,CatmullRomCurve3:ix,CubicBezierCurve:_p,CubicBezierCurve3:ax,EllipseCurve:hu,LineCurve:fu,LineCurve3:sL,QuadraticBezierCurve:Mp,QuadraticBezierCurve3:sx,SplineCurve:wp});class oL extends Vn{constructor(){super();this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),n=this.curves[this.curves.length-1].getPoint(1);e.equals(n)||this.curves.push(new fu(n,e))}getPoint(e,n){const i=e*this.getLength(),r=this.getCurveLengths();let a=0;for(;a<r.length;){if(r[a]>=i){const s=r[a]-i,o=this.curves[a],l=o.getLength(),c=l===0?0:1-s/l;return o.getPointAt(c,n)}a++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let n=0;for(let i=0,r=this.curves.length;i<r;i++)n+=this.curves[i].getLength(),e.push(n);return this.cacheLengths=e,e}getSpacedPoints(e=40){const n=[];for(let i=0;i<=e;i++)n.push(this.getPoint(i/e));return this.autoClose&&n.push(n[0]),n}getPoints(e=12){const n=[];let i;for(let r=0,a=this.curves;r<a.length;r++){const s=a[r],o=s&&s.isEllipseCurve?e*2:s&&(s.isLineCurve||s.isLineCurve3)?1:s&&s.isSplineCurve?e*s.points.length:e,l=s.getPoints(o);for(let c=0;c<l.length;c++){const h=l[c];i&&i.equals(h)||(n.push(h),i=h)}}return this.autoClose&&n.length>1&&!n[n.length-1].equals(n[0])&&n.push(n[0]),n}copy(e){super.copy(e),this.curves=[];for(let n=0,i=e.curves.length;n<i;n++){const r=e.curves[n];this.curves.push(r.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let n=0,i=this.curves.length;n<i;n++){const r=this.curves[n];e.curves.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let n=0,i=e.curves.length;n<i;n++){const r=e.curves[n];this.curves.push(new ox[r.type]().fromJSON(r))}return this}}class bp extends oL{constructor(e){super();this.type="Path",this.currentPoint=new Te,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let n=1,i=e.length;n<i;n++)this.lineTo(e[n].x,e[n].y);return this}moveTo(e,n){return this.currentPoint.set(e,n),this}lineTo(e,n){const i=new fu(this.currentPoint.clone(),new Te(e,n));return this.curves.push(i),this.currentPoint.set(e,n),this}quadraticCurveTo(e,n,i,r){const a=new Mp(this.currentPoint.clone(),new Te(e,n),new Te(i,r));return this.curves.push(a),this.currentPoint.set(i,r),this}bezierCurveTo(e,n,i,r,a,s){const o=new _p(this.currentPoint.clone(),new Te(e,n),new Te(i,r),new Te(a,s));return this.curves.push(o),this.currentPoint.set(a,s),this}splineThru(e){const n=[this.currentPoint.clone()].concat(e),i=new wp(n);return this.curves.push(i),this.currentPoint.copy(e[e.length-1]),this}arc(e,n,i,r,a,s){const o=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+o,n+l,i,r,a,s),this}absarc(e,n,i,r,a,s){return this.absellipse(e,n,i,i,r,a,s),this}ellipse(e,n,i,r,a,s,o,l){const c=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+c,n+h,i,r,a,s,o,l),this}absellipse(e,n,i,r,a,s,o,l){const c=new hu(e,n,i,r,a,s,o,l);if(this.curves.length>0){const u=c.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(c);const h=c.getPoint(1);return this.currentPoint.copy(h),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Hl extends bp{constructor(e){super(e);this.uuid=Zn(),this.type="Shape",this.holes=[]}getPointsHoles(e){const n=[];for(let i=0,r=this.holes.length;i<r;i++)n[i]=this.holes[i].getPoints(e);return n}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let n=0,i=e.holes.length;n<i;n++){const r=e.holes[n];this.holes.push(r.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let n=0,i=this.holes.length;n<i;n++){const r=this.holes[n];e.holes.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let n=0,i=e.holes.length;n<i;n++){const r=e.holes[n];this.holes.push(new bp().fromJSON(r))}return this}}const lL={triangulate:function(t,e,n=2){const i=e&&e.length,r=i?e[0]*n:t.length;let a=lx(t,0,r,n,!0);const s=[];if(!a||a.next===a.prev)return s;let o,l,c,h,u,f,d;if(i&&(a=dL(t,e,a,n)),t.length>80*n){o=c=t[0],l=h=t[1];for(let p=n;p<r;p+=n)u=t[p],f=t[p+1],u<o&&(o=u),f<l&&(l=f),u>c&&(c=u),f>h&&(h=f);d=Math.max(c-o,h-l),d=d!==0?1/d:0}return Vl(a,s,n,o,l,d),s}};function lx(t,e,n,i,r){let a,s;if(r===SL(t,e,n,i)>0)for(a=e;a<n;a+=i)s=ux(a,t[a],t[a+1],s);else for(a=n-i;a>=e;a-=i)s=ux(a,t[a],t[a+1],s);return s&&du(s,s.next)&&(Wl(s),s=s.next),s}function Nr(t,e){if(!t)return t;e||(e=t);let n=t,i;do if(i=!1,!n.steiner&&(du(n,n.next)||Ot(n.prev,n,n.next)===0)){if(Wl(n),n=e=n.prev,n===n.next)break;i=!0}else n=n.next;while(i||n!==e);return e}function Vl(t,e,n,i,r,a,s){if(!t)return;!s&&a&&yL(t,i,r,a);let o=t,l,c;for(;t.prev!==t.next;){if(l=t.prev,c=t.next,a?hL(t,i,r,a):cL(t)){e.push(l.i/n),e.push(t.i/n),e.push(c.i/n),Wl(t),t=c.next,o=c.next;continue}if(t=c,t===o){s?s===1?(t=uL(Nr(t),e,n),Vl(t,e,n,i,r,a,2)):s===2&&fL(t,e,n,i,r,a):Vl(Nr(t),e,n,i,r,a,1);break}}}function cL(t){const e=t.prev,n=t,i=t.next;if(Ot(e,n,i)>=0)return!1;let r=t.next.next;for(;r!==t.prev;){if(Hs(e.x,e.y,n.x,n.y,i.x,i.y,r.x,r.y)&&Ot(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function hL(t,e,n,i){const r=t.prev,a=t,s=t.next;if(Ot(r,a,s)>=0)return!1;const o=r.x<a.x?r.x<s.x?r.x:s.x:a.x<s.x?a.x:s.x,l=r.y<a.y?r.y<s.y?r.y:s.y:a.y<s.y?a.y:s.y,c=r.x>a.x?r.x>s.x?r.x:s.x:a.x>s.x?a.x:s.x,h=r.y>a.y?r.y>s.y?r.y:s.y:a.y>s.y?a.y:s.y,u=Sp(o,l,e,n,i),f=Sp(c,h,e,n,i);let d=t.prevZ,p=t.nextZ;for(;d&&d.z>=u&&p&&p.z<=f;){if(d!==t.prev&&d!==t.next&&Hs(r.x,r.y,a.x,a.y,s.x,s.y,d.x,d.y)&&Ot(d.prev,d,d.next)>=0||(d=d.prevZ,p!==t.prev&&p!==t.next&&Hs(r.x,r.y,a.x,a.y,s.x,s.y,p.x,p.y)&&Ot(p.prev,p,p.next)>=0))return!1;p=p.nextZ}for(;d&&d.z>=u;){if(d!==t.prev&&d!==t.next&&Hs(r.x,r.y,a.x,a.y,s.x,s.y,d.x,d.y)&&Ot(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;p&&p.z<=f;){if(p!==t.prev&&p!==t.next&&Hs(r.x,r.y,a.x,a.y,s.x,s.y,p.x,p.y)&&Ot(p.prev,p,p.next)>=0)return!1;p=p.nextZ}return!0}function uL(t,e,n){let i=t;do{const r=i.prev,a=i.next.next;!du(r,a)&&cx(r,i,i.next,a)&&kl(r,a)&&kl(a,r)&&(e.push(r.i/n),e.push(i.i/n),e.push(a.i/n),Wl(i),Wl(i.next),i=t=a),i=i.next}while(i!==t);return Nr(i)}function fL(t,e,n,i,r,a){let s=t;do{let o=s.next.next;for(;o!==s.prev;){if(s.i!==o.i&&ML(s,o)){let l=hx(s,o);s=Nr(s,s.next),l=Nr(l,l.next),Vl(s,e,n,i,r,a),Vl(l,e,n,i,r,a);return}o=o.next}s=s.next}while(s!==t)}function dL(t,e,n,i){const r=[];let a,s,o,l,c;for(a=0,s=e.length;a<s;a++)o=e[a]*i,l=a<s-1?e[a+1]*i:t.length,c=lx(t,o,l,i,!1),c===c.next&&(c.steiner=!0),r.push(_L(c));for(r.sort(pL),a=0;a<r.length;a++)mL(r[a],n),n=Nr(n,n.next);return n}function pL(t,e){return t.x-e.x}function mL(t,e){if(e=gL(t,e),e){const n=hx(e,t);Nr(e,e.next),Nr(n,n.next)}}function gL(t,e){let n=e;const i=t.x,r=t.y;let a=-1/0,s;do{if(r<=n.y&&r>=n.next.y&&n.next.y!==n.y){const f=n.x+(r-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(f<=i&&f>a){if(a=f,f===i){if(r===n.y)return n;if(r===n.next.y)return n.next}s=n.x<n.next.x?n:n.next}}n=n.next}while(n!==e);if(!s)return null;if(i===a)return s;const o=s,l=s.x,c=s.y;let h=1/0,u;n=s;do i>=n.x&&n.x>=l&&i!==n.x&&Hs(r<c?i:a,r,l,c,r<c?a:i,r,n.x,n.y)&&(u=Math.abs(r-n.y)/(i-n.x),kl(n,t)&&(u<h||u===h&&(n.x>s.x||n.x===s.x&&vL(s,n)))&&(s=n,h=u)),n=n.next;while(n!==o);return s}function vL(t,e){return Ot(t.prev,t,e.prev)<0&&Ot(e.next,t,t.next)<0}function yL(t,e,n,i){let r=t;do r.z===null&&(r.z=Sp(r.x,r.y,e,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==t);r.prevZ.nextZ=null,r.prevZ=null,xL(r)}function xL(t){let e,n,i,r,a,s,o,l,c=1;do{for(n=t,t=null,a=null,s=0;n;){for(s++,i=n,o=0,e=0;e<c&&(o++,i=i.nextZ,!!i);e++);for(l=c;o>0||l>0&&i;)o!==0&&(l===0||!i||n.z<=i.z)?(r=n,n=n.nextZ,o--):(r=i,i=i.nextZ,l--),a?a.nextZ=r:t=r,r.prevZ=a,a=r;n=i}a.nextZ=null,c*=2}while(s>1);return t}function Sp(t,e,n,i,r){return t=32767*(t-n)*r,e=32767*(e-i)*r,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,t|e<<1}function _L(t){let e=t,n=t;do(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next;while(e!==t);return n}function Hs(t,e,n,i,r,a,s,o){return(r-s)*(e-o)-(t-s)*(a-o)>=0&&(t-s)*(i-o)-(n-s)*(e-o)>=0&&(n-s)*(a-o)-(r-s)*(i-o)>=0}function ML(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!wL(t,e)&&(kl(t,e)&&kl(e,t)&&bL(t,e)&&(Ot(t.prev,t,e.prev)||Ot(t,e.prev,e))||du(t,e)&&Ot(t.prev,t,t.next)>0&&Ot(e.prev,e,e.next)>0)}function Ot(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function du(t,e){return t.x===e.x&&t.y===e.y}function cx(t,e,n,i){const r=mu(Ot(t,e,n)),a=mu(Ot(t,e,i)),s=mu(Ot(n,i,t)),o=mu(Ot(n,i,e));return!!(r!==a&&s!==o||r===0&&pu(t,n,e)||a===0&&pu(t,i,e)||s===0&&pu(n,t,i)||o===0&&pu(n,e,i))}function pu(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function mu(t){return t>0?1:t<0?-1:0}function wL(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&cx(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}function kl(t,e){return Ot(t.prev,t,t.next)<0?Ot(t,e,t.next)>=0&&Ot(t,t.prev,e)>=0:Ot(t,e,t.prev)<0||Ot(t,t.next,e)<0}function bL(t,e){let n=t,i=!1;const r=(t.x+e.x)/2,a=(t.y+e.y)/2;do n.y>a!=n.next.y>a&&n.next.y!==n.y&&r<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next;while(n!==t);return i}function hx(t,e){const n=new Ep(t.i,t.x,t.y),i=new Ep(e.i,e.x,e.y),r=t.next,a=e.prev;return t.next=e,e.prev=t,n.next=r,r.prev=n,i.next=n,n.prev=i,a.next=i,i.prev=a,i}function ux(t,e,n,i){const r=new Ep(t,e,n);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function Wl(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function Ep(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function SL(t,e,n,i){let r=0;for(let a=e,s=n-i;a<n;a+=i)r+=(t[s]-t[a])*(t[a+1]+t[s+1]),s=a;return r}class zr{static area(e){const n=e.length;let i=0;for(let r=n-1,a=0;a<n;r=a++)i+=e[r].x*e[a].y-e[a].x*e[r].y;return i*.5}static isClockWise(e){return zr.area(e)<0}static triangulateShape(e,n){const i=[],r=[],a=[];fx(e),dx(i,e);let s=e.length;n.forEach(fx);for(let l=0;l<n.length;l++)r.push(s),s+=n[l].length,dx(i,n[l]);const o=lL.triangulate(i,r);for(let l=0;l<o.length;l+=3)a.push(o.slice(l,l+3));return a}}function fx(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function dx(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}class Vs extends wt{constructor(e=new Hl([new Te(.5,.5),new Te(-.5,.5),new Te(-.5,-.5),new Te(.5,-.5)]),n={}){super();this.type="ExtrudeGeometry",this.parameters={shapes:e,options:n},e=Array.isArray(e)?e:[e];const i=this,r=[],a=[];for(let o=0,l=e.length;o<l;o++){const c=e[o];s(c)}this.setAttribute("position",new Dt(r,3)),this.setAttribute("uv",new Dt(a,2)),this.computeVertexNormals();function s(o){const l=[],c=n.curveSegments!==void 0?n.curveSegments:12,h=n.steps!==void 0?n.steps:1;let u=n.depth!==void 0?n.depth:1,f=n.bevelEnabled!==void 0?n.bevelEnabled:!0,d=n.bevelThickness!==void 0?n.bevelThickness:.2,p=n.bevelSize!==void 0?n.bevelSize:d-.1,m=n.bevelOffset!==void 0?n.bevelOffset:0,x=n.bevelSegments!==void 0?n.bevelSegments:3;const g=n.extrudePath,v=n.UVGenerator!==void 0?n.UVGenerator:EL;n.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),u=n.amount);let b,_=!1,M,y,w,E;g&&(b=g.getSpacedPoints(h),_=!0,f=!1,M=g.computeFrenetFrames(h,!1),y=new k,w=new k,E=new k),f||(x=0,d=0,p=0,m=0);const A=o.extractPoints(c);let L=A.shape;const S=A.holes;if(!zr.isClockWise(L)){L=L.reverse();for(let ee=0,ve=S.length;ee<ve;ee++){const pe=S[ee];zr.isClockWise(pe)&&(S[ee]=pe.reverse())}}const D=zr.triangulateShape(L,S),I=L;for(let ee=0,ve=S.length;ee<ve;ee++){const pe=S[ee];L=L.concat(pe)}function F(ee,ve,pe){return ve||console.error("THREE.ExtrudeGeometry: vec does not exist"),ve.clone().multiplyScalar(pe).add(ee)}const U=L.length,j=D.length;function Y(ee,ve,pe){let De,Ce,O;const G=ee.x-ve.x,ye=ee.y-ve.y,de=pe.x-ee.x,He=pe.y-ee.y,N=G*G+ye*ye,P=G*He-ye*de;if(Math.abs(P)>Number.EPSILON){const te=Math.sqrt(N),fe=Math.sqrt(de*de+He*He),me=ve.x-ye/te,J=ve.y+G/te,xe=pe.x-He/fe,V=pe.y+de/fe,B=((xe-me)*He-(V-J)*de)/(G*He-ye*de);De=me+G*B-ee.x,Ce=J+ye*B-ee.y;const Q=De*De+Ce*Ce;if(Q<=2)return new Te(De,Ce);O=Math.sqrt(Q/2)}else{let te=!1;G>Number.EPSILON?de>Number.EPSILON&&(te=!0):G<-Number.EPSILON?de<-Number.EPSILON&&(te=!0):Math.sign(ye)===Math.sign(He)&&(te=!0),te?(De=-ye,Ce=G,O=Math.sqrt(N)):(De=G,Ce=ye,O=Math.sqrt(N/2))}return new Te(De/O,Ce/O)}const K=[];for(let ee=0,ve=I.length,pe=ve-1,De=ee+1;ee<ve;ee++,pe++,De++)pe===ve&&(pe=0),De===ve&&(De=0),K[ee]=Y(I[ee],I[pe],I[De]);const X=[];let q,he=K.concat();for(let ee=0,ve=S.length;ee<ve;ee++){const pe=S[ee];q=[];for(let De=0,Ce=pe.length,O=Ce-1,G=De+1;De<Ce;De++,O++,G++)O===Ce&&(O=0),G===Ce&&(G=0),q[De]=Y(pe[De],pe[O],pe[G]);X.push(q),he=he.concat(q)}for(let ee=0;ee<x;ee++){const ve=ee/x,pe=d*Math.cos(ve*Math.PI/2),De=p*Math.sin(ve*Math.PI/2)+m;for(let Ce=0,O=I.length;Ce<O;Ce++){const G=F(I[Ce],K[Ce],De);Le(G.x,G.y,-pe)}for(let Ce=0,O=S.length;Ce<O;Ce++){const G=S[Ce];q=X[Ce];for(let ye=0,de=G.length;ye<de;ye++){const He=F(G[ye],q[ye],De);Le(He.x,He.y,-pe)}}}const Se=p+m;for(let ee=0;ee<U;ee++){const ve=f?F(L[ee],he[ee],Se):L[ee];_?(w.copy(M.normals[0]).multiplyScalar(ve.x),y.copy(M.binormals[0]).multiplyScalar(ve.y),E.copy(b[0]).add(w).add(y),Le(E.x,E.y,E.z)):Le(ve.x,ve.y,0)}for(let ee=1;ee<=h;ee++)for(let ve=0;ve<U;ve++){const pe=f?F(L[ve],he[ve],Se):L[ve];_?(w.copy(M.normals[ee]).multiplyScalar(pe.x),y.copy(M.binormals[ee]).multiplyScalar(pe.y),E.copy(b[ee]).add(w).add(y),Le(E.x,E.y,E.z)):Le(pe.x,pe.y,u/h*ee)}for(let ee=x-1;ee>=0;ee--){const ve=ee/x,pe=d*Math.cos(ve*Math.PI/2),De=p*Math.sin(ve*Math.PI/2)+m;for(let Ce=0,O=I.length;Ce<O;Ce++){const G=F(I[Ce],K[Ce],De);Le(G.x,G.y,u+pe)}for(let Ce=0,O=S.length;Ce<O;Ce++){const G=S[Ce];q=X[Ce];for(let ye=0,de=G.length;ye<de;ye++){const He=F(G[ye],q[ye],De);_?Le(He.x,He.y+b[h-1].y,b[h-1].x+pe):Le(He.x,He.y,u+pe)}}}_e(),Z();function _e(){const ee=r.length/3;if(f){let ve=0,pe=U*ve;for(let De=0;De<j;De++){const Ce=D[De];Ee(Ce[2]+pe,Ce[1]+pe,Ce[0]+pe)}ve=h+x*2,pe=U*ve;for(let De=0;De<j;De++){const Ce=D[De];Ee(Ce[0]+pe,Ce[1]+pe,Ce[2]+pe)}}else{for(let ve=0;ve<j;ve++){const pe=D[ve];Ee(pe[2],pe[1],pe[0])}for(let ve=0;ve<j;ve++){const pe=D[ve];Ee(pe[0]+U*h,pe[1]+U*h,pe[2]+U*h)}}i.addGroup(ee,r.length/3-ee,0)}function Z(){const ee=r.length/3;let ve=0;ie(I,ve),ve+=I.length;for(let pe=0,De=S.length;pe<De;pe++){const Ce=S[pe];ie(Ce,ve),ve+=Ce.length}i.addGroup(ee,r.length/3-ee,1)}function ie(ee,ve){let pe=ee.length;for(;--pe>=0;){const De=pe;let Ce=pe-1;Ce<0&&(Ce=ee.length-1);for(let O=0,G=h+x*2;O<G;O++){const ye=U*O,de=U*(O+1),He=ve+De+ye,N=ve+Ce+ye,P=ve+Ce+de,te=ve+De+de;we(He,N,P,te)}}}function Le(ee,ve,pe){l.push(ee),l.push(ve),l.push(pe)}function Ee(ee,ve,pe){Ae(ee),Ae(ve),Ae(pe);const De=r.length/3,Ce=v.generateTopUV(i,r,De-3,De-2,De-1);ae(Ce[0]),ae(Ce[1]),ae(Ce[2])}function we(ee,ve,pe,De){Ae(ee),Ae(ve),Ae(De),Ae(ve),Ae(pe),Ae(De);const Ce=r.length/3,O=v.generateSideWallUV(i,r,Ce-6,Ce-3,Ce-2,Ce-1);ae(O[0]),ae(O[1]),ae(O[3]),ae(O[1]),ae(O[2]),ae(O[3])}function Ae(ee){r.push(l[ee*3+0]),r.push(l[ee*3+1]),r.push(l[ee*3+2])}function ae(ee){a.push(ee.x),a.push(ee.y)}}}toJSON(){const e=super.toJSON(),n=this.parameters.shapes,i=this.parameters.options;return TL(n,i,e)}static fromJSON(e,n){const i=[];for(let a=0,s=e.shapes.length;a<s;a++){const o=n[e.shapes[a]];i.push(o)}const r=e.options.extrudePath;return r!==void 0&&(e.options.extrudePath=new ox[r.type]().fromJSON(r)),new Vs(i,e.options)}}const EL={generateTopUV:function(t,e,n,i,r){const a=e[n*3],s=e[n*3+1],o=e[i*3],l=e[i*3+1],c=e[r*3],h=e[r*3+1];return[new Te(a,s),new Te(o,l),new Te(c,h)]},generateSideWallUV:function(t,e,n,i,r,a){const s=e[n*3],o=e[n*3+1],l=e[n*3+2],c=e[i*3],h=e[i*3+1],u=e[i*3+2],f=e[r*3],d=e[r*3+1],p=e[r*3+2],m=e[a*3],x=e[a*3+1],g=e[a*3+2];return Math.abs(o-h)<Math.abs(s-c)?[new Te(s,1-l),new Te(c,1-u),new Te(f,1-p),new Te(m,1-g)]:[new Te(o,1-l),new Te(h,1-u),new Te(d,1-p),new Te(x,1-g)]}};function TL(t,e,n){if(n.shapes=[],Array.isArray(t))for(let i=0,r=t.length;i<r;i++){const a=t[i];n.shapes.push(a.uuid)}else n.shapes.push(t.uuid);return e.extrudePath!==void 0&&(n.options.extrudePath=e.extrudePath.toJSON()),n}class Tp extends wt{constructor(e=new Hl([new Te(0,.5),new Te(-.5,-.5),new Te(.5,-.5)]),n=12){super();this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:n};const i=[],r=[],a=[],s=[];let o=0,l=0;if(Array.isArray(e)===!1)c(e);else for(let h=0;h<e.length;h++)c(e[h]),this.addGroup(o,l,h),o+=l,l=0;this.setIndex(i),this.setAttribute("position",new Dt(r,3)),this.setAttribute("normal",new Dt(a,3)),this.setAttribute("uv",new Dt(s,2));function c(h){const u=r.length/3,f=h.extractPoints(n);let d=f.shape;const p=f.holes;zr.isClockWise(d)===!1&&(d=d.reverse());for(let x=0,g=p.length;x<g;x++){const v=p[x];zr.isClockWise(v)===!0&&(p[x]=v.reverse())}const m=zr.triangulateShape(d,p);for(let x=0,g=p.length;x<g;x++){const v=p[x];d=d.concat(v)}for(let x=0,g=d.length;x<g;x++){const v=d[x];r.push(v.x,v.y,0),a.push(0,0,1),s.push(v.x,v.y)}for(let x=0,g=m.length;x<g;x++){const v=m[x],b=v[0]+u,_=v[1]+u,M=v[2]+u;i.push(b,_,M),l+=3}}}toJSON(){const e=super.toJSON(),n=this.parameters.shapes;return AL(n,e)}static fromJSON(e,n){const i=[];for(let r=0,a=e.shapes.length;r<a;r++){const s=n[e.shapes[r]];i.push(s)}return new Tp(i,e.curveSegments)}}function AL(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,i=t.length;n<i;n++){const r=t[n];e.shapes.push(r.uuid)}else e.shapes.push(t.uuid);return e}class LL extends mn{constructor(e){super();this.type="ShadowMaterial",this.color=new We(0),this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this}}LL.prototype.isShadowMaterial=!0;class px extends mn{constructor(e){super();this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new We(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new We(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ps,this.normalScale=new Te(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}px.prototype.isMeshStandardMaterial=!0;class CL extends px{constructor(e){super();this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Te(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return En(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(n){this.ior=(1+.4*n)/(1-.4*n)}}),this.sheenColor=new We(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new We(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new We(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}CL.prototype.isMeshPhysicalMaterial=!0;class gu extends mn{constructor(e){super();this.type="MeshPhongMaterial",this.color=new We(16777215),this.specular=new We(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new We(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ps,this.normalScale=new Te(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=_h,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}gu.prototype.isMeshPhongMaterial=!0;class RL extends mn{constructor(e){super();this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new We(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new We(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ps,this.normalScale=new Te(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}RL.prototype.isMeshToonMaterial=!0;class PL extends mn{constructor(e){super();this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ps,this.normalScale=new Te(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}PL.prototype.isMeshNormalMaterial=!0;class mx extends mn{constructor(e){super();this.type="MeshLambertMaterial",this.color=new We(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new We(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=_h,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}mx.prototype.isMeshLambertMaterial=!0;class DL extends mn{constructor(e){super();this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new We(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ps,this.normalScale=new Te(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this}}DL.prototype.isMeshMatcapMaterial=!0;class IL extends Gs{constructor(e){super();this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}IL.prototype.isLineDashedMaterial=!0;const It={arraySlice:function(t,e,n){return It.isTypedArray(t)?new t.constructor(t.subarray(e,n!==void 0?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:typeof e.BYTES_PER_ELEMENT=="number"?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){function e(r,a){return t[r]-t[a]}const n=t.length,i=new Array(n);for(let r=0;r!==n;++r)i[r]=r;return i.sort(e),i},sortedArray:function(t,e,n){const i=t.length,r=new t.constructor(i);for(let a=0,s=0;s!==i;++a){const o=n[a]*e;for(let l=0;l!==e;++l)r[s++]=t[o+l]}return r},flattenJSON:function(t,e,n,i){let r=1,a=t[0];for(;a!==void 0&&a[i]===void 0;)a=t[r++];if(a===void 0)return;let s=a[i];if(s!==void 0)if(Array.isArray(s))do s=a[i],s!==void 0&&(e.push(a.time),n.push.apply(n,s)),a=t[r++];while(a!==void 0);else if(s.toArray!==void 0)do s=a[i],s!==void 0&&(e.push(a.time),s.toArray(n,n.length)),a=t[r++];while(a!==void 0);else do s=a[i],s!==void 0&&(e.push(a.time),n.push(s)),a=t[r++];while(a!==void 0)},subclip:function(t,e,n,i,r=30){const a=t.clone();a.name=e;const s=[];for(let l=0;l<a.tracks.length;++l){const c=a.tracks[l],h=c.getValueSize(),u=[],f=[];for(let d=0;d<c.times.length;++d){const p=c.times[d]*r;if(!(p<n||p>=i)){u.push(c.times[d]);for(let m=0;m<h;++m)f.push(c.values[d*h+m])}}u.length!==0&&(c.times=It.convertArray(u,c.times.constructor),c.values=It.convertArray(f,c.values.constructor),s.push(c))}a.tracks=s;let o=1/0;for(let l=0;l<a.tracks.length;++l)o>a.tracks[l].times[0]&&(o=a.tracks[l].times[0]);for(let l=0;l<a.tracks.length;++l)a.tracks[l].shift(-1*o);return a.resetDuration(),a},makeClipAdditive:function(t,e=0,n=t,i=30){i<=0&&(i=30);const r=n.tracks.length,a=e/i;for(let s=0;s<r;++s){const o=n.tracks[s],l=o.ValueTypeName;if(l==="bool"||l==="string")continue;const c=t.tracks.find(function(g){return g.name===o.name&&g.ValueTypeName===l});if(c===void 0)continue;let h=0;const u=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(h=u/3);let f=0;const d=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=d/3);const p=o.times.length-1;let m;if(a<=o.times[0]){const g=h,v=u-h;m=It.arraySlice(o.values,g,v)}else if(a>=o.times[p]){const g=p*u+h,v=g+u-h;m=It.arraySlice(o.values,g,v)}else{const g=o.createInterpolant(),v=h,b=u-h;g.evaluate(a),m=It.arraySlice(g.resultBuffer,v,b)}l==="quaternion"&&new qt().fromArray(m).normalize().conjugate().toArray(m);const x=c.times.length;for(let g=0;g<x;++g){const v=g*d+f;if(l==="quaternion")qt.multiplyQuaternionsFlat(c.values,v,m,0,c.values,v);else{const b=d-f*2;for(let _=0;_<b;++_)c.values[v+_]-=m[_]}}}return t.blendMode=Pv,t}};class Ur{constructor(e,n,i,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=r!==void 0?r:new n.constructor(i),this.sampleValues=n,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(e){const n=this.parameterPositions;let i=this._cachedIndex,r=n[i],a=n[i-1];e:{t:{let s;n:{i:if(!(e<r)){for(let o=i+2;;){if(r===void 0){if(e<a)break i;return i=n.length,this._cachedIndex=i,this.afterEnd_(i-1,e,a)}if(i===o)break;if(a=r,r=n[++i],e<r)break t}s=n.length;break n}if(!(e>=a)){const o=n[1];e<o&&(i=2,a=o);for(let l=i-2;;){if(a===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(i===l)break;if(r=a,a=n[--i-1],e>=a)break t}s=i,i=0;break n}break e}for(;i<s;){const o=i+s>>>1;e<n[o]?s=o:i=o+1}if(r=n[i],a=n[i-1],a===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(r===void 0)return i=n.length,this._cachedIndex=i,this.afterEnd_(i-1,a,e)}this._cachedIndex=i,this.intervalChanged_(i,a,r)}return this.interpolate_(i,a,e,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const n=this.resultBuffer,i=this.sampleValues,r=this.valueSize,a=e*r;for(let s=0;s!==r;++s)n[s]=i[a+s];return n}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}Ur.prototype.beforeStart_=Ur.prototype.copySampleValue_;Ur.prototype.afterEnd_=Ur.prototype.copySampleValue_;class FL extends Ur{constructor(e,n,i,r){super(e,n,i,r);this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:fs,endingEnd:fs}}intervalChanged_(e,n,i){const r=this.parameterPositions;let a=e-2,s=e+1,o=r[a],l=r[s];if(o===void 0)switch(this.getSettings_().endingStart){case ds:a=e,o=2*n-i;break;case Ah:a=r.length-2,o=n+r[a]-r[a+1];break;default:a=e,o=i}if(l===void 0)switch(this.getSettings_().endingEnd){case ds:s=e,l=2*i-n;break;case Ah:s=1,l=i+r[1]-r[0];break;default:s=e-1,l=n}const c=(i-n)*.5,h=this.valueSize;this._weightPrev=c/(n-o),this._weightNext=c/(l-i),this._offsetPrev=a*h,this._offsetNext=s*h}interpolate_(e,n,i,r){const a=this.resultBuffer,s=this.sampleValues,o=this.valueSize,l=e*o,c=l-o,h=this._offsetPrev,u=this._offsetNext,f=this._weightPrev,d=this._weightNext,p=(i-n)/(r-n),m=p*p,x=m*p,g=-f*x+2*f*m-f*p,v=(1+f)*x+(-1.5-2*f)*m+(-.5+f)*p+1,b=(-1-d)*x+(1.5+d)*m+.5*p,_=d*x-d*m;for(let M=0;M!==o;++M)a[M]=g*s[h+M]+v*s[c+M]+b*s[l+M]+_*s[u+M];return a}}class gx extends Ur{constructor(e,n,i,r){super(e,n,i,r)}interpolate_(e,n,i,r){const a=this.resultBuffer,s=this.sampleValues,o=this.valueSize,l=e*o,c=l-o,h=(i-n)/(r-n),u=1-h;for(let f=0;f!==o;++f)a[f]=s[c+f]*u+s[l+f]*h;return a}}class BL extends Ur{constructor(e,n,i,r){super(e,n,i,r)}interpolate_(e){return this.copySampleValue_(e-1)}}class Ri{constructor(e,n,i,r){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(n===void 0||n.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=It.convertArray(n,this.TimeBufferType),this.values=It.convertArray(i,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(e){const n=e.constructor;let i;if(n.toJSON!==this.toJSON)i=n.toJSON(e);else{i={name:e.name,times:It.convertArray(e.times,Array),values:It.convertArray(e.values,Array)};const r=e.getInterpolation();r!==e.DefaultInterpolation&&(i.interpolation=r)}return i.type=e.ValueTypeName,i}InterpolantFactoryMethodDiscrete(e){return new BL(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new gx(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new FL(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let n;switch(e){case Eh:n=this.InterpolantFactoryMethodDiscrete;break;case Th:n=this.InterpolantFactoryMethodLinear;break;case wd:n=this.InterpolantFactoryMethodSmooth;break}if(n===void 0){const i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(i);return console.warn("THREE.KeyframeTrack:",i),this}return this.createInterpolant=n,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Eh;case this.InterpolantFactoryMethodLinear:return Th;case this.InterpolantFactoryMethodSmooth:return wd}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const n=this.times;for(let i=0,r=n.length;i!==r;++i)n[i]+=e}return this}scale(e){if(e!==1){const n=this.times;for(let i=0,r=n.length;i!==r;++i)n[i]*=e}return this}trim(e,n){const i=this.times,r=i.length;let a=0,s=r-1;for(;a!==r&&i[a]<e;)++a;for(;s!==-1&&i[s]>n;)--s;if(++s,a!==0||s!==r){a>=s&&(s=Math.max(s,1),a=s-1);const o=this.getValueSize();this.times=It.arraySlice(i,a,s),this.values=It.arraySlice(this.values,a*o,s*o)}return this}validate(){let e=!0;const n=this.getValueSize();n-Math.floor(n)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const i=this.times,r=this.values,a=i.length;a===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let s=null;for(let o=0;o!==a;o++){const l=i[o];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,l),e=!1;break}if(s!==null&&s>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,l,s),e=!1;break}s=l}if(r!==void 0&&It.isTypedArray(r))for(let o=0,l=r.length;o!==l;++o){const c=r[o];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,c),e=!1;break}}return e}optimize(){const e=It.arraySlice(this.times),n=It.arraySlice(this.values),i=this.getValueSize(),r=this.getInterpolation()===wd,a=e.length-1;let s=1;for(let o=1;o<a;++o){let l=!1;const c=e[o],h=e[o+1];if(c!==h&&(o!==1||c!==e[0]))if(r)l=!0;else{const u=o*i,f=u-i,d=u+i;for(let p=0;p!==i;++p){const m=n[u+p];if(m!==n[f+p]||m!==n[d+p]){l=!0;break}}}if(l){if(o!==s){e[s]=e[o];const u=o*i,f=s*i;for(let d=0;d!==i;++d)n[f+d]=n[u+d]}++s}}if(a>0){e[s]=e[a];for(let o=a*i,l=s*i,c=0;c!==i;++c)n[l+c]=n[o+c];++s}return s!==e.length?(this.times=It.arraySlice(e,0,s),this.values=It.arraySlice(n,0,s*i)):(this.times=e,this.values=n),this}clone(){const e=It.arraySlice(this.times,0),n=It.arraySlice(this.values,0),i=this.constructor,r=new i(this.name,e,n);return r.createInterpolant=this.createInterpolant,r}}Ri.prototype.TimeBufferType=Float32Array;Ri.prototype.ValueBufferType=Float32Array;Ri.prototype.DefaultInterpolation=Th;class ks extends Ri{}ks.prototype.ValueTypeName="bool";ks.prototype.ValueBufferType=Array;ks.prototype.DefaultInterpolation=Eh;ks.prototype.InterpolantFactoryMethodLinear=void 0;ks.prototype.InterpolantFactoryMethodSmooth=void 0;class vx extends Ri{}vx.prototype.ValueTypeName="color";class $l extends Ri{}$l.prototype.ValueTypeName="number";class OL extends Ur{constructor(e,n,i,r){super(e,n,i,r)}interpolate_(e,n,i,r){const a=this.resultBuffer,s=this.sampleValues,o=this.valueSize,l=(i-n)/(r-n);let c=e*o;for(let h=c+o;c!==h;c+=4)qt.slerpFlat(a,0,s,c-o,s,c,l);return a}}class Ws extends Ri{InterpolantFactoryMethodLinear(e){return new OL(this.times,this.values,this.getValueSize(),e)}}Ws.prototype.ValueTypeName="quaternion";Ws.prototype.DefaultInterpolation=Th;Ws.prototype.InterpolantFactoryMethodSmooth=void 0;class $s extends Ri{}$s.prototype.ValueTypeName="string";$s.prototype.ValueBufferType=Array;$s.prototype.DefaultInterpolation=Eh;$s.prototype.InterpolantFactoryMethodLinear=void 0;$s.prototype.InterpolantFactoryMethodSmooth=void 0;class jl extends Ri{}jl.prototype.ValueTypeName="vector";class Ap{constructor(e,n=-1,i,r=bd){this.name=e,this.tracks=i,this.duration=n,this.blendMode=r,this.uuid=Zn(),this.duration<0&&this.resetDuration()}static parse(e){const n=[],i=e.tracks,r=1/(e.fps||1);for(let s=0,o=i.length;s!==o;++s)n.push(zL(i[s]).scale(r));const a=new this(e.name,e.duration,n,e.blendMode);return a.uuid=e.uuid,a}static toJSON(e){const n=[],i=e.tracks,r={name:e.name,duration:e.duration,tracks:n,uuid:e.uuid,blendMode:e.blendMode};for(let a=0,s=i.length;a!==s;++a)n.push(Ri.toJSON(i[a]));return r}static CreateFromMorphTargetSequence(e,n,i,r){const a=n.length,s=[];for(let o=0;o<a;o++){let l=[],c=[];l.push((o+a-1)%a,o,(o+1)%a),c.push(0,1,0);const h=It.getKeyframeOrder(l);l=It.sortedArray(l,1,h),c=It.sortedArray(c,1,h),!r&&l[0]===0&&(l.push(a),c.push(c[0])),s.push(new $l(".morphTargetInfluences["+n[o].name+"]",l,c).scale(1/i))}return new this(e,-1,s)}static findByName(e,n){let i=e;if(!Array.isArray(e)){const r=e;i=r.geometry&&r.geometry.animations||r.animations}for(let r=0;r<i.length;r++)if(i[r].name===n)return i[r];return null}static CreateClipsFromMorphTargetSequences(e,n,i){const r={},a=/^([\w-]*?)([\d]+)$/;for(let o=0,l=e.length;o<l;o++){const c=e[o],h=c.name.match(a);if(h&&h.length>1){const u=h[1];let f=r[u];f||(r[u]=f=[]),f.push(c)}}const s=[];for(const o in r)s.push(this.CreateFromMorphTargetSequence(o,r[o],n,i));return s}static parseAnimation(e,n){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const i=function(u,f,d,p,m){if(d.length!==0){const x=[],g=[];It.flattenJSON(d,x,g,p),x.length!==0&&m.push(new u(f,x,g))}},r=[],a=e.name||"default",s=e.fps||30,o=e.blendMode;let l=e.length||-1;const c=e.hierarchy||[];for(let u=0;u<c.length;u++){const f=c[u].keys;if(!(!f||f.length===0))if(f[0].morphTargets){const d={};let p;for(p=0;p<f.length;p++)if(f[p].morphTargets)for(let m=0;m<f[p].morphTargets.length;m++)d[f[p].morphTargets[m]]=-1;for(const m in d){const x=[],g=[];for(let v=0;v!==f[p].morphTargets.length;++v){const b=f[p];x.push(b.time),g.push(b.morphTarget===m?1:0)}r.push(new $l(".morphTargetInfluence["+m+"]",x,g))}l=d.length*(s||1)}else{const d=".bones["+n[u].name+"]";i(jl,d+".position",f,"pos",r),i(Ws,d+".quaternion",f,"rot",r),i(jl,d+".scale",f,"scl",r)}}return r.length===0?null:new this(a,l,r,o)}resetDuration(){const e=this.tracks;let n=0;for(let i=0,r=e.length;i!==r;++i){const a=this.tracks[i];n=Math.max(n,a.times[a.times.length-1])}return this.duration=n,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let n=0;n<this.tracks.length;n++)e=e&&this.tracks[n].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let n=0;n<this.tracks.length;n++)e.push(this.tracks[n].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function NL(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return $l;case"vector":case"vector2":case"vector3":case"vector4":return jl;case"color":return vx;case"quaternion":return Ws;case"bool":case"boolean":return ks;case"string":return $s}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}function zL(t){if(t.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=NL(t.type);if(t.times===void 0){const n=[],i=[];It.flattenJSON(t.keys,n,i,"value"),t.times=n,t.values=i}return e.parse!==void 0?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}const js={enabled:!1,files:{},add:function(t,e){this.enabled!==!1&&(this.files[t]=e)},get:function(t){if(this.enabled!==!1)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};class UL{constructor(e,n,i){const r=this;let a=!1,s=0,o=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=n,this.onError=i,this.itemStart=function(h){o++,a===!1&&r.onStart!==void 0&&r.onStart(h,s,o),a=!0},this.itemEnd=function(h){s++,r.onProgress!==void 0&&r.onProgress(h,s,o),s===o&&(a=!1,r.onLoad!==void 0&&r.onLoad())},this.itemError=function(h){r.onError!==void 0&&r.onError(h)},this.resolveURL=function(h){return l?l(h):h},this.setURLModifier=function(h){return l=h,this},this.addHandler=function(h,u){return c.push(h,u),this},this.removeHandler=function(h){const u=c.indexOf(h);return u!==-1&&c.splice(u,2),this},this.getHandler=function(h){for(let u=0,f=c.length;u<f;u+=2){const d=c[u],p=c[u+1];if(d.global&&(d.lastIndex=0),d.test(h))return p}return null}}}const GL=new UL;class Qi{constructor(e){this.manager=e!==void 0?e:GL,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,n){const i=this;return new Promise(function(r,a){i.load(e,r,n,a)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const er={};class yx extends Qi{constructor(e){super(e)}load(e,n,i,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const a=js.get(e);if(a!==void 0)return this.manager.itemStart(e),setTimeout(()=>{n&&n(a),this.manager.itemEnd(e)},0),a;if(er[e]!==void 0){er[e].push({onLoad:n,onProgress:i,onError:r});return}er[e]=[],er[e].push({onLoad:n,onProgress:i,onError:r});const s=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),o=this.mimeType,l=this.responseType;fetch(s).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream=="undefined"||c.body.getReader===void 0)return c;const h=er[e],u=c.body.getReader(),f=c.headers.get("Content-Length"),d=f?parseInt(f):0,p=d!==0;let m=0;const x=new ReadableStream({start(g){v();function v(){u.read().then(({done:b,value:_})=>{if(b)g.close();else{m+=_.byteLength;const M=new ProgressEvent("progress",{lengthComputable:p,loaded:m,total:d});for(let y=0,w=h.length;y<w;y++){const E=h[y];E.onProgress&&E.onProgress(M)}g.enqueue(_),v()}})}}});return new Response(x)}else throw Error(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(h=>new DOMParser().parseFromString(h,o));case"json":return c.json();default:if(o===void 0)return c.text();{const u=/charset="?([^;"\s]*)"?/i.exec(o),f=u&&u[1]?u[1].toLowerCase():void 0,d=new TextDecoder(f);return c.arrayBuffer().then(p=>d.decode(p))}}}).then(c=>{js.add(e,c);const h=er[e];delete er[e];for(let u=0,f=h.length;u<f;u++){const d=h[u];d.onLoad&&d.onLoad(c)}}).catch(c=>{const h=er[e];if(h===void 0)throw this.manager.itemError(e),c;delete er[e];for(let u=0,f=h.length;u<f;u++){const d=h[u];d.onError&&d.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class xx extends Qi{constructor(e){super(e)}load(e,n,i,r){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const a=this,s=js.get(e);if(s!==void 0)return a.manager.itemStart(e),setTimeout(function(){n&&n(s),a.manager.itemEnd(e)},0),s;const o=Tl("img");function l(){h(),js.add(e,this),n&&n(this),a.manager.itemEnd(e)}function c(u){h(),r&&r(u),a.manager.itemError(e),a.manager.itemEnd(e)}function h(){o.removeEventListener("load",l,!1),o.removeEventListener("error",c,!1)}return o.addEventListener("load",l,!1),o.addEventListener("error",c,!1),e.substr(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),a.manager.itemStart(e),o.src=e,o}}class HL extends Qi{constructor(e){super(e)}load(e,n,i,r){const a=new Xh,s=new xx(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let o=0;function l(c){s.load(e[c],function(h){a.images[c]=h,o++,o===6&&(a.needsUpdate=!0,n&&n(a))},void 0,r)}for(let c=0;c<e.length;++c)l(c);return a}}class _x extends Qi{constructor(e){super(e)}load(e,n,i,r){const a=new Xt,s=new xx(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(e,function(o){a.image=o,a.needsUpdate=!0,n!==void 0&&n(a)},i,r),a}}class Pi extends gt{constructor(e,n=1){super();this.type="Light",this.color=new We(e),this.intensity=n}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const n=super.toJSON(e);return n.object.color=this.color.getHex(),n.object.intensity=this.intensity,this.groundColor!==void 0&&(n.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(n.object.distance=this.distance),this.angle!==void 0&&(n.object.angle=this.angle),this.decay!==void 0&&(n.object.decay=this.decay),this.penumbra!==void 0&&(n.object.penumbra=this.penumbra),this.shadow!==void 0&&(n.object.shadow=this.shadow.toJSON()),n}}Pi.prototype.isLight=!0;class VL extends Pi{constructor(e,n,i){super(e,i);this.type="HemisphereLight",this.position.copy(gt.DefaultUp),this.updateMatrix(),this.groundColor=new We(n)}copy(e){return Pi.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}VL.prototype.isHemisphereLight=!0;const Mx=new Fe,wx=new k,bx=new k;class Lp{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Te(512,512),this.map=null,this.mapPass=null,this.matrix=new Fe,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Yh,this._frameExtents=new Te(1,1),this._viewportCount=1,this._viewports=[new yt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const n=this.camera,i=this.matrix;wx.setFromMatrixPosition(e.matrixWorld),n.position.copy(wx),bx.setFromMatrixPosition(e.target.matrixWorld),n.lookAt(bx),n.updateMatrixWorld(),Mx.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Mx),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(n.projectionMatrix),i.multiply(n.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class Sx extends Lp{constructor(){super(new An(50,1,.5,500));this.focus=1}updateMatrices(e){const n=this.camera,i=Sl*2*e.angle*this.focus,r=this.mapSize.width/this.mapSize.height,a=e.distance||n.far;(i!==n.fov||r!==n.aspect||a!==n.far)&&(n.fov=i,n.aspect=r,n.far=a,n.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}Sx.prototype.isSpotLightShadow=!0;class Ex extends Pi{constructor(e,n,i=0,r=Math.PI/3,a=0,s=1){super(e,n);this.type="SpotLight",this.position.copy(gt.DefaultUp),this.updateMatrix(),this.target=new gt,this.distance=i,this.angle=r,this.penumbra=a,this.decay=s,this.shadow=new Sx}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}Ex.prototype.isSpotLight=!0;const Tx=new Fe,Xl=new k,Cp=new k;class Ax extends Lp{constructor(){super(new An(90,1,.5,500));this._frameExtents=new Te(4,2),this._viewportCount=6,this._viewports=[new yt(2,1,1,1),new yt(0,1,1,1),new yt(3,1,1,1),new yt(1,1,1,1),new yt(3,0,1,1),new yt(1,0,1,1)],this._cubeDirections=[new k(1,0,0),new k(-1,0,0),new k(0,0,1),new k(0,0,-1),new k(0,1,0),new k(0,-1,0)],this._cubeUps=[new k(0,1,0),new k(0,1,0),new k(0,1,0),new k(0,1,0),new k(0,0,1),new k(0,0,-1)]}updateMatrices(e,n=0){const i=this.camera,r=this.matrix,a=e.distance||i.far;a!==i.far&&(i.far=a,i.updateProjectionMatrix()),Xl.setFromMatrixPosition(e.matrixWorld),i.position.copy(Xl),Cp.copy(i.position),Cp.add(this._cubeDirections[n]),i.up.copy(this._cubeUps[n]),i.lookAt(Cp),i.updateMatrixWorld(),r.makeTranslation(-Xl.x,-Xl.y,-Xl.z),Tx.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Tx)}}Ax.prototype.isPointLightShadow=!0;class Rp extends Pi{constructor(e,n,i=0,r=1){super(e,n);this.type="PointLight",this.distance=i,this.decay=r,this.shadow=new Ax}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}Rp.prototype.isPointLight=!0;class Lx extends Lp{constructor(){super(new Zh(-5,5,5,-5,.5,500))}}Lx.prototype.isDirectionalLightShadow=!0;class Cx extends Pi{constructor(e,n){super(e,n);this.type="DirectionalLight",this.position.copy(gt.DefaultUp),this.updateMatrix(),this.target=new gt,this.shadow=new Lx}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}Cx.prototype.isDirectionalLight=!0;class Rx extends Pi{constructor(e,n){super(e,n);this.type="AmbientLight"}}Rx.prototype.isAmbientLight=!0;class kL extends Pi{constructor(e,n,i=10,r=10){super(e,n);this.type="RectAreaLight",this.width=i,this.height=r}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const n=super.toJSON(e);return n.object.width=this.width,n.object.height=this.height,n}}kL.prototype.isRectAreaLight=!0;class Px{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new k)}set(e){for(let n=0;n<9;n++)this.coefficients[n].copy(e[n]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,n){const i=e.x,r=e.y,a=e.z,s=this.coefficients;return n.copy(s[0]).multiplyScalar(.282095),n.addScaledVector(s[1],.488603*r),n.addScaledVector(s[2],.488603*a),n.addScaledVector(s[3],.488603*i),n.addScaledVector(s[4],1.092548*(i*r)),n.addScaledVector(s[5],1.092548*(r*a)),n.addScaledVector(s[6],.315392*(3*a*a-1)),n.addScaledVector(s[7],1.092548*(i*a)),n.addScaledVector(s[8],.546274*(i*i-r*r)),n}getIrradianceAt(e,n){const i=e.x,r=e.y,a=e.z,s=this.coefficients;return n.copy(s[0]).multiplyScalar(.886227),n.addScaledVector(s[1],2*.511664*r),n.addScaledVector(s[2],2*.511664*a),n.addScaledVector(s[3],2*.511664*i),n.addScaledVector(s[4],2*.429043*i*r),n.addScaledVector(s[5],2*.429043*r*a),n.addScaledVector(s[6],.743125*a*a-.247708),n.addScaledVector(s[7],2*.429043*i*a),n.addScaledVector(s[8],.429043*(i*i-r*r)),n}add(e){for(let n=0;n<9;n++)this.coefficients[n].add(e.coefficients[n]);return this}addScaledSH(e,n){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],n);return this}scale(e){for(let n=0;n<9;n++)this.coefficients[n].multiplyScalar(e);return this}lerp(e,n){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],n);return this}equals(e){for(let n=0;n<9;n++)if(!this.coefficients[n].equals(e.coefficients[n]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,n=0){const i=this.coefficients;for(let r=0;r<9;r++)i[r].fromArray(e,n+r*3);return this}toArray(e=[],n=0){const i=this.coefficients;for(let r=0;r<9;r++)i[r].toArray(e,n+r*3);return e}static getBasisAt(e,n){const i=e.x,r=e.y,a=e.z;n[0]=.282095,n[1]=.488603*r,n[2]=.488603*a,n[3]=.488603*i,n[4]=1.092548*i*r,n[5]=1.092548*r*a,n[6]=.315392*(3*a*a-1),n[7]=1.092548*i*a,n[8]=.546274*(i*i-r*r)}}Px.prototype.isSphericalHarmonics3=!0;class Pp extends Pi{constructor(e=new Px,n=1){super(void 0,n);this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const n=super.toJSON(e);return n.object.sh=this.sh.toArray(),n}}Pp.prototype.isLightProbe=!0;class vu{static decodeText(e){if(typeof TextDecoder!="undefined")return new TextDecoder().decode(e);let n="";for(let i=0,r=e.length;i<r;i++)n+=String.fromCharCode(e[i]);try{return decodeURIComponent(escape(n))}catch{return n}}static extractUrlBase(e){const n=e.lastIndexOf("/");return n===-1?"./":e.substr(0,n+1)}static resolveURL(e,n){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(n)&&/^\//.test(e)&&(n=n.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:n+e)}}class WL extends wt{constructor(){super();this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}WL.prototype.isInstancedBufferGeometry=!0;class $L extends Qi{constructor(e){super(e);typeof createImageBitmap=="undefined"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch=="undefined"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,n,i,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const a=this,s=js.get(e);if(s!==void 0)return a.manager.itemStart(e),setTimeout(function(){n&&n(s),a.manager.itemEnd(e)},0),s;const o={};o.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",o.headers=this.requestHeader,fetch(e,o).then(function(l){return l.blob()}).then(function(l){return createImageBitmap(l,Object.assign(a.options,{colorSpaceConversion:"none"}))}).then(function(l){js.add(e,l),n&&n(l),a.manager.itemEnd(e)}).catch(function(l){r&&r(l),a.manager.itemError(e),a.manager.itemEnd(e)}),a.manager.itemStart(e)}}$L.prototype.isImageBitmapLoader=!0;let yu;const jL={getContext:function(){return yu===void 0&&(yu=new(window.AudioContext||window.webkitAudioContext)),yu},setContext:function(t){yu=t}};class XL extends Qi{constructor(e){super(e)}load(e,n,i,r){const a=this,s=new yx(this.manager);s.setResponseType("arraybuffer"),s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,function(o){try{const l=o.slice(0);jL.getContext().decodeAudioData(l,function(h){n(h)})}catch(l){r?r(l):console.error(l),a.manager.itemError(e)}},i,r)}}class qL extends Pp{constructor(e,n,i=1){super(void 0,i);const r=new We().set(e),a=new We().set(n),s=new k(r.r,r.g,r.b),o=new k(a.r,a.g,a.b),l=Math.sqrt(Math.PI),c=l*Math.sqrt(.75);this.sh.coefficients[0].copy(s).add(o).multiplyScalar(l),this.sh.coefficients[1].copy(s).sub(o).multiplyScalar(c)}}qL.prototype.isHemisphereLightProbe=!0;class YL extends Pp{constructor(e,n=1){super(void 0,n);const i=new We().set(e);this.sh.coefficients[0].set(i.r,i.g,i.b).multiplyScalar(2*Math.sqrt(Math.PI))}}YL.prototype.isAmbientLightProbe=!0;class ZL extends gt{constructor(e){super();this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const n=this.context.createBufferSource();return n.buffer=this.buffer,n.loop=this.loop,n.loopStart=this.loopStart,n.loopEnd=this.loopEnd,n.onended=this.onEnded.bind(this),n.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=n,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,n=this.filters.length;e<n;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,n=this.filters.length;e<n;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}class JL{constructor(e,n,i){this.binding=e,this.valueSize=i;let r,a,s;switch(n){case"quaternion":r=this._slerp,a=this._slerpAdditive,s=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(i*6),this._workIndex=5;break;case"string":case"bool":r=this._select,a=this._select,s=this._setAdditiveIdentityOther,this.buffer=new Array(i*5);break;default:r=this._lerp,a=this._lerpAdditive,s=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(i*5)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=a,this._setIdentity=s,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,n){const i=this.buffer,r=this.valueSize,a=e*r+r;let s=this.cumulativeWeight;if(s===0){for(let o=0;o!==r;++o)i[a+o]=i[o];s=n}else{s+=n;const o=n/s;this._mixBufferRegion(i,a,0,o,r)}this.cumulativeWeight=s}accumulateAdditive(e){const n=this.buffer,i=this.valueSize,r=i*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(n,r,0,e,i),this.cumulativeWeightAdditive+=e}apply(e){const n=this.valueSize,i=this.buffer,r=e*n+n,a=this.cumulativeWeight,s=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,a<1){const l=n*this._origIndex;this._mixBufferRegion(i,r,l,1-a,n)}s>0&&this._mixBufferRegionAdditive(i,r,this._addIndex*n,1,n);for(let l=n,c=n+n;l!==c;++l)if(i[l]!==i[l+n]){o.setValue(i,r);break}}saveOriginalState(){const e=this.binding,n=this.buffer,i=this.valueSize,r=i*this._origIndex;e.getValue(n,r);for(let a=i,s=r;a!==s;++a)n[a]=n[r+a%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,n=e+this.valueSize;for(let i=e;i<n;i++)this.buffer[i]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,n=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[n+i]=this.buffer[e+i]}_select(e,n,i,r,a){if(r>=.5)for(let s=0;s!==a;++s)e[n+s]=e[i+s]}_slerp(e,n,i,r){qt.slerpFlat(e,n,e,n,e,i,r)}_slerpAdditive(e,n,i,r,a){const s=this._workIndex*a;qt.multiplyQuaternionsFlat(e,s,e,n,e,i),qt.slerpFlat(e,n,e,n,e,s,r)}_lerp(e,n,i,r,a){const s=1-r;for(let o=0;o!==a;++o){const l=n+o;e[l]=e[l]*s+e[i+o]*r}}_lerpAdditive(e,n,i,r,a){for(let s=0;s!==a;++s){const o=n+s;e[o]=e[o]+e[i+s]*r}}}const Dp="\\[\\]\\.:\\/",KL=new RegExp("["+Dp+"]","g"),Ip="[^"+Dp+"]",QL="[^"+Dp.replace("\\.","")+"]",e3=/((?:WC+[\/:])*)/.source.replace("WC",Ip),t3=/(WCOD+)?/.source.replace("WCOD",QL),n3=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Ip),i3=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Ip),r3=new RegExp("^"+e3+t3+n3+i3+"$"),a3=["material","materials","bones"];class s3{constructor(e,n,i){const r=i||mt.parseTrackName(n);this._targetGroup=e,this._bindings=e.subscribe_(n,r)}getValue(e,n){this.bind();const i=this._targetGroup.nCachedObjects_,r=this._bindings[i];r!==void 0&&r.getValue(e,n)}setValue(e,n){const i=this._bindings;for(let r=this._targetGroup.nCachedObjects_,a=i.length;r!==a;++r)i[r].setValue(e,n)}bind(){const e=this._bindings;for(let n=this._targetGroup.nCachedObjects_,i=e.length;n!==i;++n)e[n].bind()}unbind(){const e=this._bindings;for(let n=this._targetGroup.nCachedObjects_,i=e.length;n!==i;++n)e[n].unbind()}}class mt{constructor(e,n,i){this.path=n,this.parsedPath=i||mt.parseTrackName(n),this.node=mt.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,n,i){return e&&e.isAnimationObjectGroup?new mt.Composite(e,n,i):new mt(e,n,i)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(KL,"")}static parseTrackName(e){const n=r3.exec(e);if(!n)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const i={nodeName:n[2],objectName:n[3],objectIndex:n[4],propertyName:n[5],propertyIndex:n[6]},r=i.nodeName&&i.nodeName.lastIndexOf(".");if(r!==void 0&&r!==-1){const a=i.nodeName.substring(r+1);a3.indexOf(a)!==-1&&(i.nodeName=i.nodeName.substring(0,r),i.objectName=a)}if(i.propertyName===null||i.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return i}static findNode(e,n){if(!n||n===""||n==="."||n===-1||n===e.name||n===e.uuid)return e;if(e.skeleton){const i=e.skeleton.getBoneByName(n);if(i!==void 0)return i}if(e.children){const i=function(a){for(let s=0;s<a.length;s++){const o=a[s];if(o.name===n||o.uuid===n)return o;const l=i(o.children);if(l)return l}return null},r=i(e.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,n){e[n]=this.targetObject[this.propertyName]}_getValue_array(e,n){const i=this.resolvedProperty;for(let r=0,a=i.length;r!==a;++r)e[n++]=i[r]}_getValue_arrayElement(e,n){e[n]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,n){this.resolvedProperty.toArray(e,n)}_setValue_direct(e,n){this.targetObject[this.propertyName]=e[n]}_setValue_direct_setNeedsUpdate(e,n){this.targetObject[this.propertyName]=e[n],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,n){this.targetObject[this.propertyName]=e[n],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,n){const i=this.resolvedProperty;for(let r=0,a=i.length;r!==a;++r)i[r]=e[n++]}_setValue_array_setNeedsUpdate(e,n){const i=this.resolvedProperty;for(let r=0,a=i.length;r!==a;++r)i[r]=e[n++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,n){const i=this.resolvedProperty;for(let r=0,a=i.length;r!==a;++r)i[r]=e[n++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,n){this.resolvedProperty[this.propertyIndex]=e[n]}_setValue_arrayElement_setNeedsUpdate(e,n){this.resolvedProperty[this.propertyIndex]=e[n],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,n){this.resolvedProperty[this.propertyIndex]=e[n],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,n){this.resolvedProperty.fromArray(e,n)}_setValue_fromArray_setNeedsUpdate(e,n){this.resolvedProperty.fromArray(e,n),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,n){this.resolvedProperty.fromArray(e,n),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,n){this.bind(),this.getValue(e,n)}_setValue_unbound(e,n){this.bind(),this.setValue(e,n)}bind(){let e=this.node;const n=this.parsedPath,i=n.objectName,r=n.propertyName;let a=n.propertyIndex;if(e||(e=mt.findNode(this.rootNode,n.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(i){let c=n.objectIndex;switch(i){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let h=0;h<e.length;h++)if(e[h].name===c){c=h;break}break;default:if(e[i]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[i]}if(c!==void 0){if(e[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[c]}}const s=e[r];if(s===void 0){const c=n.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+r+" but it wasn't found.",e);return}let o=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?o=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(o=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(a!==void 0){if(r==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[a]!==void 0&&(a=e.morphTargetDictionary[a])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}l=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=a}else s.fromArray!==void 0&&s.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(l=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=r;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}mt.Composite=s3;mt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};mt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};mt.prototype.GetterByBindingType=[mt.prototype._getValue_direct,mt.prototype._getValue_array,mt.prototype._getValue_arrayElement,mt.prototype._getValue_toArray];mt.prototype.SetterByBindingTypeAndVersioning=[[mt.prototype._setValue_direct,mt.prototype._setValue_direct_setNeedsUpdate,mt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[mt.prototype._setValue_array,mt.prototype._setValue_array_setNeedsUpdate,mt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[mt.prototype._setValue_arrayElement,mt.prototype._setValue_arrayElement_setNeedsUpdate,mt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[mt.prototype._setValue_fromArray,mt.prototype._setValue_fromArray_setNeedsUpdate,mt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class o3{constructor(e,n,i=null,r=n.blendMode){this._mixer=e,this._clip=n,this._localRoot=i,this.blendMode=r;const a=n.tracks,s=a.length,o=new Array(s),l={endingStart:fs,endingEnd:fs};for(let c=0;c!==s;++c){const h=a[c].createInterpolant(null);o[c]=h,h.settings=l}this._interpolantSettings=l,this._interpolants=o,this._propertyBindings=new Array(s),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Gb,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,n){return this.loop=e,this.repetitions=n,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,n,i){if(e.fadeOut(n),this.fadeIn(n),i){const r=this._clip.duration,a=e._clip.duration,s=a/r,o=r/a;e.warp(1,s,n),this.warp(o,1,n)}return this}crossFadeTo(e,n,i){return e.crossFadeFrom(this,n,i)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,n,i){const r=this._mixer,a=r.time,s=this.timeScale;let o=this._timeScaleInterpolant;o===null&&(o=r._lendControlInterpolant(),this._timeScaleInterpolant=o);const l=o.parameterPositions,c=o.sampleValues;return l[0]=a,l[1]=a+i,c[0]=e/s,c[1]=n/s,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,n,i,r){if(!this.enabled){this._updateWeight(e);return}const a=this._startTime;if(a!==null){const l=(e-a)*i;if(l<0||i===0)return;this._startTime=null,n=i*l}n*=this._updateTimeScale(e);const s=this._updateTime(n),o=this._updateWeight(e);if(o>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case Pv:for(let h=0,u=l.length;h!==u;++h)l[h].evaluate(s),c[h].accumulateAdditive(o);break;case bd:default:for(let h=0,u=l.length;h!==u;++h)l[h].evaluate(s),c[h].accumulate(r,o)}}}_updateWeight(e){let n=0;if(this.enabled){n=this.weight;const i=this._weightInterpolant;if(i!==null){const r=i.evaluate(e)[0];n*=r,e>i.parameterPositions[1]&&(this.stopFading(),r===0&&(this.enabled=!1))}}return this._effectiveWeight=n,n}_updateTimeScale(e){let n=0;if(!this.paused){n=this.timeScale;const i=this._timeScaleInterpolant;i!==null&&(n*=i.evaluate(e)[0],e>i.parameterPositions[1]&&(this.stopWarping(),n===0?this.paused=!0:this.timeScale=n))}return this._effectiveTimeScale=n,n}_updateTime(e){const n=this._clip.duration,i=this.loop;let r=this.time+e,a=this._loopCount;const s=i===Hb;if(e===0)return a===-1?r:s&&(a&1)==1?n-r:r;if(i===Ub){a===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(r>=n)r=n;else if(r<0)r=0;else{this.time=r;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(a===-1&&(e>=0?(a=0,this._setEndings(!0,this.repetitions===0,s)):this._setEndings(this.repetitions===0,!0,s)),r>=n||r<0){const o=Math.floor(r/n);r-=n*o,a+=Math.abs(o);const l=this.repetitions-a;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=e>0?n:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const c=e<0;this._setEndings(c,!c,s)}else this._setEndings(!1,!1,s);this._loopCount=a,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}else this.time=r;if(s&&(a&1)==1)return n-r}return r}_setEndings(e,n,i){const r=this._interpolantSettings;i?(r.endingStart=ds,r.endingEnd=ds):(e?r.endingStart=this.zeroSlopeAtStart?ds:fs:r.endingStart=Ah,n?r.endingEnd=this.zeroSlopeAtEnd?ds:fs:r.endingEnd=Ah)}_scheduleFading(e,n,i){const r=this._mixer,a=r.time;let s=this._weightInterpolant;s===null&&(s=r._lendControlInterpolant(),this._weightInterpolant=s);const o=s.parameterPositions,l=s.sampleValues;return o[0]=a,l[0]=n,o[1]=a+e,l[1]=i,this}}class l3 extends Ar{constructor(e){super();this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,n){const i=e._localRoot||this._root,r=e._clip.tracks,a=r.length,s=e._propertyBindings,o=e._interpolants,l=i.uuid,c=this._bindingsByRootAndName;let h=c[l];h===void 0&&(h={},c[l]=h);for(let u=0;u!==a;++u){const f=r[u],d=f.name;let p=h[d];if(p!==void 0)++p.referenceCount,s[u]=p;else{if(p=s[u],p!==void 0){p._cacheIndex===null&&(++p.referenceCount,this._addInactiveBinding(p,l,d));continue}const m=n&&n._propertyBindings[u].binding.parsedPath;p=new JL(mt.create(i,d,m),f.ValueTypeName,f.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,l,d),s[u]=p}o[u].resultBuffer=p.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const i=(e._localRoot||this._root).uuid,r=e._clip.uuid,a=this._actionsByClip[r];this._bindAction(e,a&&a.knownActions[0]),this._addInactiveAction(e,r,i)}const n=e._propertyBindings;for(let i=0,r=n.length;i!==r;++i){const a=n[i];a.useCount++==0&&(this._lendBinding(a),a.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const n=e._propertyBindings;for(let i=0,r=n.length;i!==r;++i){const a=n[i];--a.useCount==0&&(a.restoreOriginalState(),this._takeBackBinding(a))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const n=e._cacheIndex;return n!==null&&n<this._nActiveActions}_addInactiveAction(e,n,i){const r=this._actions,a=this._actionsByClip;let s=a[n];if(s===void 0)s={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,a[n]=s;else{const o=s.knownActions;e._byClipCacheIndex=o.length,o.push(e)}e._cacheIndex=r.length,r.push(e),s.actionByRoot[i]=e}_removeInactiveAction(e){const n=this._actions,i=n[n.length-1],r=e._cacheIndex;i._cacheIndex=r,n[r]=i,n.pop(),e._cacheIndex=null;const a=e._clip.uuid,s=this._actionsByClip,o=s[a],l=o.knownActions,c=l[l.length-1],h=e._byClipCacheIndex;c._byClipCacheIndex=h,l[h]=c,l.pop(),e._byClipCacheIndex=null;const u=o.actionByRoot,f=(e._localRoot||this._root).uuid;delete u[f],l.length===0&&delete s[a],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const n=e._propertyBindings;for(let i=0,r=n.length;i!==r;++i){const a=n[i];--a.referenceCount==0&&this._removeInactiveBinding(a)}}_lendAction(e){const n=this._actions,i=e._cacheIndex,r=this._nActiveActions++,a=n[r];e._cacheIndex=r,n[r]=e,a._cacheIndex=i,n[i]=a}_takeBackAction(e){const n=this._actions,i=e._cacheIndex,r=--this._nActiveActions,a=n[r];e._cacheIndex=r,n[r]=e,a._cacheIndex=i,n[i]=a}_addInactiveBinding(e,n,i){const r=this._bindingsByRootAndName,a=this._bindings;let s=r[n];s===void 0&&(s={},r[n]=s),s[i]=e,e._cacheIndex=a.length,a.push(e)}_removeInactiveBinding(e){const n=this._bindings,i=e.binding,r=i.rootNode.uuid,a=i.path,s=this._bindingsByRootAndName,o=s[r],l=n[n.length-1],c=e._cacheIndex;l._cacheIndex=c,n[c]=l,n.pop(),delete o[a],Object.keys(o).length===0&&delete s[r]}_lendBinding(e){const n=this._bindings,i=e._cacheIndex,r=this._nActiveBindings++,a=n[r];e._cacheIndex=r,n[r]=e,a._cacheIndex=i,n[i]=a}_takeBackBinding(e){const n=this._bindings,i=e._cacheIndex,r=--this._nActiveBindings,a=n[r];e._cacheIndex=r,n[r]=e,a._cacheIndex=i,n[i]=a}_lendControlInterpolant(){const e=this._controlInterpolants,n=this._nActiveControlInterpolants++;let i=e[n];return i===void 0&&(i=new gx(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),i.__cacheIndex=n,e[n]=i),i}_takeBackControlInterpolant(e){const n=this._controlInterpolants,i=e.__cacheIndex,r=--this._nActiveControlInterpolants,a=n[r];e.__cacheIndex=r,n[r]=e,a.__cacheIndex=i,n[i]=a}clipAction(e,n,i){const r=n||this._root,a=r.uuid;let s=typeof e=="string"?Ap.findByName(r,e):e;const o=s!==null?s.uuid:e,l=this._actionsByClip[o];let c=null;if(i===void 0&&(s!==null?i=s.blendMode:i=bd),l!==void 0){const u=l.actionByRoot[a];if(u!==void 0&&u.blendMode===i)return u;c=l.knownActions[0],s===null&&(s=c._clip)}if(s===null)return null;const h=new o3(this,s,n,i);return this._bindAction(h,c),this._addInactiveAction(h,o,a),h}existingAction(e,n){const i=n||this._root,r=i.uuid,a=typeof e=="string"?Ap.findByName(i,e):e,s=a?a.uuid:e,o=this._actionsByClip[s];return o!==void 0&&o.actionByRoot[r]||null}stopAllAction(){const e=this._actions,n=this._nActiveActions;for(let i=n-1;i>=0;--i)e[i].stop();return this}update(e){e*=this.timeScale;const n=this._actions,i=this._nActiveActions,r=this.time+=e,a=Math.sign(e),s=this._accuIndex^=1;for(let c=0;c!==i;++c)n[c]._update(r,e,a,s);const o=this._bindings,l=this._nActiveBindings;for(let c=0;c!==l;++c)o[c].apply(s);return this}setTime(e){this.time=0;for(let n=0;n<this._actions.length;n++)this._actions[n].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const n=this._actions,i=e.uuid,r=this._actionsByClip,a=r[i];if(a!==void 0){const s=a.knownActions;for(let o=0,l=s.length;o!==l;++o){const c=s[o];this._deactivateAction(c);const h=c._cacheIndex,u=n[n.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,u._cacheIndex=h,n[h]=u,n.pop(),this._removeInactiveBindingsForAction(c)}delete r[i]}}uncacheRoot(e){const n=e.uuid,i=this._actionsByClip;for(const s in i){const o=i[s].actionByRoot,l=o[n];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const r=this._bindingsByRootAndName,a=r[n];if(a!==void 0)for(const s in a){const o=a[s];o.restoreOriginalState(),this._removeInactiveBinding(o)}}uncacheAction(e,n){const i=this.existingAction(e,n);i!==null&&(this._deactivateAction(i),this._removeInactiveAction(i))}}l3.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class c3 extends Il{constructor(e,n,i=1){super(e,n);this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const n=super.clone(e);return n.meshPerAttribute=this.meshPerAttribute,n}toJSON(e){const n=super.toJSON(e);return n.isInstancedInterleavedBuffer=!0,n.meshPerAttribute=this.meshPerAttribute,n}}c3.prototype.isInstancedInterleavedBuffer=!0;class Dx{constructor(e=1,n=0,i=0){return this.radius=e,this.phi=n,this.theta=i,this}set(e,n,i){return this.radius=e,this.phi=n,this.theta=i,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){const e=1e-6;return this.phi=Math.max(e,Math.min(Math.PI-e,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,n,i){return this.radius=Math.sqrt(e*e+n*n+i*i),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(En(n/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}const Gr=new k,xu=new Fe,Fp=new Fe;class h3 extends pp{constructor(e){const n=Ix(e),i=new wt,r=[],a=[],s=new We(0,0,1),o=new We(0,1,0);for(let c=0;c<n.length;c++){const h=n[c];h.parent&&h.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),a.push(s.r,s.g,s.b),a.push(o.r,o.g,o.b))}i.setAttribute("position",new Dt(r,3)),i.setAttribute("color",new Dt(a,3));const l=new Gs({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(i,l);this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=n,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const n=this.bones,i=this.geometry,r=i.getAttribute("position");Fp.copy(this.root.matrixWorld).invert();for(let a=0,s=0;a<n.length;a++){const o=n[a];o.parent&&o.parent.isBone&&(xu.multiplyMatrices(Fp,o.matrixWorld),Gr.setFromMatrixPosition(xu),r.setXYZ(s,Gr.x,Gr.y,Gr.z),xu.multiplyMatrices(Fp,o.parent.matrixWorld),Gr.setFromMatrixPosition(xu),r.setXYZ(s+1,Gr.x,Gr.y,Gr.z),s+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function Ix(t){const e=[];t&&t.isBone&&e.push(t);for(let n=0;n<t.children.length;n++)e.push.apply(e,Ix(t.children[n]));return e}class u3 extends pp{constructor(e=10,n=10,i=4473924,r=8947848){i=new We(i),r=new We(r);const a=n/2,s=e/n,o=e/2,l=[],c=[];for(let f=0,d=0,p=-o;f<=n;f++,p+=s){l.push(-o,0,p,o,0,p),l.push(p,0,-o,p,0,o);const m=f===a?i:r;m.toArray(c,d),d+=3,m.toArray(c,d),d+=3,m.toArray(c,d),d+=3,m.toArray(c,d),d+=3}const h=new wt;h.setAttribute("position",new Dt(l,3)),h.setAttribute("color",new Dt(c,3));const u=new Gs({vertexColors:!0,toneMapped:!1});super(h,u);this.type="GridHelper"}}const f3=new Float32Array(1);new Int32Array(f3.buffer);Vn.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(Vn.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t};bp.prototype.fromPoints=function(t){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)};u3.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};h3.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};Qi.prototype.extractUrlBase=function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),vu.extractUrlBase(t)};Qi.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};ci.prototype.center=function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)};ci.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()};ci.prototype.isIntersectionBox=function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)};ci.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)};ci.prototype.size=function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)};_s.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()};Yh.prototype.setFromMatrix=function(t){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(t)};an.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)};an.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)};an.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")};an.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)};an.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")};an.prototype.getInverse=function(t){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()};Fe.prototype.extractPosition=function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)};Fe.prototype.flattenToArrayOffset=function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)};Fe.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new k().setFromMatrixColumn(this,3)};Fe.prototype.setRotationFromQuaternion=function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)};Fe.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")};Fe.prototype.multiplyVector3=function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)};Fe.prototype.multiplyVector4=function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)};Fe.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")};Fe.prototype.rotateAxis=function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)};Fe.prototype.crossVector=function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)};Fe.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")};Fe.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")};Fe.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")};Fe.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")};Fe.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")};Fe.prototype.applyToBufferAttribute=function(t){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)};Fe.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")};Fe.prototype.makeFrustum=function(t,e,n,i,r,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,i,n,r,a)};Fe.prototype.getInverse=function(t){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()};Ki.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)};qt.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)};qt.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()};Ms.prototype.isIntersectionBox=function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)};Ms.prototype.isIntersectionPlane=function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)};Ms.prototype.isIntersectionSphere=function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)};Yt.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()};Yt.prototype.barycoordFromPoint=function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)};Yt.prototype.midpoint=function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)};Yt.prototypenormal=function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)};Yt.prototype.plane=function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)};Yt.barycoordFromPoint=function(t,e,n,i,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Yt.getBarycoord(t,e,n,i,r)};Yt.normal=function(t,e,n,i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Yt.getNormal(t,e,n,i)};Hl.prototype.extractAllPoints=function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)};Hl.prototype.extrude=function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Vs(this,t)};Hl.prototype.makeGeometry=function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Tp(this,t)};Te.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)};Te.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)};Te.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};k.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")};k.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")};k.prototype.getPositionFromMatrix=function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)};k.prototype.getScaleFromMatrix=function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)};k.prototype.getColumnFromMatrix=function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)};k.prototype.applyProjection=function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)};k.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)};k.prototype.distanceToManhattan=function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)};k.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};yt.prototype.fromAttribute=function(t,e,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)};yt.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};gt.prototype.getChildByName=function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)};gt.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")};gt.prototype.translate=function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)};gt.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")};gt.prototype.applyMatrix=function(t){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)};Object.defineProperties(gt.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});Tn.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")};Object.defineProperties(Tn.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),Vb},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});hp.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};An.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),e!==void 0&&(this.filmGauge=e),this.setFocalLength(t)};Object.defineProperties(Pi.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}});Object.defineProperties(tn.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===Lh},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(Lh)}}});tn.prototype.setDynamic=function(t){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(t===!0?Lh:wl),this};tn.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},tn.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};wt.prototype.addIndex=function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)};wt.prototype.addAttribute=function(t,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(e&&e.isBufferAttribute)&&!(e&&e.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(t,new tn(arguments[1],arguments[2]))):t==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(t,e)};wt.prototype.addDrawCall=function(t,e,n){n!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)};wt.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()};wt.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")};wt.prototype.removeAttribute=function(t){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(t)};wt.prototype.applyMatrix=function(t){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)};Object.defineProperties(wt.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});Il.prototype.setDynamic=function(t){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(t===!0?Lh:wl),this};Il.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};Vs.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")};Vs.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")};Vs.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")};By.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")};Object.defineProperties(mn.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new We}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=t===Qg}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(t){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=t}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}});Object.defineProperties(fa.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}});bt.prototype.clearTarget=function(t,e,n,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,n,i)};bt.prototype.animate=function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)};bt.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()};bt.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()};bt.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision};bt.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()};bt.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")};bt.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")};bt.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")};bt.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")};bt.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")};bt.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")};bt.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures};bt.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")};bt.prototype.enableScissorTest=function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)};bt.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")};bt.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")};bt.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")};bt.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")};bt.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")};bt.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")};bt.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")};bt.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")};bt.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")};bt.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()};Object.defineProperties(bt.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(t){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=t===!0?Mt:Tr}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}},gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});Object.defineProperties(Iy.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});Object.defineProperties(Jn.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}});ZL.prototype.load=function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return new XL().load(t,function(i){e.setBuffer(i)}),this};Kd.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)};Kd.prototype.clear=function(t,e,n,i){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(t,e,n,i)};la.crossOrigin=void 0;la.loadTexture=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const r=new _x;r.setCrossOrigin(this.crossOrigin);const a=r.load(t,n,void 0,i);return e&&(a.mapping=e),a};la.loadTextureCube=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const r=new HL;r.setCrossOrigin(this.crossOrigin);const a=r.load(t,n,void 0,i);return e&&(a.mapping=e),a};la.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};la.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:dd}}));typeof window!="undefined"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=dd);/*!
fflate - fast JavaScript compression/decompression
<https://101arrowz.github.io/fflate>
Licensed under MIT. https://github.com/101arrowz/fflate/blob/master/LICENSE
version 0.6.9
*/var Fx={},Bp=function(t){return URL.createObjectURL(new Blob([t],{type:"text/javascript"}))},Bx=function(t){return new Worker(t)};try{URL.revokeObjectURL(Bp(""))}catch{Bp=function(e){return"data:application/javascript;charset=UTF-8,"+encodeURI(e)},Bx=function(e){return new Worker(e,{type:"module"})}}var d3=function(t,e,n,i,r){var a=Bx(Fx[e]||(Fx[e]=Bp(t)));return a.onerror=function(s){return r(s.error,null)},a.onmessage=function(s){return r(null,s.data)},a.postMessage(n,i),a},dt=Uint8Array,on=Uint16Array,tr=Uint32Array,Xs=new dt([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),qs=new dt([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),ql=new dt([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),Ox=function(t,e){for(var n=new on(31),i=0;i<31;++i)n[i]=e+=1<<t[i-1];for(var r=new tr(n[30]),i=1;i<30;++i)for(var a=n[i];a<n[i+1];++a)r[a]=a-n[i]<<5|i;return[n,r]},Nx=Ox(Xs,2),Op=Nx[0],_u=Nx[1];Op[28]=258,_u[258]=28;var zx=Ox(qs,0),Ux=zx[0],Np=zx[1],Yl=new on(32768);for(var Pt=0;Pt<32768;++Pt){var Hr=(Pt&43690)>>>1|(Pt&21845)<<1;Hr=(Hr&52428)>>>2|(Hr&13107)<<2,Hr=(Hr&61680)>>>4|(Hr&3855)<<4,Yl[Pt]=((Hr&65280)>>>8|(Hr&255)<<8)>>>1}var Qn=function(t,e,n){for(var i=t.length,r=0,a=new on(e);r<i;++r)++a[t[r]-1];var s=new on(e);for(r=0;r<e;++r)s[r]=s[r-1]+a[r-1]<<1;var o;if(n){o=new on(1<<e);var l=15-e;for(r=0;r<i;++r)if(t[r])for(var c=r<<4|t[r],h=e-t[r],u=s[t[r]-1]++<<h,f=u|(1<<h)-1;u<=f;++u)o[Yl[u]>>>l]=c}else for(o=new on(i),r=0;r<i;++r)t[r]&&(o[r]=Yl[s[t[r]-1]++]>>>15-t[r]);return o},nr=new dt(288);for(var Pt=0;Pt<144;++Pt)nr[Pt]=8;for(var Pt=144;Pt<256;++Pt)nr[Pt]=9;for(var Pt=256;Pt<280;++Pt)nr[Pt]=7;for(var Pt=280;Pt<288;++Pt)nr[Pt]=8;var Ys=new dt(32);for(var Pt=0;Pt<32;++Pt)Ys[Pt]=5;var Gx=Qn(nr,9,0),Hx=Qn(nr,9,1),Vx=Qn(Ys,5,0),kx=Qn(Ys,5,1),Mu=function(t){for(var e=t[0],n=1;n<t.length;++n)t[n]>e&&(e=t[n]);return e},ei=function(t,e,n){var i=e/8|0;return(t[i]|t[i+1]<<8)>>(e&7)&n},wu=function(t,e){var n=e/8|0;return(t[n]|t[n+1]<<8|t[n+2]<<16)>>(e&7)},Zl=function(t){return(t/8|0)+(t&7&&1)},ti=function(t,e,n){(e==null||e<0)&&(e=0),(n==null||n>t.length)&&(n=t.length);var i=new(t instanceof on?on:t instanceof tr?tr:dt)(n-e);return i.set(t.subarray(e,n)),i},Jl=function(t,e,n){var i=t.length;if(!i||n&&!n.l&&i<5)return e||new dt(0);var r=!e||n,a=!n||n.i;n||(n={}),e||(e=new dt(i*3));var s=function(ie){var Le=e.length;if(ie>Le){var Ee=new dt(Math.max(Le*2,ie));Ee.set(e),e=Ee}},o=n.f||0,l=n.p||0,c=n.b||0,h=n.l,u=n.d,f=n.m,d=n.n,p=i*8;do{if(!h){n.f=o=ei(t,l,1);var m=ei(t,l+1,3);if(l+=3,m)if(m==1)h=Hx,u=kx,f=9,d=5;else if(m==2){var b=ei(t,l,31)+257,_=ei(t,l+10,15)+4,M=b+ei(t,l+5,31)+1;l+=14;for(var y=new dt(M),w=new dt(19),E=0;E<_;++E)w[ql[E]]=ei(t,l+E*3,7);l+=_*3;for(var A=Mu(w),L=(1<<A)-1,S=Qn(w,A,1),E=0;E<M;){var R=S[ei(t,l,L)];l+=R&15;var x=R>>>4;if(x<16)y[E++]=x;else{var D=0,I=0;for(x==16?(I=3+ei(t,l,3),l+=2,D=y[E-1]):x==17?(I=3+ei(t,l,7),l+=3):x==18&&(I=11+ei(t,l,127),l+=7);I--;)y[E++]=D}}var F=y.subarray(0,b),U=y.subarray(b);f=Mu(F),d=Mu(U),h=Qn(F,f,1),u=Qn(U,d,1)}else throw"invalid block type";else{var x=Zl(l)+4,g=t[x-4]|t[x-3]<<8,v=x+g;if(v>i){if(a)throw"unexpected EOF";break}r&&s(c+g),e.set(t.subarray(x,v),c),n.b=c+=g,n.p=l=v*8;continue}if(l>p){if(a)throw"unexpected EOF";break}}r&&s(c+131072);for(var j=(1<<f)-1,Y=(1<<d)-1,K=l;;K=l){var D=h[wu(t,l)&j],X=D>>>4;if(l+=D&15,l>p){if(a)throw"unexpected EOF";break}if(!D)throw"invalid length/literal";if(X<256)e[c++]=X;else if(X==256){K=l,h=null;break}else{var q=X-254;if(X>264){var E=X-257,he=Xs[E];q=ei(t,l,(1<<he)-1)+Op[E],l+=he}var Se=u[wu(t,l)&Y],_e=Se>>>4;if(!Se)throw"invalid distance";l+=Se&15;var U=Ux[_e];if(_e>3){var he=qs[_e];U+=wu(t,l)&(1<<he)-1,l+=he}if(l>p){if(a)throw"unexpected EOF";break}r&&s(c+131072);for(var Z=c+q;c<Z;c+=4)e[c]=e[c-U],e[c+1]=e[c+1-U],e[c+2]=e[c+2-U],e[c+3]=e[c+3-U];c=Z}}n.l=h,n.p=K,n.b=c,h&&(o=1,n.m=f,n.d=u,n.n=d)}while(!o);return c==e.length?e:ti(e,0,c)},Di=function(t,e,n){n<<=e&7;var i=e/8|0;t[i]|=n,t[i+1]|=n>>>8},Zs=function(t,e,n){n<<=e&7;var i=e/8|0;t[i]|=n,t[i+1]|=n>>>8,t[i+2]|=n>>>16},bu=function(t,e){for(var n=[],i=0;i<t.length;++i)t[i]&&n.push({s:i,f:t[i]});var r=n.length,a=n.slice();if(!r)return[ir,0];if(r==1){var s=new dt(n[0].s+1);return s[n[0].s]=1,[s,1]}n.sort(function(M,y){return M.f-y.f}),n.push({s:-1,f:25001});var o=n[0],l=n[1],c=0,h=1,u=2;for(n[0]={s:-1,f:o.f+l.f,l:o,r:l};h!=r-1;)o=n[n[c].f<n[u].f?c++:u++],l=n[c!=h&&n[c].f<n[u].f?c++:u++],n[h++]={s:-1,f:o.f+l.f,l:o,r:l};for(var f=a[0].s,i=1;i<r;++i)a[i].s>f&&(f=a[i].s);var d=new on(f+1),p=Su(n[h-1],d,0);if(p>e){var i=0,m=0,x=p-e,g=1<<x;for(a.sort(function(y,w){return d[w.s]-d[y.s]||y.f-w.f});i<r;++i){var v=a[i].s;if(d[v]>e)m+=g-(1<<p-d[v]),d[v]=e;else break}for(m>>>=x;m>0;){var b=a[i].s;d[b]<e?m-=1<<e-d[b]++-1:++i}for(;i>=0&&m;--i){var _=a[i].s;d[_]==e&&(--d[_],++m)}p=e}return[new dt(d),p]},Su=function(t,e,n){return t.s==-1?Math.max(Su(t.l,e,n+1),Su(t.r,e,n+1)):e[t.s]=n},zp=function(t){for(var e=t.length;e&&!t[--e];);for(var n=new on(++e),i=0,r=t[0],a=1,s=function(l){n[i++]=l},o=1;o<=e;++o)if(t[o]==r&&o!=e)++a;else{if(!r&&a>2){for(;a>138;a-=138)s(32754);a>2&&(s(a>10?a-11<<5|28690:a-3<<5|12305),a=0)}else if(a>3){for(s(r),--a;a>6;a-=6)s(8304);a>2&&(s(a-3<<5|8208),a=0)}for(;a--;)s(r);a=1,r=t[o]}return[n.subarray(0,i),e]},Js=function(t,e){for(var n=0,i=0;i<e.length;++i)n+=t[i]*e[i];return n},Kl=function(t,e,n){var i=n.length,r=Zl(e+2);t[r]=i&255,t[r+1]=i>>>8,t[r+2]=t[r]^255,t[r+3]=t[r+1]^255;for(var a=0;a<i;++a)t[r+a+4]=n[a];return(r+4+i)*8},Up=function(t,e,n,i,r,a,s,o,l,c,h){Di(e,h++,n),++r[256];for(var u=bu(r,15),f=u[0],d=u[1],p=bu(a,15),m=p[0],x=p[1],g=zp(f),v=g[0],b=g[1],_=zp(m),M=_[0],y=_[1],w=new on(19),E=0;E<v.length;++E)w[v[E]&31]++;for(var E=0;E<M.length;++E)w[M[E]&31]++;for(var A=bu(w,7),L=A[0],S=A[1],R=19;R>4&&!L[ql[R-1]];--R);var D=c+5<<3,I=Js(r,nr)+Js(a,Ys)+s,F=Js(r,f)+Js(a,m)+s+14+3*R+Js(w,L)+(2*w[16]+3*w[17]+7*w[18]);if(D<=I&&D<=F)return Kl(e,h,t.subarray(l,l+c));var U,j,Y,K;if(Di(e,h,1+(F<I)),h+=2,F<I){U=Qn(f,d,0),j=f,Y=Qn(m,x,0),K=m;var X=Qn(L,S,0);Di(e,h,b-257),Di(e,h+5,y-1),Di(e,h+10,R-4),h+=14;for(var E=0;E<R;++E)Di(e,h+3*E,L[ql[E]]);h+=3*R;for(var q=[v,M],he=0;he<2;++he)for(var Se=q[he],E=0;E<Se.length;++E){var _e=Se[E]&31;Di(e,h,X[_e]),h+=L[_e],_e>15&&(Di(e,h,Se[E]>>>5&127),h+=Se[E]>>>12)}}else U=Gx,j=nr,Y=Vx,K=Ys;for(var E=0;E<o;++E)if(i[E]>255){var _e=i[E]>>>18&31;Zs(e,h,U[_e+257]),h+=j[_e+257],_e>7&&(Di(e,h,i[E]>>>23&31),h+=Xs[_e]);var Z=i[E]&31;Zs(e,h,Y[Z]),h+=K[Z],Z>3&&(Zs(e,h,i[E]>>>5&8191),h+=qs[Z])}else Zs(e,h,U[i[E]]),h+=j[i[E]];return Zs(e,h,U[256]),h+j[256]},Wx=new tr([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),ir=new dt(0),$x=function(t,e,n,i,r,a){var s=t.length,o=new dt(i+s+5*(1+Math.ceil(s/7e3))+r),l=o.subarray(i,o.length-r),c=0;if(!e||s<8)for(var h=0;h<=s;h+=65535){var u=h+65535;u<s?c=Kl(l,c,t.subarray(h,u)):(l[h]=a,c=Kl(l,c,t.subarray(h,s)))}else{for(var f=Wx[e-1],d=f>>>13,p=f&8191,m=(1<<n)-1,x=new on(32768),g=new on(m+1),v=Math.ceil(n/3),b=2*v,_=function(pe){return(t[pe]^t[pe+1]<<v^t[pe+2]<<b)&m},M=new tr(25e3),y=new on(288),w=new on(32),E=0,A=0,h=0,L=0,S=0,R=0;h<s;++h){var D=_(h),I=h&32767,F=g[D];if(x[I]=F,g[D]=I,S<=h){var U=s-h;if((E>7e3||L>24576)&&U>423){c=Up(t,l,0,M,y,w,A,L,R,h-R,c),L=E=A=0,R=h;for(var j=0;j<286;++j)y[j]=0;for(var j=0;j<30;++j)w[j]=0}var Y=2,K=0,X=p,q=I-F&32767;if(U>2&&D==_(h-q))for(var he=Math.min(d,U)-1,Se=Math.min(32767,h),_e=Math.min(258,U);q<=Se&&--X&&I!=F;){if(t[h+Y]==t[h+Y-q]){for(var Z=0;Z<_e&&t[h+Z]==t[h+Z-q];++Z);if(Z>Y){if(Y=Z,K=q,Z>he)break;for(var ie=Math.min(q,Z-2),Le=0,j=0;j<ie;++j){var Ee=h-q+j+32768&32767,we=x[Ee],Ae=Ee-we+32768&32767;Ae>Le&&(Le=Ae,F=Ee)}}}I=F,F=x[I],q+=I-F+32768&32767}if(K){M[L++]=268435456|_u[Y]<<18|Np[K];var ae=_u[Y]&31,ee=Np[K]&31;A+=Xs[ae]+qs[ee],++y[257+ae],++w[ee],S=h+Y,++E}else M[L++]=t[h],++y[t[h]]}}c=Up(t,l,a,M,y,w,A,L,R,h-R,c),!a&&c&7&&(c=Kl(l,c+1,ir))}return ti(o,0,i+Zl(c)+r)},jx=function(){for(var t=new tr(256),e=0;e<256;++e){for(var n=e,i=9;--i;)n=(n&1&&3988292384)^n>>>1;t[e]=n}return t}(),Ks=function(){var t=-1;return{p:function(e){for(var n=t,i=0;i<e.length;++i)n=jx[n&255^e[i]]^n>>>8;t=n},d:function(){return~t}}},Gp=function(){var t=1,e=0;return{p:function(n){for(var i=t,r=e,a=n.length,s=0;s!=a;){for(var o=Math.min(s+2655,a);s<o;++s)r+=i+=n[s];i=(i&65535)+15*(i>>16),r=(r&65535)+15*(r>>16)}t=i,e=r},d:function(){return t%=65521,e%=65521,(t&255)<<24|t>>>8<<16|(e&255)<<8|e>>>8}}},ma=function(t,e,n,i,r){return $x(t,e.level==null?6:e.level,e.mem==null?Math.ceil(Math.max(8,Math.min(13,Math.log(t.length)))*1.5):12+e.mem,n,i,!r)},Ql=function(t,e){var n={};for(var i in t)n[i]=t[i];for(var i in e)n[i]=e[i];return n},Xx=function(t,e,n){for(var i=t(),r=t.toString(),a=r.slice(r.indexOf("[")+1,r.lastIndexOf("]")).replace(/ /g,"").split(","),s=0;s<i.length;++s){var o=i[s],l=a[s];if(typeof o=="function"){e+=";"+l+"=";var c=o.toString();if(o.prototype)if(c.indexOf("[native code]")!=-1){var h=c.indexOf(" ",8)+1;e+=c.slice(h,c.indexOf("(",h))}else{e+=c;for(var u in o.prototype)e+=";"+l+".prototype."+u+"="+o.prototype[u].toString()}else e+=c}else n[l]=o}return[e,n]},Eu=[],p3=function(t){var e=[];for(var n in t)(t[n]instanceof dt||t[n]instanceof on||t[n]instanceof tr)&&e.push((t[n]=new t[n].constructor(t[n])).buffer);return e},qx=function(t,e,n,i){var r;if(!Eu[n]){for(var a="",s={},o=t.length-1,l=0;l<o;++l)r=Xx(t[l],a,s),a=r[0],s=r[1];Eu[n]=Xx(t[o],a,s)}var c=Ql({},Eu[n][1]);return d3(Eu[n][0]+";onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage="+e.toString()+"}",n,c,p3(c),i)},Qs=function(){return[dt,on,tr,Xs,qs,ql,Op,Ux,Hx,kx,Yl,Qn,Mu,ei,wu,Zl,ti,Jl,io,Vr,Hp]},eo=function(){return[dt,on,tr,Xs,qs,ql,_u,Np,Gx,nr,Vx,Ys,Yl,Wx,ir,Qn,Di,Zs,bu,Su,zp,Js,Kl,Up,Zl,ti,$x,ma,ec,Vr]},Yx=function(){return[kp,$p,xt,Ks,jx]},Zx=function(){return[Wp,Qx]},Jx=function(){return[jp,xt,Gp]},Kx=function(){return[e0]},Vr=function(t){return postMessage(t,[t.buffer])},Hp=function(t){return t&&t.size&&new dt(t.size)},to=function(t,e,n,i,r,a){var s=qx(n,i,r,function(o,l){s.terminate(),a(o,l)});return s.postMessage([t,e],e.consume?[t.buffer]:[]),function(){s.terminate()}},ni=function(t){return t.ondata=function(e,n){return postMessage([e,n],[e.buffer])},function(e){return t.push(e.data[0],e.data[1])}},no=function(t,e,n,i,r){var a,s=qx(t,i,r,function(o,l){o?(s.terminate(),e.ondata.call(e,o)):(l[1]&&s.terminate(),e.ondata.call(e,o,l[0],l[1]))});s.postMessage(n),e.push=function(o,l){if(a)throw"stream finished";if(!e.ondata)throw"no stream handler";s.postMessage([o,a=l],[o.buffer])},e.terminate=function(){s.terminate()}},Cn=function(t,e){return t[e]|t[e+1]<<8},kt=function(t,e){return(t[e]|t[e+1]<<8|t[e+2]<<16|t[e+3]<<24)>>>0},Vp=function(t,e){return kt(t,e)+kt(t,e+4)*4294967296},xt=function(t,e,n){for(;n;++e)t[e]=n,n>>>=8},kp=function(t,e){var n=e.filename;if(t[0]=31,t[1]=139,t[2]=8,t[8]=e.level<2?4:e.level==9?2:0,t[9]=3,e.mtime!=0&&xt(t,4,Math.floor(new Date(e.mtime||Date.now())/1e3)),n){t[3]=8;for(var i=0;i<=n.length;++i)t[i+10]=n.charCodeAt(i)}},Wp=function(t){if(t[0]!=31||t[1]!=139||t[2]!=8)throw"invalid gzip data";var e=t[3],n=10;e&4&&(n+=t[10]|(t[11]<<8)+2);for(var i=(e>>3&1)+(e>>4&1);i>0;i-=!t[n++]);return n+(e&2)},Qx=function(t){var e=t.length;return(t[e-4]|t[e-3]<<8|t[e-2]<<16|t[e-1]<<24)>>>0},$p=function(t){return 10+(t.filename&&t.filename.length+1||0)},jp=function(t,e){var n=e.level,i=n==0?0:n<6?1:n==9?3:2;t[0]=120,t[1]=i<<6|(i?32-2*i:1)},e0=function(t){if((t[0]&15)!=8||t[0]>>>4>7||(t[0]<<8|t[1])%31)throw"invalid zlib data";if(t[1]&32)throw"invalid zlib data: preset dictionaries not supported"};function Xp(t,e){return!e&&typeof t=="function"&&(e=t,t={}),this.ondata=e,t}var Ii=function(){function t(e,n){!n&&typeof e=="function"&&(n=e,e={}),this.ondata=n,this.o=e||{}}return t.prototype.p=function(e,n){this.ondata(ma(e,this.o,0,0,!n),n)},t.prototype.push=function(e,n){if(this.d)throw"stream finished";if(!this.ondata)throw"no stream handler";this.d=n,this.p(e,n||!1)},t}(),t0=function(){function t(e,n){no([eo,function(){return[ni,Ii]}],this,Xp.call(this,e,n),function(i){var r=new Ii(i.data);onmessage=ni(r)},6)}return t}();function n0(t,e,n){if(n||(n=e,e={}),typeof n!="function")throw"no callback";return to(t,e,[eo],function(i){return Vr(ec(i.data[0],i.data[1]))},0,n)}function ec(t,e){return ma(t,e||{},0,0)}var Fn=function(){function t(e){this.s={},this.p=new dt(0),this.ondata=e}return t.prototype.e=function(e){if(this.d)throw"stream finished";if(!this.ondata)throw"no stream handler";var n=this.p.length,i=new dt(n+e.length);i.set(this.p),i.set(e,n),this.p=i},t.prototype.c=function(e){this.d=this.s.i=e||!1;var n=this.s.b,i=Jl(this.p,this.o,this.s);this.ondata(ti(i,n,this.s.b),this.d),this.o=ti(i,this.s.b-32768),this.s.b=this.o.length,this.p=ti(this.p,this.s.p/8|0),this.s.p&=7},t.prototype.push=function(e,n){this.e(e),this.c(n)},t}(),qp=function(){function t(e){this.ondata=e,no([Qs,function(){return[ni,Fn]}],this,0,function(){var n=new Fn;onmessage=ni(n)},7)}return t}();function Yp(t,e,n){if(n||(n=e,e={}),typeof n!="function")throw"no callback";return to(t,e,[Qs],function(i){return Vr(io(i.data[0],Hp(i.data[1])))},1,n)}function io(t,e){return Jl(t,e)}var Tu=function(){function t(e,n){this.c=Ks(),this.l=0,this.v=1,Ii.call(this,e,n)}return t.prototype.push=function(e,n){Ii.prototype.push.call(this,e,n)},t.prototype.p=function(e,n){this.c.p(e),this.l+=e.length;var i=ma(e,this.o,this.v&&$p(this.o),n&&8,!n);this.v&&(kp(i,this.o),this.v=0),n&&(xt(i,i.length-8,this.c.d()),xt(i,i.length-4,this.l)),this.ondata(i,n)},t}(),i0=function(){function t(e,n){no([eo,Yx,function(){return[ni,Ii,Tu]}],this,Xp.call(this,e,n),function(i){var r=new Tu(i.data);onmessage=ni(r)},8)}return t}();function r0(t,e,n){if(n||(n=e,e={}),typeof n!="function")throw"no callback";return to(t,e,[eo,Yx,function(){return[Au]}],function(i){return Vr(Au(i.data[0],i.data[1]))},2,n)}function Au(t,e){e||(e={});var n=Ks(),i=t.length;n.p(t);var r=ma(t,e,$p(e),8),a=r.length;return kp(r,e),xt(r,a-8,n.d()),xt(r,a-4,i),r}var Lu=function(){function t(e){this.v=1,Fn.call(this,e)}return t.prototype.push=function(e,n){if(Fn.prototype.e.call(this,e),this.v){var i=this.p.length>3?Wp(this.p):4;if(i>=this.p.length&&!n)return;this.p=this.p.subarray(i),this.v=0}if(n){if(this.p.length<8)throw"invalid gzip stream";this.p=this.p.subarray(0,-8)}Fn.prototype.c.call(this,n)},t}(),a0=function(){function t(e){this.ondata=e,no([Qs,Zx,function(){return[ni,Fn,Lu]}],this,0,function(){var n=new Lu;onmessage=ni(n)},9)}return t}();function s0(t,e,n){if(n||(n=e,e={}),typeof n!="function")throw"no callback";return to(t,e,[Qs,Zx,function(){return[Cu]}],function(i){return Vr(Cu(i.data[0]))},3,n)}function Cu(t,e){return Jl(t.subarray(Wp(t),-8),e||new dt(Qx(t)))}var Zp=function(){function t(e,n){this.c=Gp(),this.v=1,Ii.call(this,e,n)}return t.prototype.push=function(e,n){Ii.prototype.push.call(this,e,n)},t.prototype.p=function(e,n){this.c.p(e);var i=ma(e,this.o,this.v&&2,n&&4,!n);this.v&&(jp(i,this.o),this.v=0),n&&xt(i,i.length-4,this.c.d()),this.ondata(i,n)},t}(),m3=function(){function t(e,n){no([eo,Jx,function(){return[ni,Ii,Zp]}],this,Xp.call(this,e,n),function(i){var r=new Zp(i.data);onmessage=ni(r)},10)}return t}();function g3(t,e,n){if(n||(n=e,e={}),typeof n!="function")throw"no callback";return to(t,e,[eo,Jx,function(){return[Jp]}],function(i){return Vr(Jp(i.data[0],i.data[1]))},4,n)}function Jp(t,e){e||(e={});var n=Gp();n.p(t);var i=ma(t,e,2,4);return jp(i,e),xt(i,i.length-4,n.d()),i}var Ru=function(){function t(e){this.v=1,Fn.call(this,e)}return t.prototype.push=function(e,n){if(Fn.prototype.e.call(this,e),this.v){if(this.p.length<2&&!n)return;this.p=this.p.subarray(2),this.v=0}if(n){if(this.p.length<4)throw"invalid zlib stream";this.p=this.p.subarray(0,-4)}Fn.prototype.c.call(this,n)},t}(),o0=function(){function t(e){this.ondata=e,no([Qs,Kx,function(){return[ni,Fn,Ru]}],this,0,function(){var n=new Ru;onmessage=ni(n)},11)}return t}();function l0(t,e,n){if(n||(n=e,e={}),typeof n!="function")throw"no callback";return to(t,e,[Qs,Kx,function(){return[tc]}],function(i){return Vr(tc(i.data[0],Hp(i.data[1])))},5,n)}function tc(t,e){return Jl((e0(t),t.subarray(2,-4)),e)}var c0=function(){function t(e){this.G=Lu,this.I=Fn,this.Z=Ru,this.ondata=e}return t.prototype.push=function(e,n){if(!this.ondata)throw"no stream handler";if(this.s)this.s.push(e,n);else{if(this.p&&this.p.length){var i=new dt(this.p.length+e.length);i.set(this.p),i.set(e,this.p.length)}else this.p=e;if(this.p.length>2){var r=this,a=function(){r.ondata.apply(r,arguments)};this.s=this.p[0]==31&&this.p[1]==139&&this.p[2]==8?new this.G(a):(this.p[0]&15)!=8||this.p[0]>>4>7||(this.p[0]<<8|this.p[1])%31?new this.I(a):new this.Z(a),this.s.push(this.p,n),this.p=null}}},t}(),v3=function(){function t(e){this.G=a0,this.I=qp,this.Z=o0,this.ondata=e}return t.prototype.push=function(e,n){c0.prototype.push.call(this,e,n)},t}();function y3(t,e,n){if(n||(n=e,e={}),typeof n!="function")throw"no callback";return t[0]==31&&t[1]==139&&t[2]==8?s0(t,e,n):(t[0]&15)!=8||t[0]>>4>7||(t[0]<<8|t[1])%31?Yp(t,e,n):l0(t,e,n)}function x3(t,e){return t[0]==31&&t[1]==139&&t[2]==8?Cu(t,e):(t[0]&15)!=8||t[0]>>4>7||(t[0]<<8|t[1])%31?io(t,e):tc(t,e)}var Kp=function(t,e,n,i){for(var r in t){var a=t[r],s=e+r;a instanceof dt?n[s]=[a,i]:Array.isArray(a)?n[s]=[a[0],Ql(i,a[1])]:Kp(a,s+"/",n,i)}},h0=typeof TextEncoder!="undefined"&&new TextEncoder,Qp=typeof TextDecoder!="undefined"&&new TextDecoder,u0=0;try{Qp.decode(ir,{stream:!0}),u0=1}catch{}var f0=function(t){for(var e="",n=0;;){var i=t[n++],r=(i>127)+(i>223)+(i>239);if(n+r>t.length)return[e,ti(t,n-1)];r?r==3?(i=((i&15)<<18|(t[n++]&63)<<12|(t[n++]&63)<<6|t[n++]&63)-65536,e+=String.fromCharCode(55296|i>>10,56320|i&1023)):r&1?e+=String.fromCharCode((i&31)<<6|t[n++]&63):e+=String.fromCharCode((i&15)<<12|(t[n++]&63)<<6|t[n++]&63):e+=String.fromCharCode(i)}},_3=function(){function t(e){this.ondata=e,u0?this.t=new TextDecoder:this.p=ir}return t.prototype.push=function(e,n){if(!this.ondata)throw"no callback";if(n=!!n,this.t){if(this.ondata(this.t.decode(e,{stream:!0}),n),n){if(this.t.decode().length)throw"invalid utf-8 data";this.t=null}return}if(!this.p)throw"stream finished";var i=new dt(this.p.length+e.length);i.set(this.p),i.set(e,this.p.length);var r=f0(i),a=r[0],s=r[1];if(n){if(s.length)throw"invalid utf-8 data";this.p=null}else this.p=s;this.ondata(a,n)},t}(),M3=function(){function t(e){this.ondata=e}return t.prototype.push=function(e,n){if(!this.ondata)throw"no callback";if(this.d)throw"stream finished";this.ondata(kr(e),this.d=n||!1)},t}();function kr(t,e){if(e){for(var n=new dt(t.length),i=0;i<t.length;++i)n[i]=t.charCodeAt(i);return n}if(h0)return h0.encode(t);for(var r=t.length,a=new dt(t.length+(t.length>>1)),s=0,o=function(h){a[s++]=h},i=0;i<r;++i){if(s+5>a.length){var l=new dt(s+8+(r-i<<1));l.set(a),a=l}var c=t.charCodeAt(i);c<128||e?o(c):c<2048?(o(192|c>>6),o(128|c&63)):c>55295&&c<57344?(c=65536+(c&1023<<10)|t.charCodeAt(++i)&1023,o(240|c>>18),o(128|c>>12&63),o(128|c>>6&63),o(128|c&63)):(o(224|c>>12),o(128|c>>6&63),o(128|c&63))}return ti(a,0,s)}function em(t,e){if(e){for(var n="",i=0;i<t.length;i+=16384)n+=String.fromCharCode.apply(null,t.subarray(i,i+16384));return n}else{if(Qp)return Qp.decode(t);var r=f0(t),a=r[0],s=r[1];if(s.length)throw"invalid utf-8 data";return a}}var d0=function(t){return t==1?3:t<6?2:t==9?1:0},p0=function(t,e){return e+30+Cn(t,e+26)+Cn(t,e+28)},m0=function(t,e,n){var i=Cn(t,e+28),r=em(t.subarray(e+46,e+46+i),!(Cn(t,e+8)&2048)),a=e+46+i,s=kt(t,e+20),o=n&&s==4294967295?g0(t,a):[s,kt(t,e+24),kt(t,e+42)],l=o[0],c=o[1],h=o[2];return[Cn(t,e+10),l,c,r,a+Cn(t,e+30)+Cn(t,e+32),h]},g0=function(t,e){for(;Cn(t,e)!=1;e+=4+Cn(t,e+2));return[Vp(t,e+12),Vp(t,e+4),Vp(t,e+20)]},Wr=function(t){var e=0;if(t)for(var n in t){var i=t[n].length;if(i>65535)throw"extra field too long";e+=i+4}return e},ro=function(t,e,n,i,r,a,s,o){var l=i.length,c=n.extra,h=o&&o.length,u=Wr(c);xt(t,e,s!=null?33639248:67324752),e+=4,s!=null&&(t[e++]=20,t[e++]=n.os),t[e]=20,e+=2,t[e++]=n.flag<<1|(a==null&&8),t[e++]=r&&8,t[e++]=n.compression&255,t[e++]=n.compression>>8;var f=new Date(n.mtime==null?Date.now():n.mtime),d=f.getFullYear()-1980;if(d<0||d>119)throw"date not in range 1980-2099";if(xt(t,e,d<<25|f.getMonth()+1<<21|f.getDate()<<16|f.getHours()<<11|f.getMinutes()<<5|f.getSeconds()>>>1),e+=4,a!=null&&(xt(t,e,n.crc),xt(t,e+4,a),xt(t,e+8,n.size)),xt(t,e+12,l),xt(t,e+14,u),e+=16,s!=null&&(xt(t,e,h),xt(t,e+6,n.attrs),xt(t,e+10,s),e+=14),t.set(i,e),e+=l,u)for(var p in c){var m=c[p],x=m.length;xt(t,e,+p),xt(t,e+2,x),t.set(m,e+4),e+=4+x}return h&&(t.set(o,e),e+=h),e},tm=function(t,e,n,i,r){xt(t,e,101010256),xt(t,e+8,n),xt(t,e+10,n),xt(t,e+12,i),xt(t,e+16,r)},nc=function(){function t(e){this.filename=e,this.c=Ks(),this.size=0,this.compression=0}return t.prototype.process=function(e,n){this.ondata(null,e,n)},t.prototype.push=function(e,n){if(!this.ondata)throw"no callback - add to ZIP archive before pushing";this.c.p(e),this.size+=e.length,n&&(this.crc=this.c.d()),this.process(e,n||!1)},t}(),w3=function(){function t(e,n){var i=this;n||(n={}),nc.call(this,e),this.d=new Ii(n,function(r,a){i.ondata(null,r,a)}),this.compression=8,this.flag=d0(n.level)}return t.prototype.process=function(e,n){try{this.d.push(e,n)}catch(i){this.ondata(i,null,n)}},t.prototype.push=function(e,n){nc.prototype.push.call(this,e,n)},t}(),b3=function(){function t(e,n){var i=this;n||(n={}),nc.call(this,e),this.d=new t0(n,function(r,a,s){i.ondata(r,a,s)}),this.compression=8,this.flag=d0(n.level),this.terminate=this.d.terminate}return t.prototype.process=function(e,n){this.d.push(e,n)},t.prototype.push=function(e,n){nc.prototype.push.call(this,e,n)},t}(),S3=function(){function t(e){this.ondata=e,this.u=[],this.d=1}return t.prototype.add=function(e){var n=this;if(this.d&2)throw"stream finished";var i=kr(e.filename),r=i.length,a=e.comment,s=a&&kr(a),o=r!=e.filename.length||s&&a.length!=s.length,l=r+Wr(e.extra)+30;if(r>65535)throw"filename too long";var c=new dt(l);ro(c,0,e,i,o);var h=[c],u=function(){for(var x=0,g=h;x<g.length;x++){var v=g[x];n.ondata(null,v,!1)}h=[]},f=this.d;this.d=0;var d=this.u.length,p=Ql(e,{f:i,u:o,o:s,t:function(){e.terminate&&e.terminate()},r:function(){if(u(),f){var x=n.u[d+1];x?x.r():n.d=1}f=1}}),m=0;e.ondata=function(x,g,v){if(x)n.ondata(x,g,v),n.terminate();else if(m+=g.length,h.push(g),v){var b=new dt(16);xt(b,0,134695760),xt(b,4,e.crc),xt(b,8,m),xt(b,12,e.size),h.push(b),p.c=m,p.b=l+m+16,p.crc=e.crc,p.size=e.size,f&&p.r(),f=1}else f&&u()},this.u.push(p)},t.prototype.end=function(){var e=this;if(this.d&2)throw this.d&1?"stream finishing":"stream finished";this.d?this.e():this.u.push({r:function(){!(e.d&1)||(e.u.splice(-1,1),e.e())},t:function(){}}),this.d=3},t.prototype.e=function(){for(var e=0,n=0,i=0,r=0,a=this.u;r<a.length;r++){var s=a[r];i+=46+s.f.length+Wr(s.extra)+(s.o?s.o.length:0)}for(var o=new dt(i+22),l=0,c=this.u;l<c.length;l++){var s=c[l];ro(o,e,s,s.f,s.u,s.c,n,s.o),e+=46+s.f.length+Wr(s.extra)+(s.o?s.o.length:0),n+=s.b}tm(o,e,this.u.length,i,n),this.ondata(null,o,!0),this.d=2},t.prototype.terminate=function(){for(var e=0,n=this.u;e<n.length;e++){var i=n[e];i.t()}this.d=2},t}();function E3(t,e,n){if(n||(n=e,e={}),typeof n!="function")throw"no callback";var i={};Kp(t,"",i,e);var r=Object.keys(i),a=r.length,s=0,o=0,l=a,c=new Array(a),h=[],u=function(){for(var m=0;m<h.length;++m)h[m]()},f=function(){var m=new dt(o+22),x=s,g=o-s;o=0;for(var v=0;v<l;++v){var b=c[v];try{var _=b.c.length;ro(m,o,b,b.f,b.u,_);var M=30+b.f.length+Wr(b.extra),y=o+M;m.set(b.c,y),ro(m,s,b,b.f,b.u,_,o,b.m),s+=16+M+(b.m?b.m.length:0),o=y+_}catch(w){return n(w,null)}}tm(m,s,c.length,g,x),n(null,m)};a||f();for(var d=function(m){var x=r[m],g=i[x],v=g[0],b=g[1],_=Ks(),M=v.length;_.p(v);var y=kr(x),w=y.length,E=b.comment,A=E&&kr(E),L=A&&A.length,S=Wr(b.extra),R=b.level==0?0:8,D=function(I,F){if(I)u(),n(I,null);else{var U=F.length;c[m]=Ql(b,{size:M,crc:_.d(),c:F,f:y,m:A,u:w!=x.length||A&&E.length!=L,compression:R}),s+=30+w+S+U,o+=76+2*(w+S)+(L||0)+U,--a||f()}};if(w>65535&&D("filename too long",null),!R)D(null,v);else if(M<16e4)try{D(null,ec(v,b))}catch(I){D(I,null)}else h.push(n0(v,b,D))},p=0;p<l;++p)d(p);return u}function T3(t,e){e||(e={});var n={},i=[];Kp(t,"",n,e);var r=0,a=0;for(var s in n){var o=n[s],l=o[0],c=o[1],h=c.level==0?0:8,u=kr(s),f=u.length,d=c.comment,p=d&&kr(d),m=p&&p.length,x=Wr(c.extra);if(f>65535)throw"filename too long";var g=h?ec(l,c):l,v=g.length,b=Ks();b.p(l),i.push(Ql(c,{size:l.length,crc:b.d(),c:g,f:u,m:p,u:f!=s.length||p&&d.length!=m,o:r,compression:h})),r+=30+f+x+v,a+=76+2*(f+x)+(m||0)+v}for(var _=new dt(a+22),M=r,y=a-r,w=0;w<i.length;++w){var u=i[w];ro(_,u.o,u,u.f,u.u,u.c.length);var E=30+u.f.length+Wr(u.extra);_.set(u.c,u.o+E),ro(_,r,u,u.f,u.u,u.c.length,u.o,u.m),r+=16+E+(u.m?u.m.length:0)}return tm(_,r,i.length,y,M),_}var v0=function(){function t(){}return t.prototype.push=function(e,n){this.ondata(null,e,n)},t.compression=0,t}(),A3=function(){function t(){var e=this;this.i=new Fn(function(n,i){e.ondata(null,n,i)})}return t.prototype.push=function(e,n){try{this.i.push(e,n)}catch(i){this.ondata(i,e,n)}},t.compression=8,t}(),L3=function(){function t(e,n){var i=this;n<32e4?this.i=new Fn(function(r,a){i.ondata(null,r,a)}):(this.i=new qp(function(r,a,s){i.ondata(r,a,s)}),this.terminate=this.i.terminate)}return t.prototype.push=function(e,n){this.i.terminate&&(e=ti(e,0)),this.i.push(e,n)},t.compression=8,t}(),C3=function(){function t(e){this.onfile=e,this.k=[],this.o={0:v0},this.p=ir}return t.prototype.push=function(e,n){var i=this;if(!this.onfile)throw"no callback";if(!this.p)throw"stream finished";if(this.c>0){var r=Math.min(this.c,e.length),a=e.subarray(0,r);if(this.c-=r,this.d?this.d.push(a,!this.c):this.k[0].push(a),e=e.subarray(r),e.length)return this.push(e,n)}else{var s=0,o=0,l=void 0,c=void 0;this.p.length?e.length?(c=new dt(this.p.length+e.length),c.set(this.p),c.set(e,this.p.length)):c=this.p:c=e;for(var h=c.length,u=this.c,f=u&&this.d,d=function(){var g,v=kt(c,o);if(v==67324752){s=1,l=o,p.d=null,p.c=0;var b=Cn(c,o+6),_=Cn(c,o+8),M=b&2048,y=b&8,w=Cn(c,o+26),E=Cn(c,o+28);if(h>o+30+w+E){var A=[];p.k.unshift(A),s=2;var L=kt(c,o+18),S=kt(c,o+22),R=em(c.subarray(o+30,o+=30+w),!M);L==4294967295?(g=y?[-2]:g0(c,o),L=g[0],S=g[1]):y&&(L=-1),o+=E,p.c=L;var D,I={name:R,compression:_,start:function(){if(!I.ondata)throw"no callback";if(!L)I.ondata(null,ir,!0);else{var F=i.o[_];if(!F)throw"unknown compression type "+_;D=L<0?new F(R):new F(R,L,S),D.ondata=function(K,X,q){I.ondata(K,X,q)};for(var U=0,j=A;U<j.length;U++){var Y=j[U];D.push(Y,!1)}i.k[0]==A&&i.c?i.d=D:D.push(ir,!0)}},terminate:function(){D&&D.terminate&&D.terminate()}};L>=0&&(I.size=L,I.originalSize=S),p.onfile(I)}return"break"}else if(u){if(v==134695760)return l=o+=12+(u==-2&&8),s=3,p.c=0,"break";if(v==33639248)return l=o-=4,s=3,p.c=0,"break"}},p=this;o<h-4;++o){var m=d();if(m==="break")break}if(this.p=ir,u<0){var x=s?c.subarray(0,l-12-(u==-2&&8)-(kt(c,l-16)==134695760&&4)):c.subarray(0,o);f?f.push(x,!!s):this.k[+(s==2)].push(x)}if(s&2)return this.push(c.subarray(o),n);this.p=c.subarray(o)}if(n){if(this.c)throw"invalid zip file";this.p=null}},t.prototype.register=function(e){this.o[e.compression]=e},t}();function R3(t,e){if(typeof e!="function")throw"no callback";for(var n=[],i=function(){for(var f=0;f<n.length;++f)n[f]()},r={},a=t.length-22;kt(t,a)!=101010256;--a)if(!a||t.length-a>65558){e("invalid zip file",null);return}var s=Cn(t,a+8);s||e(null,{});var o=s,l=kt(t,a+16),c=l==4294967295;if(c){if(a=kt(t,a-12),kt(t,a)!=101075792){e("invalid zip file",null);return}o=s=kt(t,a+32),l=kt(t,a+48)}for(var h=function(f){var d=m0(t,l,c),p=d[0],m=d[1],x=d[2],g=d[3],v=d[4],b=d[5],_=p0(t,b);l=v;var M=function(w,E){w?(i(),e(w,null)):(r[g]=E,--s||e(null,r))};if(!p)M(null,ti(t,_,_+m));else if(p==8){var y=t.subarray(_,_+m);if(m<32e4)try{M(null,io(y,new dt(x)))}catch(w){M(w,null)}else n.push(Yp(y,{size:x},M))}else M("unknown compression type "+p,null)},u=0;u<o;++u)h();return i}function P3(t){for(var e={},n=t.length-22;kt(t,n)!=101010256;--n)if(!n||t.length-n>65558)throw"invalid zip file";var i=Cn(t,n+8);if(!i)return{};var r=kt(t,n+16),a=r==4294967295;if(a){if(n=kt(t,n-12),kt(t,n)!=101075792)throw"invalid zip file";i=kt(t,n+32),r=kt(t,n+48)}for(var s=0;s<i;++s){var o=m0(t,r,a),l=o[0],c=o[1],h=o[2],u=o[3],f=o[4],d=o[5],p=p0(t,d);if(r=f,!l)e[u]=ti(t,p,p+c);else if(l==8)e[u]=io(t.subarray(p,p+c),new dt(h));else throw"unknown compression type "+l}return e}var D3=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",Deflate:Ii,AsyncDeflate:t0,deflate:n0,deflateSync:ec,Inflate:Fn,AsyncInflate:qp,inflate:Yp,inflateSync:io,Gzip:Tu,AsyncGzip:i0,gzip:r0,gzipSync:Au,Gunzip:Lu,AsyncGunzip:a0,gunzip:s0,gunzipSync:Cu,Zlib:Zp,AsyncZlib:m3,zlib:g3,zlibSync:Jp,Unzlib:Ru,AsyncUnzlib:o0,unzlib:l0,unzlibSync:tc,compress:r0,AsyncCompress:i0,compressSync:Au,Compress:Tu,Decompress:c0,AsyncDecompress:v3,decompress:y3,decompressSync:x3,DecodeUTF8:_3,EncodeUTF8:M3,strToU8:kr,strFromU8:em,ZipPassThrough:nc,ZipDeflate:w3,AsyncZipDeflate:b3,Zip:S3,zip:E3,zipSync:T3,UnzipPassThrough:v0,UnzipInflate:A3,AsyncUnzipInflate:L3,Unzip:C3,unzip:R3,unzipSync:P3});function y0(t,e,n){const i=n.length-t-1;if(e>=n[i])return i-1;if(e<=n[t])return t;let r=t,a=i,s=Math.floor((r+a)/2);for(;e<n[s]||e>=n[s+1];)e<n[s]?a=s:r=s,s=Math.floor((r+a)/2);return s}function I3(t,e,n,i){const r=[],a=[],s=[];r[0]=1;for(let o=1;o<=n;++o){a[o]=e-i[t+1-o],s[o]=i[t+o]-e;let l=0;for(let c=0;c<o;++c){const h=s[c+1],u=a[o-c],f=r[c]/(h+u);r[c]=l+h*f,l=u*f}r[o]=l}return r}function F3(t,e,n,i){const r=y0(t,i,e),a=I3(r,i,t,e),s=new yt(0,0,0,0);for(let o=0;o<=t;++o){const l=n[r-t+o],c=a[o],h=l.w*c;s.x+=l.x*h,s.y+=l.y*h,s.z+=l.z*h,s.w+=l.w*c}return s}function B3(t,e,n,i,r){const a=[];for(let u=0;u<=n;++u)a[u]=0;const s=[];for(let u=0;u<=i;++u)s[u]=a.slice(0);const o=[];for(let u=0;u<=n;++u)o[u]=a.slice(0);o[0][0]=1;const l=a.slice(0),c=a.slice(0);for(let u=1;u<=n;++u){l[u]=e-r[t+1-u],c[u]=r[t+u]-e;let f=0;for(let d=0;d<u;++d){const p=c[d+1],m=l[u-d];o[u][d]=p+m;const x=o[d][u-1]/o[u][d];o[d][u]=f+p*x,f=m*x}o[u][u]=f}for(let u=0;u<=n;++u)s[0][u]=o[u][n];for(let u=0;u<=n;++u){let f=0,d=1;const p=[];for(let m=0;m<=n;++m)p[m]=a.slice(0);p[0][0]=1;for(let m=1;m<=i;++m){let x=0;const g=u-m,v=n-m;u>=m&&(p[d][0]=p[f][0]/o[v+1][g],x=p[d][0]*o[g][v]);const b=g>=-1?1:-g,_=u-1<=v?m-1:n-u;for(let y=b;y<=_;++y)p[d][y]=(p[f][y]-p[f][y-1])/o[v+1][g+y],x+=p[d][y]*o[g+y][v];u<=v&&(p[d][m]=-p[f][m-1]/o[v+1][u],x+=p[d][m]*o[u][v]),s[m][u]=x;const M=f;f=d,d=M}}let h=n;for(let u=1;u<=i;++u){for(let f=0;f<=n;++f)s[u][f]*=h;h*=n-u}return s}function O3(t,e,n,i,r){const a=r<t?r:t,s=[],o=y0(t,i,e),l=B3(o,i,t,a,e),c=[];for(let h=0;h<n.length;++h){const u=n[h].clone(),f=u.w;u.x*=f,u.y*=f,u.z*=f,c[h]=u}for(let h=0;h<=a;++h){const u=c[o-t].clone().multiplyScalar(l[h][0]);for(let f=1;f<=t;++f)u.add(c[o-t+f].clone().multiplyScalar(l[h][f]));s[h]=u}for(let h=a+1;h<=r+1;++h)s[h]=new yt(0,0,0);return s}function N3(t,e){let n=1;for(let r=2;r<=t;++r)n*=r;let i=1;for(let r=2;r<=e;++r)i*=r;for(let r=2;r<=t-e;++r)i*=r;return n/i}function z3(t){const e=t.length,n=[],i=[];for(let a=0;a<e;++a){const s=t[a];n[a]=new k(s.x,s.y,s.z),i[a]=s.w}const r=[];for(let a=0;a<e;++a){const s=n[a].clone();for(let o=1;o<=a;++o)s.sub(r[a-o].clone().multiplyScalar(N3(a,o)*i[o]));r[a]=s.divideScalar(i[0])}return r}function U3(t,e,n,i,r){const a=O3(t,e,n,i,r);return z3(a)}class x0 extends Vn{constructor(e,n,i,r,a){super();this.degree=e,this.knots=n,this.controlPoints=[],this.startKnot=r||0,this.endKnot=a||this.knots.length-1;for(let s=0;s<i.length;++s){const o=i[s];this.controlPoints[s]=new yt(o.x,o.y,o.z,o.w)}}getPoint(e,n=new k){const i=n,r=this.knots[this.startKnot]+e*(this.knots[this.endKnot]-this.knots[this.startKnot]),a=F3(this.degree,this.knots,this.controlPoints,r);return a.w!==1&&a.divideScalar(a.w),i.set(a.x,a.y,a.z)}getTangent(e,n=new k){const i=n,r=this.knots[0]+e*(this.knots[this.knots.length-1]-this.knots[0]),a=U3(this.degree,this.knots,this.controlPoints,r,1);return i.copy(a[1]).normalize(),i}}let ft,Wt,Bn;class xF extends Qi{constructor(e){super(e)}load(e,n,i,r){const a=this,s=a.path===""?vu.extractUrlBase(e):a.path,o=new yx(this.manager);o.setPath(a.path),o.setResponseType("arraybuffer"),o.setRequestHeader(a.requestHeader),o.setWithCredentials(a.withCredentials),o.load(e,function(l){try{n(a.parse(l,s))}catch(c){r?r(c):console.error(c),a.manager.itemError(e)}},i,r)}parse(e,n){if($3(e))ft=new W3().parse(e);else{const r=E0(e);if(!j3(r))throw new Error("THREE.FBXLoader: Unknown format.");if(w0(r)<7e3)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+w0(r));ft=new k3().parse(r)}const i=new _x(this.manager).setPath(this.resourcePath||n).setCrossOrigin(this.crossOrigin);return new G3(i,this.manager).parse(ft)}}class G3{constructor(e,n){this.textureLoader=e,this.manager=n}parse(){Wt=this.parseConnections();const e=this.parseImages(),n=this.parseTextures(e),i=this.parseMaterials(n),r=this.parseDeformers(),a=new H3().parse(r);return this.parseScene(r,a,i),Bn}parseConnections(){const e=new Map;return"Connections"in ft&&ft.Connections.connections.forEach(function(i){const r=i[0],a=i[1],s=i[2];e.has(r)||e.set(r,{parents:[],children:[]});const o={ID:a,relationship:s};e.get(r).parents.push(o),e.has(a)||e.set(a,{parents:[],children:[]});const l={ID:r,relationship:s};e.get(a).children.push(l)}),e}parseImages(){const e={},n={};if("Video"in ft.Objects){const i=ft.Objects.Video;for(const r in i){const a=i[r],s=parseInt(r);if(e[s]=a.RelativeFilename||a.Filename,"Content"in a){const o=a.Content instanceof ArrayBuffer&&a.Content.byteLength>0,l=typeof a.Content=="string"&&a.Content!=="";if(o||l){const c=this.parseImage(i[r]);n[a.RelativeFilename||a.Filename]=c}}}}for(const i in e){const r=e[i];n[r]!==void 0?e[i]=n[r]:e[i]=e[i].split("\\").pop()}return e}parseImage(e){const n=e.Content,i=e.RelativeFilename||e.Filename,r=i.slice(i.lastIndexOf(".")+1).toLowerCase();let a;switch(r){case"bmp":a="image/bmp";break;case"jpg":case"jpeg":a="image/jpeg";break;case"png":a="image/png";break;case"tif":a="image/tiff";break;case"tga":this.manager.getHandler(".tga")===null&&console.warn("FBXLoader: TGA loader not found, skipping ",i),a="image/tga";break;default:console.warn('FBXLoader: Image type "'+r+'" is not supported.');return}if(typeof n=="string")return"data:"+a+";base64,"+n;{const s=new Uint8Array(n);return window.URL.createObjectURL(new Blob([s],{type:a}))}}parseTextures(e){const n=new Map;if("Texture"in ft.Objects){const i=ft.Objects.Texture;for(const r in i){const a=this.parseTexture(i[r],e);n.set(parseInt(r),a)}}return n}parseTexture(e,n){const i=this.loadTexture(e,n);i.ID=e.id,i.name=e.attrName;const r=e.WrapModeU,a=e.WrapModeV,s=r!==void 0?r.value:0,o=a!==void 0?a.value:0;if(i.wrapS=s===0?_l:Sn,i.wrapT=o===0?_l:Sn,"Scaling"in e){const l=e.Scaling.value;i.repeat.x=l[0],i.repeat.y=l[1]}return i}loadTexture(e,n){let i;const r=this.textureLoader.path,a=Wt.get(e.id).children;a!==void 0&&a.length>0&&n[a[0].ID]!==void 0&&(i=n[a[0].ID],(i.indexOf("blob:")===0||i.indexOf("data:")===0)&&this.textureLoader.setPath(void 0));let s;const o=e.FileName.slice(-3).toLowerCase();if(o==="tga"){const l=this.manager.getHandler(".tga");l===null?(console.warn("FBXLoader: TGA loader not found, creating placeholder texture for",e.RelativeFilename),s=new Xt):(l.setPath(this.textureLoader.path),s=l.load(i))}else o==="psd"?(console.warn("FBXLoader: PSD textures are not supported, creating placeholder texture for",e.RelativeFilename),s=new Xt):s=this.textureLoader.load(i);return this.textureLoader.setPath(r),s}parseMaterials(e){const n=new Map;if("Material"in ft.Objects){const i=ft.Objects.Material;for(const r in i){const a=this.parseMaterial(i[r],e);a!==null&&n.set(parseInt(r),a)}}return n}parseMaterial(e,n){const i=e.id,r=e.attrName;let a=e.ShadingModel;if(typeof a=="object"&&(a=a.value),!Wt.has(i))return null;const s=this.parseParameters(e,n,i);let o;switch(a.toLowerCase()){case"phong":o=new gu;break;case"lambert":o=new mx;break;default:console.warn('THREE.FBXLoader: unknown material type "%s". Defaulting to MeshPhongMaterial.',a),o=new gu;break}return o.setValues(s),o.name=r,o}parseParameters(e,n,i){const r={};e.BumpFactor&&(r.bumpScale=e.BumpFactor.value),e.Diffuse?r.color=new We().fromArray(e.Diffuse.value):e.DiffuseColor&&(e.DiffuseColor.type==="Color"||e.DiffuseColor.type==="ColorRGB")&&(r.color=new We().fromArray(e.DiffuseColor.value)),e.DisplacementFactor&&(r.displacementScale=e.DisplacementFactor.value),e.Emissive?r.emissive=new We().fromArray(e.Emissive.value):e.EmissiveColor&&(e.EmissiveColor.type==="Color"||e.EmissiveColor.type==="ColorRGB")&&(r.emissive=new We().fromArray(e.EmissiveColor.value)),e.EmissiveFactor&&(r.emissiveIntensity=parseFloat(e.EmissiveFactor.value)),e.Opacity&&(r.opacity=parseFloat(e.Opacity.value)),r.opacity<1&&(r.transparent=!0),e.ReflectionFactor&&(r.reflectivity=e.ReflectionFactor.value),e.Shininess&&(r.shininess=e.Shininess.value),e.Specular?r.specular=new We().fromArray(e.Specular.value):e.SpecularColor&&e.SpecularColor.type==="Color"&&(r.specular=new We().fromArray(e.SpecularColor.value));const a=this;return Wt.get(i).children.forEach(function(s){const o=s.relationship;switch(o){case"Bump":r.bumpMap=a.getTexture(n,s.ID);break;case"Maya|TEX_ao_map":r.aoMap=a.getTexture(n,s.ID);break;case"DiffuseColor":case"Maya|TEX_color_map":r.map=a.getTexture(n,s.ID),r.map!==void 0&&(r.map.encoding=Mt);break;case"DisplacementColor":r.displacementMap=a.getTexture(n,s.ID);break;case"EmissiveColor":r.emissiveMap=a.getTexture(n,s.ID),r.emissiveMap!==void 0&&(r.emissiveMap.encoding=Mt);break;case"NormalMap":case"Maya|TEX_normal_map":r.normalMap=a.getTexture(n,s.ID);break;case"ReflectionColor":r.envMap=a.getTexture(n,s.ID),r.envMap!==void 0&&(r.envMap.mapping=Mh,r.envMap.encoding=Mt);break;case"SpecularColor":r.specularMap=a.getTexture(n,s.ID),r.specularMap!==void 0&&(r.specularMap.encoding=Mt);break;case"TransparentColor":case"TransparencyFactor":r.alphaMap=a.getTexture(n,s.ID),r.transparent=!0;break;case"AmbientColor":case"ShininessExponent":case"SpecularFactor":case"VectorDisplacementColor":default:console.warn("THREE.FBXLoader: %s map is not supported in three.js, skipping texture.",o);break}}),r}getTexture(e,n){return"LayeredTexture"in ft.Objects&&n in ft.Objects.LayeredTexture&&(console.warn("THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer."),n=Wt.get(n).children[0].ID),e.get(n)}parseDeformers(){const e={},n={};if("Deformer"in ft.Objects){const i=ft.Objects.Deformer;for(const r in i){const a=i[r],s=Wt.get(parseInt(r));if(a.attrType==="Skin"){const o=this.parseSkeleton(s,i);o.ID=r,s.parents.length>1&&console.warn("THREE.FBXLoader: skeleton attached to more than one geometry is not supported."),o.geometryID=s.parents[0].ID,e[r]=o}else if(a.attrType==="BlendShape"){const o={id:r};o.rawTargets=this.parseMorphTargets(s,i),o.id=r,s.parents.length>1&&console.warn("THREE.FBXLoader: morph target attached to more than one geometry is not supported."),n[r]=o}}}return{skeletons:e,morphTargets:n}}parseSkeleton(e,n){const i=[];return e.children.forEach(function(r){const a=n[r.ID];if(a.attrType!=="Cluster")return;const s={ID:r.ID,indices:[],weights:[],transformLink:new Fe().fromArray(a.TransformLink.a)};"Indexes"in a&&(s.indices=a.Indexes.a,s.weights=a.Weights.a),i.push(s)}),{rawBones:i,bones:[]}}parseMorphTargets(e,n){const i=[];for(let r=0;r<e.children.length;r++){const a=e.children[r],s=n[a.ID],o={name:s.attrName,initialWeight:s.DeformPercent,id:s.id,fullWeights:s.FullWeights.a};if(s.attrType!=="BlendShapeChannel")return;o.geoID=Wt.get(parseInt(a.ID)).children.filter(function(l){return l.relationship===void 0})[0].ID,i.push(o)}return i}parseScene(e,n,i){Bn=new pa;const r=this.parseModels(e.skeletons,n,i),a=ft.Objects.Model,s=this;r.forEach(function(l){const c=a[l.ID];s.setLookAtProperties(l,c),Wt.get(l.ID).parents.forEach(function(u){const f=r.get(u.ID);f!==void 0&&f.add(l)}),l.parent===null&&Bn.add(l)}),this.bindSkeleton(e.skeletons,n,r),this.createAmbientLight(),Bn.traverse(function(l){if(l.userData.transformData){l.parent&&(l.userData.transformData.parentMatrix=l.parent.matrix,l.userData.transformData.parentMatrixWorld=l.parent.matrixWorld);const c=b0(l.userData.transformData);l.applyMatrix4(c),l.updateWorldMatrix()}});const o=new V3().parse();Bn.children.length===1&&Bn.children[0].isGroup&&(Bn.children[0].animations=o,Bn=Bn.children[0]),Bn.animations=o}parseModels(e,n,i){const r=new Map,a=ft.Objects.Model;for(const s in a){const o=parseInt(s),l=a[s],c=Wt.get(o);let h=this.buildSkeleton(c,e,o,l.attrName);if(!h){switch(l.attrType){case"Camera":h=this.createCamera(c);break;case"Light":h=this.createLight(c);break;case"Mesh":h=this.createMesh(c,n,i);break;case"NurbsCurve":h=this.createCurve(c,n);break;case"LimbNode":case"Root":h=new ru;break;case"Null":default:h=new pa;break}h.name=l.attrName?mt.sanitizeNodeName(l.attrName):"",h.ID=o}this.getTransformData(h,l),r.set(o,h)}return r}buildSkeleton(e,n,i,r){let a=null;return e.parents.forEach(function(s){for(const o in n){const l=n[o];l.rawBones.forEach(function(c,h){if(c.ID===s.ID){const u=a;a=new ru,a.matrixWorld.copy(c.transformLink),a.name=r?mt.sanitizeNodeName(r):"",a.ID=i,l.bones[h]=a,u!==null&&a.add(u)}})}}),a}createCamera(e){let n,i;if(e.children.forEach(function(r){const a=ft.Objects.NodeAttribute[r.ID];a!==void 0&&(i=a)}),i===void 0)n=new gt;else{let r=0;i.CameraProjectionType!==void 0&&i.CameraProjectionType.value===1&&(r=1);let a=1;i.NearPlane!==void 0&&(a=i.NearPlane.value/1e3);let s=1e3;i.FarPlane!==void 0&&(s=i.FarPlane.value/1e3);let o=window.innerWidth,l=window.innerHeight;i.AspectWidth!==void 0&&i.AspectHeight!==void 0&&(o=i.AspectWidth.value,l=i.AspectHeight.value);const c=o/l;let h=45;i.FieldOfView!==void 0&&(h=i.FieldOfView.value);const u=i.FocalLength?i.FocalLength.value:null;switch(r){case 0:n=new An(h,c,a,s),u!==null&&n.setFocalLength(u);break;case 1:n=new Zh(-o/2,o/2,l/2,-l/2,a,s);break;default:console.warn("THREE.FBXLoader: Unknown camera type "+r+"."),n=new gt;break}}return n}createLight(e){let n,i;if(e.children.forEach(function(r){const a=ft.Objects.NodeAttribute[r.ID];a!==void 0&&(i=a)}),i===void 0)n=new gt;else{let r;i.LightType===void 0?r=0:r=i.LightType.value;let a=16777215;i.Color!==void 0&&(a=new We().fromArray(i.Color.value));let s=i.Intensity===void 0?1:i.Intensity.value/100;i.CastLightOnObject!==void 0&&i.CastLightOnObject.value===0&&(s=0);let o=0;i.FarAttenuationEnd!==void 0&&(i.EnableFarAttenuation!==void 0&&i.EnableFarAttenuation.value===0?o=0:o=i.FarAttenuationEnd.value);const l=1;switch(r){case 0:n=new Rp(a,s,o,l);break;case 1:n=new Cx(a,s);break;case 2:let c=Math.PI/3;i.InnerAngle!==void 0&&(c=Ai.degToRad(i.InnerAngle.value));let h=0;i.OuterAngle!==void 0&&(h=Ai.degToRad(i.OuterAngle.value),h=Math.max(h,1)),n=new Ex(a,s,o,c,h,l);break;default:console.warn("THREE.FBXLoader: Unknown light type "+i.LightType.value+", defaulting to a PointLight."),n=new Rp(a,s);break}i.CastShadows!==void 0&&i.CastShadows.value===1&&(n.castShadow=!0)}return n}createMesh(e,n,i){let r,a=null,s=null;const o=[];return e.children.forEach(function(l){n.has(l.ID)&&(a=n.get(l.ID)),i.has(l.ID)&&o.push(i.get(l.ID))}),o.length>1?s=o:o.length>0?s=o[0]:(s=new gu({color:13421772}),o.push(s)),"color"in a.attributes&&o.forEach(function(l){l.vertexColors=!0}),a.FBX_Deformer?(r=new hp(a,s),r.normalizeSkinWeights()):r=new Tn(a,s),r}createCurve(e,n){const i=e.children.reduce(function(a,s){return n.has(s.ID)&&(a=n.get(s.ID)),a},null),r=new Gs({color:3342591,linewidth:1});return new ou(i,r)}getTransformData(e,n){const i={};"InheritType"in n&&(i.inheritType=parseInt(n.InheritType.value)),"RotationOrder"in n?i.eulerOrder=S0(n.RotationOrder.value):i.eulerOrder="ZYX","Lcl_Translation"in n&&(i.translation=n.Lcl_Translation.value),"PreRotation"in n&&(i.preRotation=n.PreRotation.value),"Lcl_Rotation"in n&&(i.rotation=n.Lcl_Rotation.value),"PostRotation"in n&&(i.postRotation=n.PostRotation.value),"Lcl_Scaling"in n&&(i.scale=n.Lcl_Scaling.value),"ScalingOffset"in n&&(i.scalingOffset=n.ScalingOffset.value),"ScalingPivot"in n&&(i.scalingPivot=n.ScalingPivot.value),"RotationOffset"in n&&(i.rotationOffset=n.RotationOffset.value),"RotationPivot"in n&&(i.rotationPivot=n.RotationPivot.value),e.userData.transformData=i}setLookAtProperties(e,n){"LookAtProperty"in n&&Wt.get(e.ID).children.forEach(function(r){if(r.relationship==="LookAtProperty"){const a=ft.Objects.Model[r.ID];if("Lcl_Translation"in a){const s=a.Lcl_Translation.value;e.target!==void 0?(e.target.position.fromArray(s),Bn.add(e.target)):e.lookAt(new k().fromArray(s))}}})}bindSkeleton(e,n,i){const r=this.parsePoseNodes();for(const a in e){const s=e[a];Wt.get(parseInt(s.ID)).parents.forEach(function(l){if(n.has(l.ID)){const c=l.ID;Wt.get(c).parents.forEach(function(u){i.has(u.ID)&&i.get(u.ID).bind(new up(s.bones),r[u.ID])})}})}}parsePoseNodes(){const e={};if("Pose"in ft.Objects){const n=ft.Objects.Pose;for(const i in n)if(n[i].attrType==="BindPose"&&n[i].NbPoseNodes>0){const r=n[i].PoseNode;Array.isArray(r)?r.forEach(function(a){e[a.Node]=new Fe().fromArray(a.Matrix.a)}):e[r.Node]=new Fe().fromArray(r.Matrix.a)}}return e}createAmbientLight(){if("GlobalSettings"in ft&&"AmbientColor"in ft.GlobalSettings){const e=ft.GlobalSettings.AmbientColor.value,n=e[0],i=e[1],r=e[2];if(n!==0||i!==0||r!==0){const a=new We(n,i,r);Bn.add(new Rx(a,1))}}}}class H3{parse(e){const n=new Map;if("Geometry"in ft.Objects){const i=ft.Objects.Geometry;for(const r in i){const a=Wt.get(parseInt(r)),s=this.parseGeometry(a,i[r],e);n.set(parseInt(r),s)}}return n}parseGeometry(e,n,i){switch(n.attrType){case"Mesh":return this.parseMeshGeometry(e,n,i);case"NurbsCurve":return this.parseNurbsGeometry(n)}}parseMeshGeometry(e,n,i){const r=i.skeletons,a=[],s=e.parents.map(function(u){return ft.Objects.Model[u.ID]});if(s.length===0)return;const o=e.children.reduce(function(u,f){return r[f.ID]!==void 0&&(u=r[f.ID]),u},null);e.children.forEach(function(u){i.morphTargets[u.ID]!==void 0&&a.push(i.morphTargets[u.ID])});const l=s[0],c={};"RotationOrder"in l&&(c.eulerOrder=S0(l.RotationOrder.value)),"InheritType"in l&&(c.inheritType=parseInt(l.InheritType.value)),"GeometricTranslation"in l&&(c.translation=l.GeometricTranslation.value),"GeometricRotation"in l&&(c.rotation=l.GeometricRotation.value),"GeometricScaling"in l&&(c.scale=l.GeometricScaling.value);const h=b0(c);return this.genGeometry(n,o,a,h)}genGeometry(e,n,i,r){const a=new wt;e.attrName&&(a.name=e.attrName);const s=this.parseGeoNode(e,n),o=this.genBuffers(s),l=new Dt(o.vertex,3);if(l.applyMatrix4(r),a.setAttribute("position",l),o.colors.length>0&&a.setAttribute("color",new Dt(o.colors,3)),n&&(a.setAttribute("skinIndex",new Wd(o.weightsIndices,4)),a.setAttribute("skinWeight",new Dt(o.vertexWeights,4)),a.FBX_Deformer=n),o.normal.length>0){const c=new an().getNormalMatrix(r),h=new Dt(o.normal,3);h.applyNormalMatrix(c),a.setAttribute("normal",h)}if(o.uvs.forEach(function(c,h){let u="uv"+(h+1).toString();h===0&&(u="uv"),a.setAttribute(u,new Dt(o.uvs[h],2))}),s.material&&s.material.mappingType!=="AllSame"){let c=o.materialIndex[0],h=0;if(o.materialIndex.forEach(function(u,f){u!==c&&(a.addGroup(h,f-h,c),c=u,h=f)}),a.groups.length>0){const u=a.groups[a.groups.length-1],f=u.start+u.count;f!==o.materialIndex.length&&a.addGroup(f,o.materialIndex.length-f,c)}a.groups.length===0&&a.addGroup(0,o.materialIndex.length,o.materialIndex[0])}return this.addMorphTargets(a,e,i,r),a}parseGeoNode(e,n){const i={};if(i.vertexPositions=e.Vertices!==void 0?e.Vertices.a:[],i.vertexIndices=e.PolygonVertexIndex!==void 0?e.PolygonVertexIndex.a:[],e.LayerElementColor&&(i.color=this.parseVertexColors(e.LayerElementColor[0])),e.LayerElementMaterial&&(i.material=this.parseMaterialIndices(e.LayerElementMaterial[0])),e.LayerElementNormal&&(i.normal=this.parseNormals(e.LayerElementNormal[0])),e.LayerElementUV){i.uv=[];let r=0;for(;e.LayerElementUV[r];)e.LayerElementUV[r].UV&&i.uv.push(this.parseUVs(e.LayerElementUV[r])),r++}return i.weightTable={},n!==null&&(i.skeleton=n,n.rawBones.forEach(function(r,a){r.indices.forEach(function(s,o){i.weightTable[s]===void 0&&(i.weightTable[s]=[]),i.weightTable[s].push({id:a,weight:r.weights[o]})})})),i}genBuffers(e){const n={vertex:[],normal:[],colors:[],uvs:[],materialIndex:[],vertexWeights:[],weightsIndices:[]};let i=0,r=0,a=!1,s=[],o=[],l=[],c=[],h=[],u=[];const f=this;return e.vertexIndices.forEach(function(d,p){let m,x=!1;d<0&&(d=d^-1,x=!0);let g=[],v=[];if(s.push(d*3,d*3+1,d*3+2),e.color){const b=Pu(p,i,d,e.color);l.push(b[0],b[1],b[2])}if(e.skeleton){if(e.weightTable[d]!==void 0&&e.weightTable[d].forEach(function(b){v.push(b.weight),g.push(b.id)}),v.length>4){a||(console.warn("THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights."),a=!0);const b=[0,0,0,0],_=[0,0,0,0];v.forEach(function(M,y){let w=M,E=g[y];_.forEach(function(A,L,S){if(w>A){S[L]=w,w=A;const R=b[L];b[L]=E,E=R}})}),g=b,v=_}for(;v.length<4;)v.push(0),g.push(0);for(let b=0;b<4;++b)h.push(v[b]),u.push(g[b])}if(e.normal){const b=Pu(p,i,d,e.normal);o.push(b[0],b[1],b[2])}e.material&&e.material.mappingType!=="AllSame"&&(m=Pu(p,i,d,e.material)[0]),e.uv&&e.uv.forEach(function(b,_){const M=Pu(p,i,d,b);c[_]===void 0&&(c[_]=[]),c[_].push(M[0]),c[_].push(M[1])}),r++,x&&(f.genFace(n,e,s,m,o,l,c,h,u,r),i++,r=0,s=[],o=[],l=[],c=[],h=[],u=[])}),n}genFace(e,n,i,r,a,s,o,l,c,h){for(let u=2;u<h;u++)e.vertex.push(n.vertexPositions[i[0]]),e.vertex.push(n.vertexPositions[i[1]]),e.vertex.push(n.vertexPositions[i[2]]),e.vertex.push(n.vertexPositions[i[(u-1)*3]]),e.vertex.push(n.vertexPositions[i[(u-1)*3+1]]),e.vertex.push(n.vertexPositions[i[(u-1)*3+2]]),e.vertex.push(n.vertexPositions[i[u*3]]),e.vertex.push(n.vertexPositions[i[u*3+1]]),e.vertex.push(n.vertexPositions[i[u*3+2]]),n.skeleton&&(e.vertexWeights.push(l[0]),e.vertexWeights.push(l[1]),e.vertexWeights.push(l[2]),e.vertexWeights.push(l[3]),e.vertexWeights.push(l[(u-1)*4]),e.vertexWeights.push(l[(u-1)*4+1]),e.vertexWeights.push(l[(u-1)*4+2]),e.vertexWeights.push(l[(u-1)*4+3]),e.vertexWeights.push(l[u*4]),e.vertexWeights.push(l[u*4+1]),e.vertexWeights.push(l[u*4+2]),e.vertexWeights.push(l[u*4+3]),e.weightsIndices.push(c[0]),e.weightsIndices.push(c[1]),e.weightsIndices.push(c[2]),e.weightsIndices.push(c[3]),e.weightsIndices.push(c[(u-1)*4]),e.weightsIndices.push(c[(u-1)*4+1]),e.weightsIndices.push(c[(u-1)*4+2]),e.weightsIndices.push(c[(u-1)*4+3]),e.weightsIndices.push(c[u*4]),e.weightsIndices.push(c[u*4+1]),e.weightsIndices.push(c[u*4+2]),e.weightsIndices.push(c[u*4+3])),n.color&&(e.colors.push(s[0]),e.colors.push(s[1]),e.colors.push(s[2]),e.colors.push(s[(u-1)*3]),e.colors.push(s[(u-1)*3+1]),e.colors.push(s[(u-1)*3+2]),e.colors.push(s[u*3]),e.colors.push(s[u*3+1]),e.colors.push(s[u*3+2])),n.material&&n.material.mappingType!=="AllSame"&&(e.materialIndex.push(r),e.materialIndex.push(r),e.materialIndex.push(r)),n.normal&&(e.normal.push(a[0]),e.normal.push(a[1]),e.normal.push(a[2]),e.normal.push(a[(u-1)*3]),e.normal.push(a[(u-1)*3+1]),e.normal.push(a[(u-1)*3+2]),e.normal.push(a[u*3]),e.normal.push(a[u*3+1]),e.normal.push(a[u*3+2])),n.uv&&n.uv.forEach(function(f,d){e.uvs[d]===void 0&&(e.uvs[d]=[]),e.uvs[d].push(o[d][0]),e.uvs[d].push(o[d][1]),e.uvs[d].push(o[d][(u-1)*2]),e.uvs[d].push(o[d][(u-1)*2+1]),e.uvs[d].push(o[d][u*2]),e.uvs[d].push(o[d][u*2+1])})}addMorphTargets(e,n,i,r){if(i.length===0)return;e.morphTargetsRelative=!0,e.morphAttributes.position=[];const a=this;i.forEach(function(s){s.rawTargets.forEach(function(o){const l=ft.Objects.Geometry[o.geoID];l!==void 0&&a.genMorphGeometry(e,n,l,r,o.name)})})}genMorphGeometry(e,n,i,r,a){const s=n.PolygonVertexIndex!==void 0?n.PolygonVertexIndex.a:[],o=i.Vertices!==void 0?i.Vertices.a:[],l=i.Indexes!==void 0?i.Indexes.a:[],c=e.attributes.position.count*3,h=new Float32Array(c);for(let p=0;p<l.length;p++){const m=l[p]*3;h[m]=o[p*3],h[m+1]=o[p*3+1],h[m+2]=o[p*3+2]}const u={vertexIndices:s,vertexPositions:h},f=this.genBuffers(u),d=new Dt(f.vertex,3);d.name=a||i.attrName,d.applyMatrix4(r),e.morphAttributes.position.push(d)}parseNormals(e){const n=e.MappingInformationType,i=e.ReferenceInformationType,r=e.Normals.a;let a=[];return i==="IndexToDirect"&&("NormalIndex"in e?a=e.NormalIndex.a:"NormalsIndex"in e&&(a=e.NormalsIndex.a)),{dataSize:3,buffer:r,indices:a,mappingType:n,referenceType:i}}parseUVs(e){const n=e.MappingInformationType,i=e.ReferenceInformationType,r=e.UV.a;let a=[];return i==="IndexToDirect"&&(a=e.UVIndex.a),{dataSize:2,buffer:r,indices:a,mappingType:n,referenceType:i}}parseVertexColors(e){const n=e.MappingInformationType,i=e.ReferenceInformationType,r=e.Colors.a;let a=[];return i==="IndexToDirect"&&(a=e.ColorIndex.a),{dataSize:4,buffer:r,indices:a,mappingType:n,referenceType:i}}parseMaterialIndices(e){const n=e.MappingInformationType,i=e.ReferenceInformationType;if(n==="NoMappingInformation")return{dataSize:1,buffer:[0],indices:[0],mappingType:"AllSame",referenceType:i};const r=e.Materials.a,a=[];for(let s=0;s<r.length;++s)a.push(s);return{dataSize:1,buffer:r,indices:a,mappingType:n,referenceType:i}}parseNurbsGeometry(e){if(x0===void 0)return console.error("THREE.FBXLoader: The loader relies on NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry."),new wt;const n=parseInt(e.Order);if(isNaN(n))return console.error("THREE.FBXLoader: Invalid Order %s given for geometry ID: %s",e.Order,e.id),new wt;const i=n-1,r=e.KnotVector.a,a=[],s=e.Points.a;for(let u=0,f=s.length;u<f;u+=4)a.push(new yt().fromArray(s,u));let o,l;if(e.Form==="Closed")a.push(a[0]);else if(e.Form==="Periodic"){o=i,l=r.length-1-o;for(let u=0;u<i;++u)a.push(a[u])}const h=new x0(i,r,a,o,l).getPoints(a.length*12);return new wt().setFromPoints(h)}}class V3{parse(){const e=[],n=this.parseClips();if(n!==void 0)for(const i in n){const r=n[i],a=this.addClip(r);e.push(a)}return e}parseClips(){if(ft.Objects.AnimationCurve===void 0)return;const e=this.parseAnimationCurveNodes();this.parseAnimationCurves(e);const n=this.parseAnimationLayers(e);return this.parseAnimStacks(n)}parseAnimationCurveNodes(){const e=ft.Objects.AnimationCurveNode,n=new Map;for(const i in e){const r=e[i];if(r.attrName.match(/S|R|T|DeformPercent/)!==null){const a={id:r.id,attr:r.attrName,curves:{}};n.set(a.id,a)}}return n}parseAnimationCurves(e){const n=ft.Objects.AnimationCurve;for(const i in n){const r={id:n[i].id,times:n[i].KeyTime.a.map(X3),values:n[i].KeyValueFloat.a},a=Wt.get(r.id);if(a!==void 0){const s=a.parents[0].ID,o=a.parents[0].relationship;o.match(/X/)?e.get(s).curves.x=r:o.match(/Y/)?e.get(s).curves.y=r:o.match(/Z/)?e.get(s).curves.z=r:o.match(/d|DeformPercent/)&&e.has(s)&&(e.get(s).curves.morph=r)}}}parseAnimationLayers(e){const n=ft.Objects.AnimationLayer,i=new Map;for(const r in n){const a=[],s=Wt.get(parseInt(r));s!==void 0&&(s.children.forEach(function(l,c){if(e.has(l.ID)){const h=e.get(l.ID);if(h.curves.x!==void 0||h.curves.y!==void 0||h.curves.z!==void 0){if(a[c]===void 0){const u=Wt.get(l.ID).parents.filter(function(f){return f.relationship!==void 0})[0].ID;if(u!==void 0){const f=ft.Objects.Model[u.toString()];if(f===void 0){console.warn("THREE.FBXLoader: Encountered a unused curve.",l);return}const d={modelName:f.attrName?mt.sanitizeNodeName(f.attrName):"",ID:f.id,initialPosition:[0,0,0],initialRotation:[0,0,0],initialScale:[1,1,1]};Bn.traverse(function(p){p.ID===f.id&&(d.transform=p.matrix,p.userData.transformData&&(d.eulerOrder=p.userData.transformData.eulerOrder))}),d.transform||(d.transform=new Fe),"PreRotation"in f&&(d.preRotation=f.PreRotation.value),"PostRotation"in f&&(d.postRotation=f.PostRotation.value),a[c]=d}}a[c]&&(a[c][h.attr]=h)}else if(h.curves.morph!==void 0){if(a[c]===void 0){const u=Wt.get(l.ID).parents.filter(function(g){return g.relationship!==void 0})[0].ID,f=Wt.get(u).parents[0].ID,d=Wt.get(f).parents[0].ID,p=Wt.get(d).parents[0].ID,m=ft.Objects.Model[p],x={modelName:m.attrName?mt.sanitizeNodeName(m.attrName):"",morphName:ft.Objects.Deformer[u].attrName};a[c]=x}a[c][h.attr]=h}}}),i.set(parseInt(r),a))}return i}parseAnimStacks(e){const n=ft.Objects.AnimationStack,i={};for(const r in n){const a=Wt.get(parseInt(r)).children;a.length>1&&console.warn("THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.");const s=e.get(a[0].ID);i[r]={name:n[r].attrName,layer:s}}return i}addClip(e){let n=[];const i=this;return e.layer.forEach(function(r){n=n.concat(i.generateTracks(r))}),new Ap(e.name,-1,n)}generateTracks(e){const n=[];let i=new k,r=new qt,a=new k;if(e.transform&&e.transform.decompose(i,r,a),i=i.toArray(),r=new ui().setFromQuaternion(r,e.eulerOrder).toArray(),a=a.toArray(),e.T!==void 0&&Object.keys(e.T.curves).length>0){const s=this.generateVectorTrack(e.modelName,e.T.curves,i,"position");s!==void 0&&n.push(s)}if(e.R!==void 0&&Object.keys(e.R.curves).length>0){const s=this.generateRotationTrack(e.modelName,e.R.curves,r,e.preRotation,e.postRotation,e.eulerOrder);s!==void 0&&n.push(s)}if(e.S!==void 0&&Object.keys(e.S.curves).length>0){const s=this.generateVectorTrack(e.modelName,e.S.curves,a,"scale");s!==void 0&&n.push(s)}if(e.DeformPercent!==void 0){const s=this.generateMorphTrack(e);s!==void 0&&n.push(s)}return n}generateVectorTrack(e,n,i,r){const a=this.getTimesForAllAxes(n),s=this.getKeyframeTrackValues(a,n,i);return new jl(e+"."+r,a,s)}generateRotationTrack(e,n,i,r,a,s){n.x!==void 0&&(this.interpolateRotations(n.x),n.x.values=n.x.values.map(Ai.degToRad)),n.y!==void 0&&(this.interpolateRotations(n.y),n.y.values=n.y.values.map(Ai.degToRad)),n.z!==void 0&&(this.interpolateRotations(n.z),n.z.values=n.z.values.map(Ai.degToRad));const o=this.getTimesForAllAxes(n),l=this.getKeyframeTrackValues(o,n,i);r!==void 0&&(r=r.map(Ai.degToRad),r.push(s),r=new ui().fromArray(r),r=new qt().setFromEuler(r)),a!==void 0&&(a=a.map(Ai.degToRad),a.push(s),a=new ui().fromArray(a),a=new qt().setFromEuler(a).invert());const c=new qt,h=new ui,u=[];for(let f=0;f<l.length;f+=3)h.set(l[f],l[f+1],l[f+2],s),c.setFromEuler(h),r!==void 0&&c.premultiply(r),a!==void 0&&c.multiply(a),c.toArray(u,f/3*4);return new Ws(e+".quaternion",o,u)}generateMorphTrack(e){const n=e.DeformPercent.curves.morph,i=n.values.map(function(a){return a/100}),r=Bn.getObjectByName(e.modelName).morphTargetDictionary[e.morphName];return new $l(e.modelName+".morphTargetInfluences["+r+"]",n.times,i)}getTimesForAllAxes(e){let n=[];if(e.x!==void 0&&(n=n.concat(e.x.times)),e.y!==void 0&&(n=n.concat(e.y.times)),e.z!==void 0&&(n=n.concat(e.z.times)),n=n.sort(function(i,r){return i-r}),n.length>1){let i=1,r=n[0];for(let a=1;a<n.length;a++){const s=n[a];s!==r&&(n[i]=s,r=s,i++)}n=n.slice(0,i)}return n}getKeyframeTrackValues(e,n,i){const r=i,a=[];let s=-1,o=-1,l=-1;return e.forEach(function(c){if(n.x&&(s=n.x.times.indexOf(c)),n.y&&(o=n.y.times.indexOf(c)),n.z&&(l=n.z.times.indexOf(c)),s!==-1){const h=n.x.values[s];a.push(h),r[0]=h}else a.push(r[0]);if(o!==-1){const h=n.y.values[o];a.push(h),r[1]=h}else a.push(r[1]);if(l!==-1){const h=n.z.values[l];a.push(h),r[2]=h}else a.push(r[2])}),a}interpolateRotations(e){for(let n=1;n<e.values.length;n++){const i=e.values[n-1],r=e.values[n]-i,a=Math.abs(r);if(a>=180){const s=a/180,o=r/s;let l=i+o;const c=e.times[n-1],u=(e.times[n]-c)/s;let f=c+u;const d=[],p=[];for(;f<e.times[n];)d.push(f),f+=u,p.push(l),l+=o;e.times=T0(e.times,n,d),e.values=T0(e.values,n,p)}}}}class k3{getPrevNode(){return this.nodeStack[this.currentIndent-2]}getCurrentNode(){return this.nodeStack[this.currentIndent-1]}getCurrentProp(){return this.currentProp}pushStack(e){this.nodeStack.push(e),this.currentIndent+=1}popStack(){this.nodeStack.pop(),this.currentIndent-=1}setCurrentProp(e,n){this.currentProp=e,this.currentPropName=n}parse(e){this.currentIndent=0,this.allNodes=new M0,this.nodeStack=[],this.currentProp=[],this.currentPropName="";const n=this,i=e.split(/[\r\n]+/);return i.forEach(function(r,a){const s=r.match(/^[\s\t]*;/),o=r.match(/^[\s\t]*$/);if(s||o)return;const l=r.match("^\\t{"+n.currentIndent+"}(\\w+):(.*){",""),c=r.match("^\\t{"+n.currentIndent+"}(\\w+):[\\s\\t\\r\\n](.*)"),h=r.match("^\\t{"+(n.currentIndent-1)+"}}");l?n.parseNodeBegin(r,l):c?n.parseNodeProperty(r,c,i[++a]):h?n.popStack():r.match(/^[^\s\t}]/)&&n.parseNodePropertyContinued(r)}),this.allNodes}parseNodeBegin(e,n){const i=n[1].trim().replace(/^"/,"").replace(/"$/,""),r=n[2].split(",").map(function(l){return l.trim().replace(/^"/,"").replace(/"$/,"")}),a={name:i},s=this.parseNodeAttr(r),o=this.getCurrentNode();this.currentIndent===0?this.allNodes.add(i,a):i in o?(i==="PoseNode"?o.PoseNode.push(a):o[i].id!==void 0&&(o[i]={},o[i][o[i].id]=o[i]),s.id!==""&&(o[i][s.id]=a)):typeof s.id=="number"?(o[i]={},o[i][s.id]=a):i!=="Properties70"&&(i==="PoseNode"?o[i]=[a]:o[i]=a),typeof s.id=="number"&&(a.id=s.id),s.name!==""&&(a.attrName=s.name),s.type!==""&&(a.attrType=s.type),this.pushStack(a)}parseNodeAttr(e){let n=e[0];e[0]!==""&&(n=parseInt(e[0]),isNaN(n)&&(n=e[0]));let i="",r="";return e.length>1&&(i=e[1].replace(/^(\w+)::/,""),r=e[2]),{id:n,name:i,type:r}}parseNodeProperty(e,n,i){let r=n[1].replace(/^"/,"").replace(/"$/,"").trim(),a=n[2].replace(/^"/,"").replace(/"$/,"").trim();r==="Content"&&a===","&&(a=i.replace(/"/g,"").replace(/,$/,"").trim());const s=this.getCurrentNode();if(s.name==="Properties70"){this.parseNodeSpecialProperty(e,r,a);return}if(r==="C"){const l=a.split(",").slice(1),c=parseInt(l[0]),h=parseInt(l[1]);let u=a.split(",").slice(3);u=u.map(function(f){return f.trim().replace(/^"/,"")}),r="connections",a=[c,h],Y3(a,u),s[r]===void 0&&(s[r]=[])}r==="Node"&&(s.id=a),r in s&&Array.isArray(s[r])?s[r].push(a):r!=="a"?s[r]=a:s.a=a,this.setCurrentProp(s,r),r==="a"&&a.slice(-1)!==","&&(s.a=im(a))}parseNodePropertyContinued(e){const n=this.getCurrentNode();n.a+=e,e.slice(-1)!==","&&(n.a=im(n.a))}parseNodeSpecialProperty(e,n,i){const r=i.split('",').map(function(h){return h.trim().replace(/^\"/,"").replace(/\s/,"_")}),a=r[0],s=r[1],o=r[2],l=r[3];let c=r[4];switch(s){case"int":case"enum":case"bool":case"ULongLong":case"double":case"Number":case"FieldOfView":c=parseFloat(c);break;case"Color":case"ColorRGB":case"Vector3D":case"Lcl_Translation":case"Lcl_Rotation":case"Lcl_Scaling":c=im(c);break}this.getPrevNode()[a]={type:s,type2:o,flag:l,value:c},this.setCurrentProp(this.getPrevNode(),a)}}class W3{parse(e){const n=new _0(e);n.skip(23);const i=n.getUint32();if(i<6400)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+i);const r=new M0;for(;!this.endOfContent(n);){const a=this.parseNode(n,i);a!==null&&r.add(a.name,a)}return r}endOfContent(e){return e.size()%16==0?(e.getOffset()+160+16&~15)>=e.size():e.getOffset()+160+16>=e.size()}parseNode(e,n){const i={},r=n>=7500?e.getUint64():e.getUint32(),a=n>=7500?e.getUint64():e.getUint32();n>=7500?e.getUint64():e.getUint32();const s=e.getUint8(),o=e.getString(s);if(r===0)return null;const l=[];for(let f=0;f<a;f++)l.push(this.parseProperty(e));const c=l.length>0?l[0]:"",h=l.length>1?l[1]:"",u=l.length>2?l[2]:"";for(i.singleProperty=a===1&&e.getOffset()===r;r>e.getOffset();){const f=this.parseNode(e,n);f!==null&&this.parseSubNode(o,i,f)}return i.propertyList=l,typeof c=="number"&&(i.id=c),h!==""&&(i.attrName=h),u!==""&&(i.attrType=u),o!==""&&(i.name=o),i}parseSubNode(e,n,i){if(i.singleProperty===!0){const r=i.propertyList[0];Array.isArray(r)?(n[i.name]=i,i.a=r):n[i.name]=r}else if(e==="Connections"&&i.name==="C"){const r=[];i.propertyList.forEach(function(a,s){s!==0&&r.push(a)}),n.connections===void 0&&(n.connections=[]),n.connections.push(r)}else if(i.name==="Properties70")Object.keys(i).forEach(function(a){n[a]=i[a]});else if(e==="Properties70"&&i.name==="P"){let r=i.propertyList[0],a=i.propertyList[1];const s=i.propertyList[2],o=i.propertyList[3];let l;r.indexOf("Lcl ")===0&&(r=r.replace("Lcl ","Lcl_")),a.indexOf("Lcl ")===0&&(a=a.replace("Lcl ","Lcl_")),a==="Color"||a==="ColorRGB"||a==="Vector"||a==="Vector3D"||a.indexOf("Lcl_")===0?l=[i.propertyList[4],i.propertyList[5],i.propertyList[6]]:l=i.propertyList[4],n[r]={type:a,type2:s,flag:o,value:l}}else n[i.name]===void 0?typeof i.id=="number"?(n[i.name]={},n[i.name][i.id]=i):n[i.name]=i:i.name==="PoseNode"?(Array.isArray(n[i.name])||(n[i.name]=[n[i.name]]),n[i.name].push(i)):n[i.name][i.id]===void 0&&(n[i.name][i.id]=i)}parseProperty(e){const n=e.getString(1);let i;switch(n){case"C":return e.getBoolean();case"D":return e.getFloat64();case"F":return e.getFloat32();case"I":return e.getInt32();case"L":return e.getInt64();case"R":return i=e.getUint32(),e.getArrayBuffer(i);case"S":return i=e.getUint32(),e.getString(i);case"Y":return e.getInt16();case"b":case"c":case"d":case"f":case"i":case"l":const r=e.getUint32(),a=e.getUint32(),s=e.getUint32();if(a===0)switch(n){case"b":case"c":return e.getBooleanArray(r);case"d":return e.getFloat64Array(r);case"f":return e.getFloat32Array(r);case"i":return e.getInt32Array(r);case"l":return e.getInt64Array(r)}typeof D3=="undefined"&&console.error("THREE.FBXLoader: External library fflate.min.js required.");const o=tc(new Uint8Array(e.getArrayBuffer(s))),l=new _0(o.buffer);switch(n){case"b":case"c":return l.getBooleanArray(r);case"d":return l.getFloat64Array(r);case"f":return l.getFloat32Array(r);case"i":return l.getInt32Array(r);case"l":return l.getInt64Array(r)}default:throw new Error("THREE.FBXLoader: Unknown property type "+n)}}}class _0{constructor(e,n){this.dv=new DataView(e),this.offset=0,this.littleEndian=n!==void 0?n:!0}getOffset(){return this.offset}size(){return this.dv.buffer.byteLength}skip(e){this.offset+=e}getBoolean(){return(this.getUint8()&1)==1}getBooleanArray(e){const n=[];for(let i=0;i<e;i++)n.push(this.getBoolean());return n}getUint8(){const e=this.dv.getUint8(this.offset);return this.offset+=1,e}getInt16(){const e=this.dv.getInt16(this.offset,this.littleEndian);return this.offset+=2,e}getInt32(){const e=this.dv.getInt32(this.offset,this.littleEndian);return this.offset+=4,e}getInt32Array(e){const n=[];for(let i=0;i<e;i++)n.push(this.getInt32());return n}getUint32(){const e=this.dv.getUint32(this.offset,this.littleEndian);return this.offset+=4,e}getInt64(){let e,n;return this.littleEndian?(e=this.getUint32(),n=this.getUint32()):(n=this.getUint32(),e=this.getUint32()),n&2147483648?(n=~n&4294967295,e=~e&4294967295,e===4294967295&&(n=n+1&4294967295),e=e+1&4294967295,-(n*4294967296+e)):n*4294967296+e}getInt64Array(e){const n=[];for(let i=0;i<e;i++)n.push(this.getInt64());return n}getUint64(){let e,n;return this.littleEndian?(e=this.getUint32(),n=this.getUint32()):(n=this.getUint32(),e=this.getUint32()),n*4294967296+e}getFloat32(){const e=this.dv.getFloat32(this.offset,this.littleEndian);return this.offset+=4,e}getFloat32Array(e){const n=[];for(let i=0;i<e;i++)n.push(this.getFloat32());return n}getFloat64(){const e=this.dv.getFloat64(this.offset,this.littleEndian);return this.offset+=8,e}getFloat64Array(e){const n=[];for(let i=0;i<e;i++)n.push(this.getFloat64());return n}getArrayBuffer(e){const n=this.dv.buffer.slice(this.offset,this.offset+e);return this.offset+=e,n}getString(e){let n=[];for(let r=0;r<e;r++)n[r]=this.getUint8();const i=n.indexOf(0);return i>=0&&(n=n.slice(0,i)),vu.decodeText(new Uint8Array(n))}}class M0{add(e,n){this[e]=n}}function $3(t){const e="Kaydara FBX Binary  \0";return t.byteLength>=e.length&&e===E0(t,0,e.length)}function j3(t){const e=["K","a","y","d","a","r","a","\\","F","B","X","\\","B","i","n","a","r","y","\\","\\"];let n=0;function i(r){const a=t[r-1];return t=t.slice(n+r),n++,a}for(let r=0;r<e.length;++r)if(i(1)===e[r])return!1;return!0}function w0(t){const e=/FBXVersion: (\d+)/,n=t.match(e);if(n)return parseInt(n[1]);throw new Error("THREE.FBXLoader: Cannot find the version number for the file given.")}function X3(t){return t/46186158e3}const q3=[];function Pu(t,e,n,i){let r;switch(i.mappingType){case"ByPolygonVertex":r=t;break;case"ByPolygon":r=e;break;case"ByVertice":r=n;break;case"AllSame":r=i.indices[0];break;default:console.warn("THREE.FBXLoader: unknown attribute mapping type "+i.mappingType)}i.referenceType==="IndexToDirect"&&(r=i.indices[r]);const a=r*i.dataSize,s=a+i.dataSize;return Z3(q3,i.buffer,a,s)}const nm=new ui,ao=new k;function b0(t){const e=new Fe,n=new Fe,i=new Fe,r=new Fe,a=new Fe,s=new Fe,o=new Fe,l=new Fe,c=new Fe,h=new Fe,u=new Fe,f=new Fe,d=t.inheritType?t.inheritType:0;if(t.translation&&e.setPosition(ao.fromArray(t.translation)),t.preRotation){const L=t.preRotation.map(Ai.degToRad);L.push(t.eulerOrder),n.makeRotationFromEuler(nm.fromArray(L))}if(t.rotation){const L=t.rotation.map(Ai.degToRad);L.push(t.eulerOrder),i.makeRotationFromEuler(nm.fromArray(L))}if(t.postRotation){const L=t.postRotation.map(Ai.degToRad);L.push(t.eulerOrder),r.makeRotationFromEuler(nm.fromArray(L)),r.invert()}t.scale&&a.scale(ao.fromArray(t.scale)),t.scalingOffset&&o.setPosition(ao.fromArray(t.scalingOffset)),t.scalingPivot&&s.setPosition(ao.fromArray(t.scalingPivot)),t.rotationOffset&&l.setPosition(ao.fromArray(t.rotationOffset)),t.rotationPivot&&c.setPosition(ao.fromArray(t.rotationPivot)),t.parentMatrixWorld&&(u.copy(t.parentMatrix),h.copy(t.parentMatrixWorld));const p=n.clone().multiply(i).multiply(r),m=new Fe;m.extractRotation(h);const x=new Fe;x.copyPosition(h);const g=x.clone().invert().multiply(h),v=m.clone().invert().multiply(g),b=a,_=new Fe;if(d===0)_.copy(m).multiply(p).multiply(v).multiply(b);else if(d===1)_.copy(m).multiply(v).multiply(p).multiply(b);else{const S=new Fe().scale(new k().setFromMatrixScale(u)).clone().invert(),R=v.clone().multiply(S);_.copy(m).multiply(p).multiply(R).multiply(b)}const M=c.clone().invert(),y=s.clone().invert();let w=e.clone().multiply(l).multiply(c).multiply(n).multiply(i).multiply(r).multiply(M).multiply(o).multiply(s).multiply(a).multiply(y);const E=new Fe().copyPosition(w),A=h.clone().multiply(E);return f.copyPosition(A),w=f.clone().multiply(_),w.premultiply(h.invert()),w}function S0(t){t=t||0;const e=["ZYX","YZX","XZY","ZXY","YXZ","XYZ"];return t===6?(console.warn("THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect."),e[0]):e[t]}function im(t){return t.split(",").map(function(n){return parseFloat(n)})}function E0(t,e,n){return e===void 0&&(e=0),n===void 0&&(n=t.byteLength),vu.decodeText(new Uint8Array(t,e,n))}function Y3(t,e){for(let n=0,i=t.length,r=e.length;n<r;n++,i++)t[i]=e[n]}function Z3(t,e,n,i){for(let r=n,a=0;r<i;r++,a++)t[a]=e[r];return t}function T0(t,e,n){return t.slice(0,e).concat(n).concat(t.slice(e))}const A0={type:"change"},rm={type:"start"},L0={type:"end"};class _F extends Ar{constructor(e,n){super();n===void 0&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),n===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=e,this.domElement=n,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new k,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:as.ROTATE,MIDDLE:as.DOLLY,RIGHT:as.PAN},this.touches={ONE:ss.ROTATE,TWO:ss.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return o.phi},this.getAzimuthalAngle=function(){return o.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(V){V.addEventListener("keydown",He),this._domElementKeyEvents=V},this.saveState=function(){i.target0.copy(i.target),i.position0.copy(i.object.position),i.zoom0=i.object.zoom},this.reset=function(){i.target.copy(i.target0),i.object.position.copy(i.position0),i.object.zoom=i.zoom0,i.object.updateProjectionMatrix(),i.dispatchEvent(A0),i.update(),a=r.NONE},this.update=function(){const V=new k,B=new qt().setFromUnitVectors(e.up,new k(0,1,0)),Q=B.clone().invert(),ue=new k,W=new qt,ce=2*Math.PI;return function(){const Ie=i.object.position;V.copy(Ie).sub(i.target),V.applyQuaternion(B),o.setFromVector3(V),i.autoRotate&&a===r.NONE&&A(w()),i.enableDamping?(o.theta+=l.theta*i.dampingFactor,o.phi+=l.phi*i.dampingFactor):(o.theta+=l.theta,o.phi+=l.phi);let se=i.minAzimuthAngle,Be=i.maxAzimuthAngle;return isFinite(se)&&isFinite(Be)&&(se<-Math.PI?se+=ce:se>Math.PI&&(se-=ce),Be<-Math.PI?Be+=ce:Be>Math.PI&&(Be-=ce),se<=Be?o.theta=Math.max(se,Math.min(Be,o.theta)):o.theta=o.theta>(se+Be)/2?Math.max(se,o.theta):Math.min(Be,o.theta)),o.phi=Math.max(i.minPolarAngle,Math.min(i.maxPolarAngle,o.phi)),o.makeSafe(),o.radius*=c,o.radius=Math.max(i.minDistance,Math.min(i.maxDistance,o.radius)),i.enableDamping===!0?i.target.addScaledVector(h,i.dampingFactor):i.target.add(h),V.setFromSpherical(o),V.applyQuaternion(Q),Ie.copy(i.target).add(V),i.object.lookAt(i.target),i.enableDamping===!0?(l.theta*=1-i.dampingFactor,l.phi*=1-i.dampingFactor,h.multiplyScalar(1-i.dampingFactor)):(l.set(0,0,0),h.set(0,0,0)),c=1,u||ue.distanceToSquared(i.object.position)>s||8*(1-W.dot(i.object.quaternion))>s?(i.dispatchEvent(A0),ue.copy(i.object.position),W.copy(i.object.quaternion),u=!1,!0):!1}}(),this.dispose=function(){i.domElement.removeEventListener("contextmenu",te),i.domElement.removeEventListener("pointerdown",pe),i.domElement.removeEventListener("pointercancel",O),i.domElement.removeEventListener("wheel",de),i.domElement.removeEventListener("pointermove",De),i.domElement.removeEventListener("pointerup",Ce),i._domElementKeyEvents!==null&&i._domElementKeyEvents.removeEventListener("keydown",He)};const i=this,r={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let a=r.NONE;const s=1e-6,o=new Dx,l=new Dx;let c=1;const h=new k;let u=!1;const f=new Te,d=new Te,p=new Te,m=new Te,x=new Te,g=new Te,v=new Te,b=new Te,_=new Te,M=[],y={};function w(){return 2*Math.PI/60/60*i.autoRotateSpeed}function E(){return Math.pow(.95,i.zoomSpeed)}function A(V){l.theta-=V}function L(V){l.phi-=V}const S=function(){const V=new k;return function(Q,ue){V.setFromMatrixColumn(ue,0),V.multiplyScalar(-Q),h.add(V)}}(),R=function(){const V=new k;return function(Q,ue){i.screenSpacePanning===!0?V.setFromMatrixColumn(ue,1):(V.setFromMatrixColumn(ue,0),V.crossVectors(i.object.up,V)),V.multiplyScalar(Q),h.add(V)}}(),D=function(){const V=new k;return function(Q,ue){const W=i.domElement;if(i.object.isPerspectiveCamera){const ce=i.object.position;V.copy(ce).sub(i.target);let be=V.length();be*=Math.tan(i.object.fov/2*Math.PI/180),S(2*Q*be/W.clientHeight,i.object.matrix),R(2*ue*be/W.clientHeight,i.object.matrix)}else i.object.isOrthographicCamera?(S(Q*(i.object.right-i.object.left)/i.object.zoom/W.clientWidth,i.object.matrix),R(ue*(i.object.top-i.object.bottom)/i.object.zoom/W.clientHeight,i.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),i.enablePan=!1)}}();function I(V){i.object.isPerspectiveCamera?c/=V:i.object.isOrthographicCamera?(i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom*V)),i.object.updateProjectionMatrix(),u=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),i.enableZoom=!1)}function F(V){i.object.isPerspectiveCamera?c*=V:i.object.isOrthographicCamera?(i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom/V)),i.object.updateProjectionMatrix(),u=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),i.enableZoom=!1)}function U(V){f.set(V.clientX,V.clientY)}function j(V){v.set(V.clientX,V.clientY)}function Y(V){m.set(V.clientX,V.clientY)}function K(V){d.set(V.clientX,V.clientY),p.subVectors(d,f).multiplyScalar(i.rotateSpeed);const B=i.domElement;A(2*Math.PI*p.x/B.clientHeight),L(2*Math.PI*p.y/B.clientHeight),f.copy(d),i.update()}function X(V){b.set(V.clientX,V.clientY),_.subVectors(b,v),_.y>0?I(E()):_.y<0&&F(E()),v.copy(b),i.update()}function q(V){x.set(V.clientX,V.clientY),g.subVectors(x,m).multiplyScalar(i.panSpeed),D(g.x,g.y),m.copy(x),i.update()}function he(V){V.deltaY<0?F(E()):V.deltaY>0&&I(E()),i.update()}function Se(V){let B=!1;switch(V.code){case i.keys.UP:D(0,i.keyPanSpeed),B=!0;break;case i.keys.BOTTOM:D(0,-i.keyPanSpeed),B=!0;break;case i.keys.LEFT:D(i.keyPanSpeed,0),B=!0;break;case i.keys.RIGHT:D(-i.keyPanSpeed,0),B=!0;break}B&&(V.preventDefault(),i.update())}function _e(){if(M.length===1)f.set(M[0].pageX,M[0].pageY);else{const V=.5*(M[0].pageX+M[1].pageX),B=.5*(M[0].pageY+M[1].pageY);f.set(V,B)}}function Z(){if(M.length===1)m.set(M[0].pageX,M[0].pageY);else{const V=.5*(M[0].pageX+M[1].pageX),B=.5*(M[0].pageY+M[1].pageY);m.set(V,B)}}function ie(){const V=M[0].pageX-M[1].pageX,B=M[0].pageY-M[1].pageY,Q=Math.sqrt(V*V+B*B);v.set(0,Q)}function Le(){i.enableZoom&&ie(),i.enablePan&&Z()}function Ee(){i.enableZoom&&ie(),i.enableRotate&&_e()}function we(V){if(M.length==1)d.set(V.pageX,V.pageY);else{const Q=xe(V),ue=.5*(V.pageX+Q.x),W=.5*(V.pageY+Q.y);d.set(ue,W)}p.subVectors(d,f).multiplyScalar(i.rotateSpeed);const B=i.domElement;A(2*Math.PI*p.x/B.clientHeight),L(2*Math.PI*p.y/B.clientHeight),f.copy(d)}function Ae(V){if(M.length===1)x.set(V.pageX,V.pageY);else{const B=xe(V),Q=.5*(V.pageX+B.x),ue=.5*(V.pageY+B.y);x.set(Q,ue)}g.subVectors(x,m).multiplyScalar(i.panSpeed),D(g.x,g.y),m.copy(x)}function ae(V){const B=xe(V),Q=V.pageX-B.x,ue=V.pageY-B.y,W=Math.sqrt(Q*Q+ue*ue);b.set(0,W),_.set(0,Math.pow(b.y/v.y,i.zoomSpeed)),I(_.y),v.copy(b)}function ee(V){i.enableZoom&&ae(V),i.enablePan&&Ae(V)}function ve(V){i.enableZoom&&ae(V),i.enableRotate&&we(V)}function pe(V){i.enabled!==!1&&(M.length===0&&(i.domElement.setPointerCapture(V.pointerId),i.domElement.addEventListener("pointermove",De),i.domElement.addEventListener("pointerup",Ce)),fe(V),V.pointerType==="touch"?N(V):G(V))}function De(V){i.enabled!==!1&&(V.pointerType==="touch"?P(V):ye(V))}function Ce(V){me(V),M.length===0&&(i.domElement.releasePointerCapture(V.pointerId),i.domElement.removeEventListener("pointermove",De),i.domElement.removeEventListener("pointerup",Ce)),i.dispatchEvent(L0),a=r.NONE}function O(V){me(V)}function G(V){let B;switch(V.button){case 0:B=i.mouseButtons.LEFT;break;case 1:B=i.mouseButtons.MIDDLE;break;case 2:B=i.mouseButtons.RIGHT;break;default:B=-1}switch(B){case as.DOLLY:if(i.enableZoom===!1)return;j(V),a=r.DOLLY;break;case as.ROTATE:if(V.ctrlKey||V.metaKey||V.shiftKey){if(i.enablePan===!1)return;Y(V),a=r.PAN}else{if(i.enableRotate===!1)return;U(V),a=r.ROTATE}break;case as.PAN:if(V.ctrlKey||V.metaKey||V.shiftKey){if(i.enableRotate===!1)return;U(V),a=r.ROTATE}else{if(i.enablePan===!1)return;Y(V),a=r.PAN}break;default:a=r.NONE}a!==r.NONE&&i.dispatchEvent(rm)}function ye(V){if(i.enabled!==!1)switch(a){case r.ROTATE:if(i.enableRotate===!1)return;K(V);break;case r.DOLLY:if(i.enableZoom===!1)return;X(V);break;case r.PAN:if(i.enablePan===!1)return;q(V);break}}function de(V){i.enabled===!1||i.enableZoom===!1||a!==r.NONE||(V.preventDefault(),i.dispatchEvent(rm),he(V),i.dispatchEvent(L0))}function He(V){i.enabled===!1||i.enablePan===!1||Se(V)}function N(V){switch(J(V),M.length){case 1:switch(i.touches.ONE){case ss.ROTATE:if(i.enableRotate===!1)return;_e(),a=r.TOUCH_ROTATE;break;case ss.PAN:if(i.enablePan===!1)return;Z(),a=r.TOUCH_PAN;break;default:a=r.NONE}break;case 2:switch(i.touches.TWO){case ss.DOLLY_PAN:if(i.enableZoom===!1&&i.enablePan===!1)return;Le(),a=r.TOUCH_DOLLY_PAN;break;case ss.DOLLY_ROTATE:if(i.enableZoom===!1&&i.enableRotate===!1)return;Ee(),a=r.TOUCH_DOLLY_ROTATE;break;default:a=r.NONE}break;default:a=r.NONE}a!==r.NONE&&i.dispatchEvent(rm)}function P(V){switch(J(V),a){case r.TOUCH_ROTATE:if(i.enableRotate===!1)return;we(V),i.update();break;case r.TOUCH_PAN:if(i.enablePan===!1)return;Ae(V),i.update();break;case r.TOUCH_DOLLY_PAN:if(i.enableZoom===!1&&i.enablePan===!1)return;ee(V),i.update();break;case r.TOUCH_DOLLY_ROTATE:if(i.enableZoom===!1&&i.enableRotate===!1)return;ve(V),i.update();break;default:a=r.NONE}}function te(V){i.enabled!==!1&&V.preventDefault()}function fe(V){M.push(V)}function me(V){delete y[V.pointerId];for(let B=0;B<M.length;B++)if(M[B].pointerId==V.pointerId){M.splice(B,1);return}}function J(V){let B=y[V.pointerId];B===void 0&&(B=new Te,y[V.pointerId]=B),B.set(V.pageX,V.pageY)}function xe(V){const B=V.pointerId===M[0].pointerId?M[1]:M[0];return y[B.pointerId]}i.domElement.addEventListener("contextmenu",te),i.domElement.addEventListener("pointerdown",pe),i.domElement.addEventListener("pointercancel",O),i.domElement.addEventListener("wheel",de,{passive:!1}),this.update()}}function J3(t){if(t.__esModule)return t;var e=Object.defineProperty({},"__esModule",{value:!0});return Object.keys(t).forEach(function(n){var i=Object.getOwnPropertyDescriptor(t,n);Object.defineProperty(e,n,i.get?i:{enumerable:!0,get:function(){return t[n]}})}),e}Number.EPSILON===void 0&&(Number.EPSILON=Math.pow(2,-52));Number.isInteger===void 0&&(Number.isInteger=function(t){return typeof t=="number"&&isFinite(t)&&Math.floor(t)===t});Math.sign===void 0&&(Math.sign=function(t){return t<0?-1:t>0?1:+t});"name"in Function.prototype||Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}});Object.assign===void 0&&(Object.assign=function(t){if(t==null)throw new TypeError("Cannot convert undefined or null to object");for(var e=Object(t),n=1;n<arguments.length;n++){var i=arguments[n];if(i!=null)for(var r in i)Object.prototype.hasOwnProperty.call(i,r)&&(e[r]=i[r])}return e});var C0="115",K3={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Q3={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},R0=0,am=1,P0=2,e2=3,t2=0,n2=1,i2=0,sm=1,D0=2,so=3,oo=0,nn=1,ic=2,om=1,r2=2,rr=0,lo=1,lm=2,cm=3,hm=4,I0=5,ga=100,F0=101,B0=102,um=103,fm=104,O0=200,N0=201,z0=202,U0=203,dm=204,pm=205,G0=206,H0=207,V0=208,k0=209,W0=210,$0=0,j0=1,X0=2,Du=3,q0=4,Y0=5,Z0=6,J0=7,rc=0,K0=1,Q0=2,ac=0,Iu=1,e_=2,t_=3,n_=4,i_=5,Fu=300,Bu=301,Ou=302,mm=303,Nu=304,gm=305,co=306,zu=307,sc=1e3,Rn=1001,oc=1002,$t=1003,Uu=1004,a2=1004,Gu=1005,s2=1005,rn=1006,vm=1007,o2=1007,lc=1008,l2=1008,cc=1009,r_=1010,a_=1011,hc=1012,s_=1013,uc=1014,ar=1015,fc=1016,o_=1017,l_=1018,c_=1019,ho=1020,h_=1021,sr=1022,ii=1023,u_=1024,f_=1025,d_=ii,va=1026,uo=1027,p_=1028,m_=1029,g_=1030,v_=1031,y_=1032,x_=1033,ym=33776,xm=33777,_m=33778,Mm=33779,wm=35840,bm=35841,Sm=35842,Em=35843,__=36196,Tm=37492,Am=37496,M_=37808,w_=37809,b_=37810,S_=37811,E_=37812,T_=37813,A_=37814,L_=37815,C_=37816,R_=37817,P_=37818,D_=37819,I_=37820,F_=37821,B_=36492,O_=37840,N_=37841,z_=37842,U_=37843,G_=37844,H_=37845,V_=37846,k_=37847,W_=37848,$_=37849,j_=37850,X_=37851,q_=37852,Y_=37853,Z_=2200,J_=2201,K_=2202,dc=2300,pc=2301,Hu=2302,ya=2400,xa=2401,mc=2402,Q_=0,c2=1,h2=2,On=3e3,Vu=3001,Lm=3007,ku=3002,eM=3003,Cm=3004,Rm=3005,Pm=3006,tM=3200,nM=3201,_a=0,iM=1,u2=0,Wu=7680,f2=7681,d2=7682,p2=7683,m2=34055,g2=34056,v2=5386,y2=512,x2=513,_2=514,M2=515,w2=516,b2=517,S2=518,rM=519,gc=35044,Ma=35048,E2=35040,T2=35045,A2=35049,L2=35041,C2=35046,R2=35050,P2=35042;function Fi(){}Object.assign(Fi.prototype,{addEventListener:function(t,e){this._listeners===void 0&&(this._listeners={});var n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)},hasEventListener:function(t,e){if(this._listeners===void 0)return!1;var n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1},removeEventListener:function(t,e){if(this._listeners!==void 0){var n=this._listeners,i=n[t];if(i!==void 0){var r=i.indexOf(e);r!==-1&&i.splice(r,1)}}},dispatchEvent:function(t){if(this._listeners!==void 0){var e=this._listeners,n=e[t.type];if(n!==void 0){t.target=this;for(var i=n.slice(0),r=0,a=i.length;r<a;r++)i[r].call(this,t)}}}});var hn=[];for(var vc=0;vc<256;vc++)hn[vc]=(vc<16?"0":"")+vc.toString(16);var it={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0,i=Math.random()*4294967295|0,r=hn[t&255]+hn[t>>8&255]+hn[t>>16&255]+hn[t>>24&255]+"-"+hn[e&255]+hn[e>>8&255]+"-"+hn[e>>16&15|64]+hn[e>>24&255]+"-"+hn[n&63|128]+hn[n>>8&255]+"-"+hn[n>>16&255]+hn[n>>24&255]+hn[i&255]+hn[i>>8&255]+hn[i>>16&255]+hn[i>>24&255];return r.toUpperCase()},clamp:function(t,e,n){return Math.max(e,Math.min(n,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,n,i,r){return i+(t-e)*(r-i)/(n-e)},lerp:function(t,e,n){return(1-n)*t+n*e},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e),t*t*(3-2*t))},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e),t*t*t*(t*(t*6-15)+10))},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},degToRad:function(t){return t*it.DEG2RAD},radToDeg:function(t){return t*it.RAD2DEG},isPowerOfTwo:function(t){return(t&t-1)==0&&t!==0},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))},setQuaternionFromProperEuler:function(t,e,n,i,r){var a=Math.cos,s=Math.sin,o=a(n/2),l=s(n/2),c=a((e+i)/2),h=s((e+i)/2),u=a((e-i)/2),f=s((e-i)/2),d=a((i-e)/2),p=s((i-e)/2);r==="XYX"?t.set(o*h,l*u,l*f,o*c):r==="YZY"?t.set(l*f,o*h,l*u,o*c):r==="ZXZ"?t.set(l*u,l*f,o*h,o*c):r==="XZX"?t.set(o*h,l*p,l*d,o*c):r==="YXY"?t.set(l*d,o*h,l*p,o*c):r==="ZYZ"?t.set(l*p,l*d,o*h,o*c):console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order.")}};function Me(t,e){this.x=t||0,this.y=e||0}Object.defineProperties(Me.prototype,{width:{get:function(){return this.x},set:function(t){this.x=t}},height:{get:function(){return this.y},set:function(t){this.y=t}}});Object.assign(Me.prototype,{isVector2:!0,set:function(t,e){return this.x=t,this.y=e,this},setScalar:function(t){return this.x=t,this.y=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(t){return this.x=t.x,this.y=t.y,this},add:function(t,e){return e!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)},addScalar:function(t){return this.x+=t,this.y+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this},sub:function(t,e){return e!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)},subScalar:function(t){return this.x-=t,this.y-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this},multiply:function(t){return this.x*=t.x,this.y*=t.y,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this},divide:function(t){return this.x/=t.x,this.y/=t.y,this},divideScalar:function(t){return this.multiplyScalar(1/t)},applyMatrix3:function(t){var e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this},clampScalar:function(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this},clampLength:function(t,e){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(t){return this.x*t.x+this.y*t.y},cross:function(t){return this.x*t.y-this.y*t.x},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){var t=Math.atan2(-this.y,-this.x)+Math.PI;return t},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,n=this.y-t.y;return e*e+n*n},manhattanDistanceTo:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this},lerpVectors:function(t,e,n){return this.subVectors(e,t).multiplyScalar(n).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y},fromArray:function(t,e){return e===void 0&&(e=0),this.x=t[e],this.y=t[e+1],this},toArray:function(t,e){return t===void 0&&(t=[]),e===void 0&&(e=0),t[e]=this.x,t[e+1]=this.y,t},fromBufferAttribute:function(t,e,n){return n!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this},rotateAround:function(t,e){var n=Math.cos(e),i=Math.sin(e),r=this.x-t.x,a=this.y-t.y;return this.x=r*n-a*i+t.x,this.y=r*i+a*n+t.y,this}});function yn(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}Object.assign(yn.prototype,{isMatrix3:!0,set:function(t,e,n,i,r,a,s,o,l){var c=this.elements;return c[0]=t,c[1]=i,c[2]=s,c[3]=e,c[4]=r,c[5]=o,c[6]=n,c[7]=a,c[8]=l,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return new this.constructor().fromArray(this.elements)},copy:function(t){var e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this},extractBasis:function(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this},setFromMatrix4:function(t){var e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this},multiply:function(t){return this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var n=t.elements,i=e.elements,r=this.elements,a=n[0],s=n[3],o=n[6],l=n[1],c=n[4],h=n[7],u=n[2],f=n[5],d=n[8],p=i[0],m=i[3],x=i[6],g=i[1],v=i[4],b=i[7],_=i[2],M=i[5],y=i[8];return r[0]=a*p+s*g+o*_,r[3]=a*m+s*v+o*M,r[6]=a*x+s*b+o*y,r[1]=l*p+c*g+h*_,r[4]=l*m+c*v+h*M,r[7]=l*x+c*b+h*y,r[2]=u*p+f*g+d*_,r[5]=u*m+f*v+d*M,r[8]=u*x+f*b+d*y,this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this},determinant:function(){var t=this.elements,e=t[0],n=t[1],i=t[2],r=t[3],a=t[4],s=t[5],o=t[6],l=t[7],c=t[8];return e*a*c-e*s*l-n*r*c+n*s*o+i*r*l-i*a*o},getInverse:function(t,e){e!==void 0&&console.warn("THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate.");var n=t.elements,i=this.elements,r=n[0],a=n[1],s=n[2],o=n[3],l=n[4],c=n[5],h=n[6],u=n[7],f=n[8],d=f*l-c*u,p=c*h-f*o,m=u*o-l*h,x=r*d+a*p+s*m;if(x===0)return this.set(0,0,0,0,0,0,0,0,0);var g=1/x;return i[0]=d*g,i[1]=(s*u-f*a)*g,i[2]=(c*a-s*l)*g,i[3]=p*g,i[4]=(f*r-s*h)*g,i[5]=(s*o-c*r)*g,i[6]=m*g,i[7]=(a*h-u*r)*g,i[8]=(l*r-a*o)*g,this},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this},getNormalMatrix:function(t){return this.setFromMatrix4(t).getInverse(this).transpose()},transposeIntoArray:function(t){var e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this},setUvTransform:function(t,e,n,i,r,a,s){var o=Math.cos(r),l=Math.sin(r);this.set(n*o,n*l,-n*(o*a+l*s)+a+t,-i*l,i*o,-i*(-l*a+o*s)+s+e,0,0,1)},scale:function(t,e){var n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this},rotate:function(t){var e=Math.cos(t),n=Math.sin(t),i=this.elements,r=i[0],a=i[3],s=i[6],o=i[1],l=i[4],c=i[7];return i[0]=e*r+n*o,i[3]=e*a+n*l,i[6]=e*s+n*c,i[1]=-n*r+e*o,i[4]=-n*a+e*l,i[7]=-n*s+e*c,this},translate:function(t,e){var n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this},equals:function(t){for(var e=this.elements,n=t.elements,i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0},fromArray:function(t,e){e===void 0&&(e=0);for(var n=0;n<9;n++)this.elements[n]=t[n+e];return this},toArray:function(t,e){t===void 0&&(t=[]),e===void 0&&(e=0);var n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}});var fo,$r={getDataURL:function(t){var e;if(typeof HTMLCanvasElement=="undefined")return t.src;if(t instanceof HTMLCanvasElement)e=t;else{fo===void 0&&(fo=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),fo.width=t.width,fo.height=t.height;var n=fo.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=fo}return e.width>2048||e.height>2048?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}},D2=0;function St(t,e,n,i,r,a,s,o,l,c){Object.defineProperty(this,"id",{value:D2++}),this.uuid=it.generateUUID(),this.name="",this.image=t!==void 0?t:St.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=e!==void 0?e:St.DEFAULT_MAPPING,this.wrapS=n!==void 0?n:Rn,this.wrapT=i!==void 0?i:Rn,this.magFilter=r!==void 0?r:rn,this.minFilter=a!==void 0?a:lc,this.anisotropy=l!==void 0?l:1,this.format=s!==void 0?s:ii,this.internalFormat=null,this.type=o!==void 0?o:cc,this.offset=new Me(0,0),this.repeat=new Me(1,1),this.center=new Me(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new yn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=c!==void 0?c:On,this.version=0,this.onUpdate=null}St.DEFAULT_IMAGE=void 0;St.DEFAULT_MAPPING=Fu;St.prototype=Object.assign(Object.create(Fi.prototype),{constructor:St,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this},toJSON:function(t){var e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];var n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==void 0){var i=this.image;if(i.uuid===void 0&&(i.uuid=it.generateUUID()),!e&&t.images[i.uuid]===void 0){var r;if(Array.isArray(i)){r=[];for(var a=0,s=i.length;a<s;a++)r.push($r.getDataURL(i[a]))}else r=$r.getDataURL(i);t.images[i.uuid]={uuid:i.uuid,url:r}}n.image=i.uuid}return e||(t.textures[this.uuid]=n),n},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(t){if(this.mapping!==Fu)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case sc:t.x=t.x-Math.floor(t.x);break;case Rn:t.x=t.x<0?0:1;break;case oc:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case sc:t.y=t.y-Math.floor(t.y);break;case Rn:t.y=t.y<0?0:1;break;case oc:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}});Object.defineProperty(St.prototype,"needsUpdate",{set:function(t){t===!0&&this.version++}});function Et(t,e,n,i){this.x=t||0,this.y=e||0,this.z=n||0,this.w=i!==void 0?i:1}Object.defineProperties(Et.prototype,{width:{get:function(){return this.z},set:function(t){this.z=t}},height:{get:function(){return this.w},set:function(t){this.w=t}}});Object.assign(Et.prototype,{isVector4:!0,set:function(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this.w=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setW:function(t){return this.w=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this},add:function(t,e){return e!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this},sub:function(t,e){return e!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},applyMatrix4:function(t){var e=this.x,n=this.y,i=this.z,r=this.w,a=t.elements;return this.x=a[0]*e+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*e+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*e+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*e+a[7]*n+a[11]*i+a[15]*r,this},divideScalar:function(t){return this.multiplyScalar(1/t)},setAxisAngleFromQuaternion:function(t){this.w=2*Math.acos(t.w);var e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this},setAxisAngleFromRotationMatrix:function(t){var e,n,i,r,a=.01,s=.1,o=t.elements,l=o[0],c=o[4],h=o[8],u=o[1],f=o[5],d=o[9],p=o[2],m=o[6],x=o[10];if(Math.abs(c-u)<a&&Math.abs(h-p)<a&&Math.abs(d-m)<a){if(Math.abs(c+u)<s&&Math.abs(h+p)<s&&Math.abs(d+m)<s&&Math.abs(l+f+x-3)<s)return this.set(1,0,0,0),this;e=Math.PI;var g=(l+1)/2,v=(f+1)/2,b=(x+1)/2,_=(c+u)/4,M=(h+p)/4,y=(d+m)/4;return g>v&&g>b?g<a?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(g),i=_/n,r=M/n):v>b?v<a?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(v),n=_/i,r=y/i):b<a?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(b),n=M/r,i=y/r),this.set(n,i,r,e),this}var w=Math.sqrt((m-d)*(m-d)+(h-p)*(h-p)+(u-c)*(u-c));return Math.abs(w)<.001&&(w=1),this.x=(m-d)/w,this.y=(h-p)/w,this.z=(u-c)/w,this.w=Math.acos((l+f+x-1)/2),this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this},clampScalar:function(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this},clampLength:function(t,e){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this},lerpVectors:function(t,e,n){return this.subVectors(e,t).multiplyScalar(n).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w},fromArray:function(t,e){return e===void 0&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this},toArray:function(t,e){return t===void 0&&(t=[]),e===void 0&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t},fromBufferAttribute:function(t,e,n){return n!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}});function kn(t,e,n){this.width=t,this.height=e,this.scissor=new Et(0,0,t,e),this.scissorTest=!1,this.viewport=new Et(0,0,t,e),n=n||{},this.texture=new St(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=t,this.texture.image.height=e,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:rn,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!0,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null}kn.prototype=Object.assign(Object.create(Fi.prototype),{constructor:kn,isWebGLRenderTarget:!0,setSize:function(t,e){(this.width!==t||this.height!==e)&&(this.width=t,this.height=e,this.texture.image.width=t,this.texture.image.height=e,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.width=t.width,this.height=t.height,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});function Dm(t,e,n){kn.call(this,t,e,n),this.samples=4}Dm.prototype=Object.assign(Object.create(kn.prototype),{constructor:Dm,isWebGLMultisampleRenderTarget:!0,copy:function(t){return kn.prototype.copy.call(this,t),this.samples=t.samples,this}});function Pn(t,e,n,i){this._x=t||0,this._y=e||0,this._z=n||0,this._w=i!==void 0?i:1}Object.assign(Pn,{slerp:function(t,e,n,i){return n.copy(t).slerp(e,i)},slerpFlat:function(t,e,n,i,r,a,s){var o=n[i+0],l=n[i+1],c=n[i+2],h=n[i+3],u=r[a+0],f=r[a+1],d=r[a+2],p=r[a+3];if(h!==p||o!==u||l!==f||c!==d){var m=1-s,x=o*u+l*f+c*d+h*p,g=x>=0?1:-1,v=1-x*x;if(v>Number.EPSILON){var b=Math.sqrt(v),_=Math.atan2(b,x*g);m=Math.sin(m*_)/b,s=Math.sin(s*_)/b}var M=s*g;if(o=o*m+u*M,l=l*m+f*M,c=c*m+d*M,h=h*m+p*M,m===1-s){var y=1/Math.sqrt(o*o+l*l+c*c+h*h);o*=y,l*=y,c*=y,h*=y}}t[e]=o,t[e+1]=l,t[e+2]=c,t[e+3]=h}});Object.defineProperties(Pn.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this._onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this._onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this._onChangeCallback()}},w:{get:function(){return this._w},set:function(t){this._w=t,this._onChangeCallback()}}});Object.assign(Pn.prototype,{isQuaternion:!0,set:function(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this},setFromEuler:function(t,e){if(!(t&&t.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var n=t._x,i=t._y,r=t._z,a=t.order,s=Math.cos,o=Math.sin,l=s(n/2),c=s(i/2),h=s(r/2),u=o(n/2),f=o(i/2),d=o(r/2);return a==="XYZ"?(this._x=u*c*h+l*f*d,this._y=l*f*h-u*c*d,this._z=l*c*d+u*f*h,this._w=l*c*h-u*f*d):a==="YXZ"?(this._x=u*c*h+l*f*d,this._y=l*f*h-u*c*d,this._z=l*c*d-u*f*h,this._w=l*c*h+u*f*d):a==="ZXY"?(this._x=u*c*h-l*f*d,this._y=l*f*h+u*c*d,this._z=l*c*d+u*f*h,this._w=l*c*h-u*f*d):a==="ZYX"?(this._x=u*c*h-l*f*d,this._y=l*f*h+u*c*d,this._z=l*c*d-u*f*h,this._w=l*c*h+u*f*d):a==="YZX"?(this._x=u*c*h+l*f*d,this._y=l*f*h+u*c*d,this._z=l*c*d-u*f*h,this._w=l*c*h-u*f*d):a==="XZY"&&(this._x=u*c*h-l*f*d,this._y=l*f*h-u*c*d,this._z=l*c*d+u*f*h,this._w=l*c*h+u*f*d),e!==!1&&this._onChangeCallback(),this},setFromAxisAngle:function(t,e){var n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this},setFromRotationMatrix:function(t){var e=t.elements,n=e[0],i=e[4],r=e[8],a=e[1],s=e[5],o=e[9],l=e[2],c=e[6],h=e[10],u=n+s+h,f;return u>0?(f=.5/Math.sqrt(u+1),this._w=.25/f,this._x=(c-o)*f,this._y=(r-l)*f,this._z=(a-i)*f):n>s&&n>h?(f=2*Math.sqrt(1+n-s-h),this._w=(c-o)/f,this._x=.25*f,this._y=(i+a)/f,this._z=(r+l)/f):s>h?(f=2*Math.sqrt(1+s-n-h),this._w=(r-l)/f,this._x=(i+a)/f,this._y=.25*f,this._z=(o+c)/f):(f=2*Math.sqrt(1+h-n-s),this._w=(a-i)/f,this._x=(r+l)/f,this._y=(o+c)/f,this._z=.25*f),this._onChangeCallback(),this},setFromUnitVectors:function(t,e){var n=1e-6,i=t.dot(e)+1;return i<n?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=i),this.normalize()},angleTo:function(t){return 2*Math.acos(Math.abs(it.clamp(this.dot(t),-1,1)))},rotateTowards:function(t,e){var n=this.angleTo(t);if(n===0)return this;var i=Math.min(1,e/n);return this.slerp(t,i),this},inverse:function(){return this.conjugate()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this},dot:function(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this},multiply:function(t,e){return e!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)},premultiply:function(t){return this.multiplyQuaternions(t,this)},multiplyQuaternions:function(t,e){var n=t._x,i=t._y,r=t._z,a=t._w,s=e._x,o=e._y,l=e._z,c=e._w;return this._x=n*c+a*s+i*l-r*o,this._y=i*c+a*o+r*s-n*l,this._z=r*c+a*l+n*o-i*s,this._w=a*c-n*s-i*o-r*l,this._onChangeCallback(),this},slerp:function(t,e){if(e===0)return this;if(e===1)return this.copy(t);var n=this._x,i=this._y,r=this._z,a=this._w,s=a*t._w+n*t._x+i*t._y+r*t._z;if(s<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,s=-s):this.copy(t),s>=1)return this._w=a,this._x=n,this._y=i,this._z=r,this;var o=1-s*s;if(o<=Number.EPSILON){var l=1-e;return this._w=l*a+e*this._w,this._x=l*n+e*this._x,this._y=l*i+e*this._y,this._z=l*r+e*this._z,this.normalize(),this._onChangeCallback(),this}var c=Math.sqrt(o),h=Math.atan2(c,s),u=Math.sin((1-e)*h)/c,f=Math.sin(e*h)/c;return this._w=a*u+this._w*f,this._x=n*u+this._x*f,this._y=i*u+this._y*f,this._z=r*u+this._z*f,this._onChangeCallback(),this},equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w},fromArray:function(t,e){return e===void 0&&(e=0),this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this},toArray:function(t,e){return t===void 0&&(t=[]),e===void 0&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t},fromBufferAttribute:function(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this},_onChange:function(t){return this._onChangeCallback=t,this},_onChangeCallback:function(){}});var Im=new z,aM=new Pn;function z(t,e,n){this.x=t||0,this.y=e||0,this.z=n||0}Object.assign(z.prototype,{isVector3:!0,set:function(t,e,n){return this.x=t,this.y=e,this.z=n,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},add:function(t,e){return e!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this},sub:function(t,e){return e!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this},multiply:function(t,e){return e!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this},multiplyVectors:function(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this},applyEuler:function(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(aM.setFromEuler(t))},applyAxisAngle:function(t,e){return this.applyQuaternion(aM.setFromAxisAngle(t,e))},applyMatrix3:function(t){var e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*i,this.y=r[1]*e+r[4]*n+r[7]*i,this.z=r[2]*e+r[5]*n+r[8]*i,this},applyNormalMatrix:function(t){return this.applyMatrix3(t).normalize()},applyMatrix4:function(t){var e=this.x,n=this.y,i=this.z,r=t.elements,a=1/(r[3]*e+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*e+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*e+r[6]*n+r[10]*i+r[14])*a,this},applyQuaternion:function(t){var e=this.x,n=this.y,i=this.z,r=t.x,a=t.y,s=t.z,o=t.w,l=o*e+a*i-s*n,c=o*n+s*e-r*i,h=o*i+r*n-a*e,u=-r*e-a*n-s*i;return this.x=l*o+u*-r+c*-s-h*-a,this.y=c*o+u*-a+h*-r-l*-s,this.z=h*o+u*-s+l*-a-c*-r,this},project:function(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)},unproject:function(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)},transformDirection:function(t){var e=this.x,n=this.y,i=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*i,this.y=r[1]*e+r[5]*n+r[9]*i,this.z=r[2]*e+r[6]*n+r[10]*i,this.normalize()},divide:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this},divideScalar:function(t){return this.multiplyScalar(1/t)},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this},clampScalar:function(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this},clampLength:function(t,e){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this},lerpVectors:function(t,e,n){return this.subVectors(e,t).multiplyScalar(n).add(t)},cross:function(t,e){return e!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)},crossVectors:function(t,e){var n=t.x,i=t.y,r=t.z,a=e.x,s=e.y,o=e.z;return this.x=i*o-r*s,this.y=r*a-n*o,this.z=n*s-i*a,this},projectOnVector:function(t){var e=t.lengthSq();if(e===0)return this.set(0,0,0);var n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)},projectOnPlane:function(t){return Im.copy(this).projectOnVector(t),this.sub(Im)},reflect:function(t){return this.sub(Im.copy(t).multiplyScalar(2*this.dot(t)))},angleTo:function(t){var e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;var n=this.dot(t)/e;return Math.acos(it.clamp(n,-1,1))},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i},manhattanDistanceTo:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)},setFromSpherical:function(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)},setFromSphericalCoords:function(t,e,n){var i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this},setFromCylindrical:function(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)},setFromCylindricalCoords:function(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this},setFromMatrixPosition:function(t){var e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this},setFromMatrixScale:function(t){var e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this},setFromMatrixColumn:function(t,e){return this.fromArray(t.elements,e*4)},setFromMatrix3Column:function(t,e){return this.fromArray(t.elements,e*3)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z},fromArray:function(t,e){return e===void 0&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this},toArray:function(t,e){return t===void 0&&(t=[]),e===void 0&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t},fromBufferAttribute:function(t,e,n){return n!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}});var po=new z,di=new ct,I2=new z(0,0,0),F2=new z(1,1,1),jr=new z,$u=new z,Wn=new z;function ct(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}Object.assign(ct.prototype,{isMatrix4:!0,set:function(t,e,n,i,r,a,s,o,l,c,h,u,f,d,p,m){var x=this.elements;return x[0]=t,x[4]=e,x[8]=n,x[12]=i,x[1]=r,x[5]=a,x[9]=s,x[13]=o,x[2]=l,x[6]=c,x[10]=h,x[14]=u,x[3]=f,x[7]=d,x[11]=p,x[15]=m,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return new ct().fromArray(this.elements)},copy:function(t){var e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this},copyPosition:function(t){var e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this},extractBasis:function(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this},makeBasis:function(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this},extractRotation:function(t){var e=this.elements,n=t.elements,i=1/po.setFromMatrixColumn(t,0).length(),r=1/po.setFromMatrixColumn(t,1).length(),a=1/po.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*r,e[5]=n[5]*r,e[6]=n[6]*r,e[7]=0,e[8]=n[8]*a,e[9]=n[9]*a,e[10]=n[10]*a,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},makeRotationFromEuler:function(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var e=this.elements,n=t.x,i=t.y,r=t.z,a=Math.cos(n),s=Math.sin(n),o=Math.cos(i),l=Math.sin(i),c=Math.cos(r),h=Math.sin(r);if(t.order==="XYZ"){var u=a*c,f=a*h,d=s*c,p=s*h;e[0]=o*c,e[4]=-o*h,e[8]=l,e[1]=f+d*l,e[5]=u-p*l,e[9]=-s*o,e[2]=p-u*l,e[6]=d+f*l,e[10]=a*o}else if(t.order==="YXZ"){var m=o*c,x=o*h,g=l*c,v=l*h;e[0]=m+v*s,e[4]=g*s-x,e[8]=a*l,e[1]=a*h,e[5]=a*c,e[9]=-s,e[2]=x*s-g,e[6]=v+m*s,e[10]=a*o}else if(t.order==="ZXY"){var m=o*c,x=o*h,g=l*c,v=l*h;e[0]=m-v*s,e[4]=-a*h,e[8]=g+x*s,e[1]=x+g*s,e[5]=a*c,e[9]=v-m*s,e[2]=-a*l,e[6]=s,e[10]=a*o}else if(t.order==="ZYX"){var u=a*c,f=a*h,d=s*c,p=s*h;e[0]=o*c,e[4]=d*l-f,e[8]=u*l+p,e[1]=o*h,e[5]=p*l+u,e[9]=f*l-d,e[2]=-l,e[6]=s*o,e[10]=a*o}else if(t.order==="YZX"){var b=a*o,_=a*l,M=s*o,y=s*l;e[0]=o*c,e[4]=y-b*h,e[8]=M*h+_,e[1]=h,e[5]=a*c,e[9]=-s*c,e[2]=-l*c,e[6]=_*h+M,e[10]=b-y*h}else if(t.order==="XZY"){var b=a*o,_=a*l,M=s*o,y=s*l;e[0]=o*c,e[4]=-h,e[8]=l*c,e[1]=b*h+y,e[5]=a*c,e[9]=_*h-M,e[2]=M*h-_,e[6]=s*c,e[10]=y*h+b}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},makeRotationFromQuaternion:function(t){return this.compose(I2,t,F2)},lookAt:function(t,e,n){var i=this.elements;return Wn.subVectors(t,e),Wn.lengthSq()===0&&(Wn.z=1),Wn.normalize(),jr.crossVectors(n,Wn),jr.lengthSq()===0&&(Math.abs(n.z)===1?Wn.x+=1e-4:Wn.z+=1e-4,Wn.normalize(),jr.crossVectors(n,Wn)),jr.normalize(),$u.crossVectors(Wn,jr),i[0]=jr.x,i[4]=$u.x,i[8]=Wn.x,i[1]=jr.y,i[5]=$u.y,i[9]=Wn.y,i[2]=jr.z,i[6]=$u.z,i[10]=Wn.z,this},multiply:function(t,e){return e!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var n=t.elements,i=e.elements,r=this.elements,a=n[0],s=n[4],o=n[8],l=n[12],c=n[1],h=n[5],u=n[9],f=n[13],d=n[2],p=n[6],m=n[10],x=n[14],g=n[3],v=n[7],b=n[11],_=n[15],M=i[0],y=i[4],w=i[8],E=i[12],A=i[1],L=i[5],S=i[9],R=i[13],D=i[2],I=i[6],F=i[10],U=i[14],j=i[3],Y=i[7],K=i[11],X=i[15];return r[0]=a*M+s*A+o*D+l*j,r[4]=a*y+s*L+o*I+l*Y,r[8]=a*w+s*S+o*F+l*K,r[12]=a*E+s*R+o*U+l*X,r[1]=c*M+h*A+u*D+f*j,r[5]=c*y+h*L+u*I+f*Y,r[9]=c*w+h*S+u*F+f*K,r[13]=c*E+h*R+u*U+f*X,r[2]=d*M+p*A+m*D+x*j,r[6]=d*y+p*L+m*I+x*Y,r[10]=d*w+p*S+m*F+x*K,r[14]=d*E+p*R+m*U+x*X,r[3]=g*M+v*A+b*D+_*j,r[7]=g*y+v*L+b*I+_*Y,r[11]=g*w+v*S+b*F+_*K,r[15]=g*E+v*R+b*U+_*X,this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this},determinant:function(){var t=this.elements,e=t[0],n=t[4],i=t[8],r=t[12],a=t[1],s=t[5],o=t[9],l=t[13],c=t[2],h=t[6],u=t[10],f=t[14],d=t[3],p=t[7],m=t[11],x=t[15];return d*(+r*o*h-i*l*h-r*s*u+n*l*u+i*s*f-n*o*f)+p*(+e*o*f-e*l*u+r*a*u-i*a*f+i*l*c-r*o*c)+m*(+e*l*h-e*s*f-r*a*h+n*a*f+r*s*c-n*l*c)+x*(-i*s*c-e*o*h+e*s*u+i*a*h-n*a*u+n*o*c)},transpose:function(){var t=this.elements,e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},setPosition:function(t,e,n){var i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this},getInverse:function(t,e){e!==void 0&&console.warn("THREE.Matrix4: .getInverse() can no longer be configured to throw on degenerate.");var n=this.elements,i=t.elements,r=i[0],a=i[1],s=i[2],o=i[3],l=i[4],c=i[5],h=i[6],u=i[7],f=i[8],d=i[9],p=i[10],m=i[11],x=i[12],g=i[13],v=i[14],b=i[15],_=d*v*u-g*p*u+g*h*m-c*v*m-d*h*b+c*p*b,M=x*p*u-f*v*u-x*h*m+l*v*m+f*h*b-l*p*b,y=f*g*u-x*d*u+x*c*m-l*g*m-f*c*b+l*d*b,w=x*d*h-f*g*h-x*c*p+l*g*p+f*c*v-l*d*v,E=r*_+a*M+s*y+o*w;if(E===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);var A=1/E;return n[0]=_*A,n[1]=(g*p*o-d*v*o-g*s*m+a*v*m+d*s*b-a*p*b)*A,n[2]=(c*v*o-g*h*o+g*s*u-a*v*u-c*s*b+a*h*b)*A,n[3]=(d*h*o-c*p*o-d*s*u+a*p*u+c*s*m-a*h*m)*A,n[4]=M*A,n[5]=(f*v*o-x*p*o+x*s*m-r*v*m-f*s*b+r*p*b)*A,n[6]=(x*h*o-l*v*o-x*s*u+r*v*u+l*s*b-r*h*b)*A,n[7]=(l*p*o-f*h*o+f*s*u-r*p*u-l*s*m+r*h*m)*A,n[8]=y*A,n[9]=(x*d*o-f*g*o-x*a*m+r*g*m+f*a*b-r*d*b)*A,n[10]=(l*g*o-x*c*o+x*a*u-r*g*u-l*a*b+r*c*b)*A,n[11]=(f*c*o-l*d*o-f*a*u+r*d*u+l*a*m-r*c*m)*A,n[12]=w*A,n[13]=(f*g*s-x*d*s+x*a*p-r*g*p-f*a*v+r*d*v)*A,n[14]=(x*c*s-l*g*s-x*a*h+r*g*h+l*a*v-r*c*v)*A,n[15]=(l*d*s-f*c*s+f*a*h-r*d*h-l*a*p+r*c*p)*A,this},scale:function(t){var e=this.elements,n=t.x,i=t.y,r=t.z;return e[0]*=n,e[4]*=i,e[8]*=r,e[1]*=n,e[5]*=i,e[9]*=r,e[2]*=n,e[6]*=i,e[10]*=r,e[3]*=n,e[7]*=i,e[11]*=r,this},getMaxScaleOnAxis:function(){var t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))},makeTranslation:function(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this},makeRotationX:function(t){var e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this},makeRotationY:function(t){var e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this},makeRotationZ:function(t){var e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(t,e){var n=Math.cos(e),i=Math.sin(e),r=1-n,a=t.x,s=t.y,o=t.z,l=r*a,c=r*s;return this.set(l*a+n,l*s-i*o,l*o+i*s,0,l*s+i*o,c*s+n,c*o-i*a,0,l*o-i*s,c*o+i*a,r*o*o+n,0,0,0,0,1),this},makeScale:function(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this},makeShear:function(t,e,n){return this.set(1,e,n,0,t,1,n,0,t,e,1,0,0,0,0,1),this},compose:function(t,e,n){var i=this.elements,r=e._x,a=e._y,s=e._z,o=e._w,l=r+r,c=a+a,h=s+s,u=r*l,f=r*c,d=r*h,p=a*c,m=a*h,x=s*h,g=o*l,v=o*c,b=o*h,_=n.x,M=n.y,y=n.z;return i[0]=(1-(p+x))*_,i[1]=(f+b)*_,i[2]=(d-v)*_,i[3]=0,i[4]=(f-b)*M,i[5]=(1-(u+x))*M,i[6]=(m+g)*M,i[7]=0,i[8]=(d+v)*y,i[9]=(m-g)*y,i[10]=(1-(u+p))*y,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this},decompose:function(t,e,n){var i=this.elements,r=po.set(i[0],i[1],i[2]).length(),a=po.set(i[4],i[5],i[6]).length(),s=po.set(i[8],i[9],i[10]).length(),o=this.determinant();o<0&&(r=-r),t.x=i[12],t.y=i[13],t.z=i[14],di.copy(this);var l=1/r,c=1/a,h=1/s;return di.elements[0]*=l,di.elements[1]*=l,di.elements[2]*=l,di.elements[4]*=c,di.elements[5]*=c,di.elements[6]*=c,di.elements[8]*=h,di.elements[9]*=h,di.elements[10]*=h,e.setFromRotationMatrix(di),n.x=r,n.y=a,n.z=s,this},makePerspective:function(t,e,n,i,r,a){a===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");var s=this.elements,o=2*r/(e-t),l=2*r/(n-i),c=(e+t)/(e-t),h=(n+i)/(n-i),u=-(a+r)/(a-r),f=-2*a*r/(a-r);return s[0]=o,s[4]=0,s[8]=c,s[12]=0,s[1]=0,s[5]=l,s[9]=h,s[13]=0,s[2]=0,s[6]=0,s[10]=u,s[14]=f,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this},makeOrthographic:function(t,e,n,i,r,a){var s=this.elements,o=1/(e-t),l=1/(n-i),c=1/(a-r),h=(e+t)*o,u=(n+i)*l,f=(a+r)*c;return s[0]=2*o,s[4]=0,s[8]=0,s[12]=-h,s[1]=0,s[5]=2*l,s[9]=0,s[13]=-u,s[2]=0,s[6]=0,s[10]=-2*c,s[14]=-f,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this},equals:function(t){for(var e=this.elements,n=t.elements,i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0},fromArray:function(t,e){e===void 0&&(e=0);for(var n=0;n<16;n++)this.elements[n]=t[n+e];return this},toArray:function(t,e){t===void 0&&(t=[]),e===void 0&&(e=0);var n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}});var sM=new ct,oM=new Pn;function wa(t,e,n,i){this._x=t||0,this._y=e||0,this._z=n||0,this._order=i||wa.DefaultOrder}wa.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];wa.DefaultOrder="XYZ";Object.defineProperties(wa.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this._onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this._onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this._onChangeCallback()}},order:{get:function(){return this._order},set:function(t){this._order=t,this._onChangeCallback()}}});Object.assign(wa.prototype,{isEuler:!0,set:function(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._order=i||this._order,this._onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this},setFromRotationMatrix:function(t,e,n){var i=it.clamp,r=t.elements,a=r[0],s=r[4],o=r[8],l=r[1],c=r[5],h=r[9],u=r[2],f=r[6],d=r[10];return e=e||this._order,e==="XYZ"?(this._y=Math.asin(i(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-h,d),this._z=Math.atan2(-s,a)):(this._x=Math.atan2(f,c),this._z=0)):e==="YXZ"?(this._x=Math.asin(-i(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(o,d),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-u,a),this._z=0)):e==="ZXY"?(this._x=Math.asin(i(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-s,c)):(this._y=0,this._z=Math.atan2(l,a))):e==="ZYX"?(this._y=Math.asin(-i(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(f,d),this._z=Math.atan2(l,a)):(this._x=0,this._z=Math.atan2(-s,c))):e==="YZX"?(this._z=Math.asin(i(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-u,a)):(this._x=0,this._y=Math.atan2(o,d))):e==="XZY"?(this._z=Math.asin(-i(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(f,c),this._y=Math.atan2(o,a)):(this._x=Math.atan2(-h,d),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+e),this._order=e,n!==!1&&this._onChangeCallback(),this},setFromQuaternion:function(t,e,n){return sM.makeRotationFromQuaternion(t),this.setFromRotationMatrix(sM,e,n)},setFromVector3:function(t,e){return this.set(t.x,t.y,t.z,e||this._order)},reorder:function(t){return oM.setFromEuler(this),this.setFromQuaternion(oM,t)},equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order},fromArray:function(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this},toArray:function(t,e){return t===void 0&&(t=[]),e===void 0&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t},toVector3:function(t){return t?t.set(this._x,this._y,this._z):new z(this._x,this._y,this._z)},_onChange:function(t){return this._onChangeCallback=t,this},_onChangeCallback:function(){}});function ju(){this.mask=1|0}Object.assign(ju.prototype,{set:function(t){this.mask=1<<t|0},enable:function(t){this.mask|=1<<t|0},enableAll:function(){this.mask=4294967295|0},toggle:function(t){this.mask^=1<<t|0},disable:function(t){this.mask&=~(1<<t|0)},disableAll:function(){this.mask=0},test:function(t){return(this.mask&t.mask)!=0}});var B2=0,lM=new z,mo=new Pn,or=new ct,Xu=new z,yc=new z,O2=new z,N2=new Pn,cM=new z(1,0,0),hM=new z(0,1,0),uM=new z(0,0,1),z2={type:"added"},U2={type:"removed"};function Ge(){Object.defineProperty(this,"id",{value:B2++}),this.uuid=it.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ge.DefaultUp.clone();var t=new z,e=new wa,n=new Pn,i=new z(1,1,1);function r(){n.setFromEuler(e,!1)}function a(){e.setFromQuaternion(n,void 0,!1)}e._onChange(r),n._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new ct},normalMatrix:{value:new yn}}),this.matrix=new ct,this.matrixWorld=new ct,this.matrixAutoUpdate=Ge.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new ju,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}Ge.DefaultUp=new z(0,1,0);Ge.DefaultMatrixAutoUpdate=!0;Ge.prototype=Object.assign(Object.create(Fi.prototype),{constructor:Ge,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(t,e){return mo.setFromAxisAngle(t,e),this.quaternion.multiply(mo),this},rotateOnWorldAxis:function(t,e){return mo.setFromAxisAngle(t,e),this.quaternion.premultiply(mo),this},rotateX:function(t){return this.rotateOnAxis(cM,t)},rotateY:function(t){return this.rotateOnAxis(hM,t)},rotateZ:function(t){return this.rotateOnAxis(uM,t)},translateOnAxis:function(t,e){return lM.copy(t).applyQuaternion(this.quaternion),this.position.add(lM.multiplyScalar(e)),this},translateX:function(t){return this.translateOnAxis(cM,t)},translateY:function(t){return this.translateOnAxis(hM,t)},translateZ:function(t){return this.translateOnAxis(uM,t)},localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(t){return t.applyMatrix4(or.getInverse(this.matrixWorld))},lookAt:function(t,e,n){t.isVector3?Xu.copy(t):Xu.set(t,e,n);var i=this.parent;this.updateWorldMatrix(!0,!1),yc.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?or.lookAt(yc,Xu,this.up):or.lookAt(Xu,yc,this.up),this.quaternion.setFromRotationMatrix(or),i&&(or.extractRotation(i.matrixWorld),mo.setFromRotationMatrix(or),this.quaternion.premultiply(mo.inverse()))},add:function(t){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(z2)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)},remove:function(t){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}var n=this.children.indexOf(t);return n!==-1&&(t.parent=null,this.children.splice(n,1),t.dispatchEvent(U2)),this},attach:function(t){return this.updateWorldMatrix(!0,!1),or.getInverse(this.matrixWorld),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),or.multiply(t.parent.matrixWorld)),t.applyMatrix4(or),t.updateWorldMatrix(!1,!1),this.add(t),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(var n=0,i=this.children.length;n<i;n++){var r=this.children[n],a=r.getObjectByProperty(t,e);if(a!==void 0)return a}},getWorldPosition:function(t){return t===void 0&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),t=new z),this.updateMatrixWorld(!0),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(t){return t===void 0&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),t=new Pn),this.updateMatrixWorld(!0),this.matrixWorld.decompose(yc,t,O2),t},getWorldScale:function(t){return t===void 0&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),t=new z),this.updateMatrixWorld(!0),this.matrixWorld.decompose(yc,N2,t),t},getWorldDirection:function(t){t===void 0&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),t=new z),this.updateMatrixWorld(!0);var e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()},raycast:function(){},traverse:function(t){t(this);for(var e=this.children,n=0,i=e.length;n<i;n++)e[n].traverse(t)},traverseVisible:function(t){if(this.visible!==!1){t(this);for(var e=this.children,n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}},traverseAncestors:function(t){var e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);for(var e=this.children,n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)},updateWorldMatrix:function(t,e){var n=this.parent;if(t===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0)for(var i=this.children,r=0,a=i.length;r<a;r++)i[r].updateWorldMatrix(!1,!0)},toJSON:function(t){var e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});var i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON());function r(x,g){return x[g.uuid]===void 0&&(x[g.uuid]=g.toJSON(t)),g.uuid}if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(t.geometries,this.geometry);var a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){var s=a.shapes;if(Array.isArray(s))for(var o=0,l=s.length;o<l;o++){var c=s[o];r(t.shapes,c)}else r(t.shapes,s)}}if(this.material!==void 0)if(Array.isArray(this.material)){for(var h=[],o=0,l=this.material.length;o<l;o++)h.push(r(t.materials,this.material[o]));i.material=h}else i.material=r(t.materials,this.material);if(this.children.length>0){i.children=[];for(var o=0;o<this.children.length;o++)i.children.push(this.children[o].toJSON(t).object)}if(e){var u=m(t.geometries),f=m(t.materials),d=m(t.textures),p=m(t.images),s=m(t.shapes);u.length>0&&(n.geometries=u),f.length>0&&(n.materials=f),d.length>0&&(n.textures=d),p.length>0&&(n.images=p),s.length>0&&(n.shapes=s)}return n.object=i,n;function m(x){var g=[];for(var v in x){var b=x[v];delete b.metadata,g.push(b)}return g}},clone:function(t){return new this.constructor().copy(this,t)},copy:function(t,e){if(e===void 0&&(e=!0),this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(var n=0;n<t.children.length;n++){var i=t.children[n];this.add(i.clone())}return this}});function lr(){Ge.call(this),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}lr.prototype=Object.assign(Object.create(Ge.prototype),{constructor:lr,isScene:!0,copy:function(t,e){return Ge.prototype.copy.call(this,t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this},toJSON:function(t){var e=Ge.prototype.toJSON.call(this,t);return this.background!==null&&(e.object.background=this.background.toJSON(t)),this.environment!==null&&(e.object.environment=this.environment.toJSON(t)),this.fog!==null&&(e.object.fog=this.fog.toJSON()),e},dispose:function(){this.dispatchEvent({type:"dispose"})}});var cr=[new z,new z,new z,new z,new z,new z,new z,new z],xc=new z,Fm=new pi,go=new z,vo=new z,yo=new z,Xr=new z,qr=new z,ba=new z,_c=new z,qu=new z,Yu=new z,Sa=new z;function pi(t,e){this.min=t!==void 0?t:new z(1/0,1/0,1/0),this.max=e!==void 0?e:new z(-1/0,-1/0,-1/0)}Object.assign(pi.prototype,{isBox3:!0,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromArray:function(t){for(var e=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,s=-1/0,o=0,l=t.length;o<l;o+=3){var c=t[o],h=t[o+1],u=t[o+2];c<e&&(e=c),h<n&&(n=h),u<i&&(i=u),c>r&&(r=c),h>a&&(a=h),u>s&&(s=u)}return this.min.set(e,n,i),this.max.set(r,a,s),this},setFromBufferAttribute:function(t){for(var e=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,s=-1/0,o=0,l=t.count;o<l;o++){var c=t.getX(o),h=t.getY(o),u=t.getZ(o);c<e&&(e=c),h<n&&(n=h),u<i&&(i=u),c>r&&(r=c),h>a&&(a=h),u>s&&(s=u)}return this.min.set(e,n,i),this.max.set(r,a,s),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(t,e){var n=xc.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this},setFromObject:function(t){return this.makeEmpty(),this.expandByObject(t)},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(t){return t===void 0&&(console.warn("THREE.Box3: .getCenter() target is now required"),t=new z),this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){return t===void 0&&(console.warn("THREE.Box3: .getSize() target is now required"),t=new z),this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},expandByObject:function(t){t.updateWorldMatrix(!1,!1);var e=t.geometry;e!==void 0&&(e.boundingBox===null&&e.computeBoundingBox(),Fm.copy(e.boundingBox),Fm.applyMatrix4(t.matrixWorld),this.union(Fm));for(var n=t.children,i=0,r=n.length;i<r;i++)this.expandByObject(n[i]);return this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z},getParameter:function(t,e){return e===void 0&&(console.warn("THREE.Box3: .getParameter() target is now required"),e=new z),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)},intersectsSphere:function(t){return this.clampPoint(t.center,xc),xc.distanceToSquared(t.center)<=t.radius*t.radius},intersectsPlane:function(t){var e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant},intersectsTriangle:function(t){if(this.isEmpty())return!1;this.getCenter(_c),qu.subVectors(this.max,_c),go.subVectors(t.a,_c),vo.subVectors(t.b,_c),yo.subVectors(t.c,_c),Xr.subVectors(vo,go),qr.subVectors(yo,vo),ba.subVectors(go,yo);var e=[0,-Xr.z,Xr.y,0,-qr.z,qr.y,0,-ba.z,ba.y,Xr.z,0,-Xr.x,qr.z,0,-qr.x,ba.z,0,-ba.x,-Xr.y,Xr.x,0,-qr.y,qr.x,0,-ba.y,ba.x,0];return!Bm(e,go,vo,yo,qu)||(e=[1,0,0,0,1,0,0,0,1],!Bm(e,go,vo,yo,qu))?!1:(Yu.crossVectors(Xr,qr),e=[Yu.x,Yu.y,Yu.z],Bm(e,go,vo,yo,qu))},clampPoint:function(t,e){return e===void 0&&(console.warn("THREE.Box3: .clampPoint() target is now required"),e=new z),e.copy(t).clamp(this.min,this.max)},distanceToPoint:function(t){var e=xc.copy(t).clamp(this.min,this.max);return e.sub(t).length()},getBoundingSphere:function(t){return t===void 0&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(t.center),t.radius=this.getSize(xc).length()*.5,t},intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},applyMatrix4:function(t){return this.isEmpty()?this:(cr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),cr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),cr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),cr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),cr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),cr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),cr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),cr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(cr),this)},translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}});function Bm(t,e,n,i,r){var a,s;for(a=0,s=t.length-3;a<=s;a+=3){Sa.fromArray(t,a);var o=r.x*Math.abs(Sa.x)+r.y*Math.abs(Sa.y)+r.z*Math.abs(Sa.z),l=e.dot(Sa),c=n.dot(Sa),h=i.dot(Sa);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>o)return!1}return!0}var G2=new pi;function hr(t,e){this.center=t!==void 0?t:new z,this.radius=e!==void 0?e:0}Object.assign(hr.prototype,{set:function(t,e){return this.center.copy(t),this.radius=e,this},setFromPoints:function(t,e){var n=this.center;e!==void 0?n.copy(e):G2.setFromPoints(t).getCenter(n);for(var i=0,r=0,a=t.length;r<a;r++)i=Math.max(i,n.distanceToSquared(t[r]));return this.radius=Math.sqrt(i),this},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.center.copy(t.center),this.radius=t.radius,this},empty:function(){return this.radius<=0},containsPoint:function(t){return t.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(t){return t.distanceTo(this.center)-this.radius},intersectsSphere:function(t){var e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e},intersectsBox:function(t){return t.intersectsSphere(this)},intersectsPlane:function(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius},clampPoint:function(t,e){var n=this.center.distanceToSquared(t);return e===void 0&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),e=new z),e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e},getBoundingBox:function(t){return t===void 0&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),t=new pi),t.set(this.center,this.center),t.expandByScalar(this.radius),t},applyMatrix4:function(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this},translate:function(t){return this.center.add(t),this},equals:function(t){return t.center.equals(this.center)&&t.radius===this.radius}});var ur=new z,Om=new z,Zu=new z,Yr=new z,Nm=new z,Ju=new z,zm=new z;function Ea(t,e){this.origin=t!==void 0?t:new z,this.direction=e!==void 0?e:new z(0,0,-1)}Object.assign(Ea.prototype,{set:function(t,e){return this.origin.copy(t),this.direction.copy(e),this},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this},at:function(t,e){return e===void 0&&(console.warn("THREE.Ray: .at() target is now required"),e=new z),e.copy(this.direction).multiplyScalar(t).add(this.origin)},lookAt:function(t){return this.direction.copy(t).sub(this.origin).normalize(),this},recast:function(t){return this.origin.copy(this.at(t,ur)),this},closestPointToPoint:function(t,e){e===void 0&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),e=new z),e.subVectors(t,this.origin);var n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)},distanceToPoint:function(t){return Math.sqrt(this.distanceSqToPoint(t))},distanceSqToPoint:function(t){var e=ur.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(ur.copy(this.direction).multiplyScalar(e).add(this.origin),ur.distanceToSquared(t))},distanceSqToSegment:function(t,e,n,i){Om.copy(t).add(e).multiplyScalar(.5),Zu.copy(e).sub(t).normalize(),Yr.copy(this.origin).sub(Om);var r=t.distanceTo(e)*.5,a=-this.direction.dot(Zu),s=Yr.dot(this.direction),o=-Yr.dot(Zu),l=Yr.lengthSq(),c=Math.abs(1-a*a),h,u,f,d;if(c>0)if(h=a*o-s,u=a*s-o,d=r*c,h>=0)if(u>=-d)if(u<=d){var p=1/c;h*=p,u*=p,f=h*(h+a*u+2*s)+u*(a*h+u+2*o)+l}else u=r,h=Math.max(0,-(a*u+s)),f=-h*h+u*(u+2*o)+l;else u=-r,h=Math.max(0,-(a*u+s)),f=-h*h+u*(u+2*o)+l;else u<=-d?(h=Math.max(0,-(-a*r+s)),u=h>0?-r:Math.min(Math.max(-r,-o),r),f=-h*h+u*(u+2*o)+l):u<=d?(h=0,u=Math.min(Math.max(-r,-o),r),f=u*(u+2*o)+l):(h=Math.max(0,-(a*r+s)),u=h>0?r:Math.min(Math.max(-r,-o),r),f=-h*h+u*(u+2*o)+l);else u=a>0?-r:r,h=Math.max(0,-(a*u+s)),f=-h*h+u*(u+2*o)+l;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),i&&i.copy(Zu).multiplyScalar(u).add(Om),f},intersectSphere:function(t,e){ur.subVectors(t.center,this.origin);var n=ur.dot(this.direction),i=ur.dot(ur)-n*n,r=t.radius*t.radius;if(i>r)return null;var a=Math.sqrt(r-i),s=n-a,o=n+a;return s<0&&o<0?null:s<0?this.at(o,e):this.at(s,e)},intersectsSphere:function(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius},distanceToPlane:function(t){var e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;var n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null},intersectPlane:function(t,e){var n=this.distanceToPlane(t);return n===null?null:this.at(n,e)},intersectsPlane:function(t){var e=t.distanceToPoint(this.origin);if(e===0)return!0;var n=t.normal.dot(this.direction);return n*e<0},intersectBox:function(t,e){var n,i,r,a,s,o,l=1/this.direction.x,c=1/this.direction.y,h=1/this.direction.z,u=this.origin;return l>=0?(n=(t.min.x-u.x)*l,i=(t.max.x-u.x)*l):(n=(t.max.x-u.x)*l,i=(t.min.x-u.x)*l),c>=0?(r=(t.min.y-u.y)*c,a=(t.max.y-u.y)*c):(r=(t.max.y-u.y)*c,a=(t.min.y-u.y)*c),n>a||r>i||((r>n||n!==n)&&(n=r),(a<i||i!==i)&&(i=a),h>=0?(s=(t.min.z-u.z)*h,o=(t.max.z-u.z)*h):(s=(t.max.z-u.z)*h,o=(t.min.z-u.z)*h),n>o||s>i)||((s>n||n!==n)&&(n=s),(o<i||i!==i)&&(i=o),i<0)?null:this.at(n>=0?n:i,e)},intersectsBox:function(t){return this.intersectBox(t,ur)!==null},intersectTriangle:function(t,e,n,i,r){Nm.subVectors(e,t),Ju.subVectors(n,t),zm.crossVectors(Nm,Ju);var a=this.direction.dot(zm),s;if(a>0){if(i)return null;s=1}else if(a<0)s=-1,a=-a;else return null;Yr.subVectors(this.origin,t);var o=s*this.direction.dot(Ju.crossVectors(Yr,Ju));if(o<0)return null;var l=s*this.direction.dot(Nm.cross(Yr));if(l<0||o+l>a)return null;var c=-s*Yr.dot(zm);return c<0?null:this.at(c/a,r)},applyMatrix4:function(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this},equals:function(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}});var Um=new z,H2=new z,V2=new yn;function mi(t,e){this.normal=t!==void 0?t:new z(1,0,0),this.constant=e!==void 0?e:0}Object.assign(mi.prototype,{isPlane:!0,set:function(t,e){return this.normal.copy(t),this.constant=e,this},setComponents:function(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this},setFromNormalAndCoplanarPoint:function(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this},setFromCoplanarPoints:function(t,e,n){var i=Um.subVectors(n,e).cross(H2.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.normal.copy(t.normal),this.constant=t.constant,this},normalize:function(){var t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(t){return this.normal.dot(t)+this.constant},distanceToSphere:function(t){return this.distanceToPoint(t.center)-t.radius},projectPoint:function(t,e){return e===void 0&&(console.warn("THREE.Plane: .projectPoint() target is now required"),e=new z),e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)},intersectLine:function(t,e){e===void 0&&(console.warn("THREE.Plane: .intersectLine() target is now required"),e=new z);var n=t.delta(Um),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):void 0;var r=-(t.start.dot(this.normal)+this.constant)/i;if(!(r<0||r>1))return e.copy(n).multiplyScalar(r).add(t.start)},intersectsLine:function(t){var e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0},intersectsBox:function(t){return t.intersectsPlane(this)},intersectsSphere:function(t){return t.intersectsPlane(this)},coplanarPoint:function(t){return t===void 0&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),t=new z),t.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(t,e){var n=e||V2.getNormalMatrix(t),i=this.coplanarPoint(Um).applyMatrix4(t),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this},translate:function(t){return this.constant-=t.dot(this.normal),this},equals:function(t){return t.normal.equals(this.normal)&&t.constant===this.constant}});var gi=new z,fr=new z,Gm=new z,dr=new z,xo=new z,_o=new z,fM=new z,Hm=new z,Vm=new z,km=new z;function ln(t,e,n){this.a=t!==void 0?t:new z,this.b=e!==void 0?e:new z,this.c=n!==void 0?n:new z}Object.assign(ln,{getNormal:function(t,e,n,i){i===void 0&&(console.warn("THREE.Triangle: .getNormal() target is now required"),i=new z),i.subVectors(n,e),gi.subVectors(t,e),i.cross(gi);var r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)},getBarycoord:function(t,e,n,i,r){gi.subVectors(i,e),fr.subVectors(n,e),Gm.subVectors(t,e);var a=gi.dot(gi),s=gi.dot(fr),o=gi.dot(Gm),l=fr.dot(fr),c=fr.dot(Gm),h=a*l-s*s;if(r===void 0&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),r=new z),h===0)return r.set(-2,-1,-1);var u=1/h,f=(l*o-s*c)*u,d=(a*c-s*o)*u;return r.set(1-f-d,d,f)},containsPoint:function(t,e,n,i){return ln.getBarycoord(t,e,n,i,dr),dr.x>=0&&dr.y>=0&&dr.x+dr.y<=1},getUV:function(t,e,n,i,r,a,s,o){return this.getBarycoord(t,e,n,i,dr),o.set(0,0),o.addScaledVector(r,dr.x),o.addScaledVector(a,dr.y),o.addScaledVector(s,dr.z),o},isFrontFacing:function(t,e,n,i){return gi.subVectors(n,e),fr.subVectors(t,e),gi.cross(fr).dot(i)<0}});Object.assign(ln.prototype,{set:function(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this},setFromPointsAndIndices:function(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this},getArea:function(){return gi.subVectors(this.c,this.b),fr.subVectors(this.a,this.b),gi.cross(fr).length()*.5},getMidpoint:function(t){return t===void 0&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),t=new z),t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},getNormal:function(t){return ln.getNormal(this.a,this.b,this.c,t)},getPlane:function(t){return t===void 0&&(console.warn("THREE.Triangle: .getPlane() target is now required"),t=new mi),t.setFromCoplanarPoints(this.a,this.b,this.c)},getBarycoord:function(t,e){return ln.getBarycoord(t,this.a,this.b,this.c,e)},getUV:function(t,e,n,i,r){return ln.getUV(t,this.a,this.b,this.c,e,n,i,r)},containsPoint:function(t){return ln.containsPoint(t,this.a,this.b,this.c)},isFrontFacing:function(t){return ln.isFrontFacing(this.a,this.b,this.c,t)},intersectsBox:function(t){return t.intersectsTriangle(this)},closestPointToPoint:function(t,e){e===void 0&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),e=new z);var n=this.a,i=this.b,r=this.c,a,s;xo.subVectors(i,n),_o.subVectors(r,n),Hm.subVectors(t,n);var o=xo.dot(Hm),l=_o.dot(Hm);if(o<=0&&l<=0)return e.copy(n);Vm.subVectors(t,i);var c=xo.dot(Vm),h=_o.dot(Vm);if(c>=0&&h<=c)return e.copy(i);var u=o*h-c*l;if(u<=0&&o>=0&&c<=0)return a=o/(o-c),e.copy(n).addScaledVector(xo,a);km.subVectors(t,r);var f=xo.dot(km),d=_o.dot(km);if(d>=0&&f<=d)return e.copy(r);var p=f*l-o*d;if(p<=0&&l>=0&&d<=0)return s=l/(l-d),e.copy(n).addScaledVector(_o,s);var m=c*d-f*h;if(m<=0&&h-c>=0&&f-d>=0)return fM.subVectors(r,i),s=(h-c)/(h-c+(f-d)),e.copy(i).addScaledVector(fM,s);var x=1/(m+p+u);return a=p*x,s=u*x,e.copy(n).addScaledVector(xo,a).addScaledVector(_o,s)},equals:function(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}});var dM={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},vi={h:0,s:0,l:0},Ku={h:0,s:0,l:0};function Ve(t,e,n){return e===void 0&&n===void 0?this.set(t):this.setRGB(t,e,n)}function Wm(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+(e-t)*6*n:n<1/2?e:n<2/3?t+(e-t)*6*(2/3-n):t}function $m(t){return t<.04045?t*.0773993808:Math.pow(t*.9478672986+.0521327014,2.4)}function jm(t){return t<.0031308?t*12.92:1.055*Math.pow(t,.41666)-.055}Object.assign(Ve.prototype,{isColor:!0,r:1,g:1,b:1,set:function(t){return t&&t.isColor?this.copy(t):typeof t=="number"?this.setHex(t):typeof t=="string"&&this.setStyle(t),this},setScalar:function(t){return this.r=t,this.g=t,this.b=t,this},setHex:function(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,this},setRGB:function(t,e,n){return this.r=t,this.g=e,this.b=n,this},setHSL:function(t,e,n){if(t=it.euclideanModulo(t,1),e=it.clamp(e,0,1),n=it.clamp(n,0,1),e===0)this.r=this.g=this.b=n;else{var i=n<=.5?n*(1+e):n+e-n*e,r=2*n-i;this.r=Wm(r,i,t+1/3),this.g=Wm(r,i,t),this.b=Wm(r,i,t-1/3)}return this},setStyle:function(t){function e(u){u!==void 0&&parseFloat(u)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}var n;if(n=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)){var i,r=n[1],a=n[2];switch(r){case"rgb":case"rgba":if(i=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(i[1],10))/255,this.g=Math.min(255,parseInt(i[2],10))/255,this.b=Math.min(255,parseInt(i[3],10))/255,e(i[5]),this;if(i=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(i[1],10))/100,this.g=Math.min(100,parseInt(i[2],10))/100,this.b=Math.min(100,parseInt(i[3],10))/100,e(i[5]),this;break;case"hsl":case"hsla":if(i=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a)){var s=parseFloat(i[1])/360,o=parseInt(i[2],10)/100,l=parseInt(i[3],10)/100;return e(i[5]),this.setHSL(s,o,l)}break}}else if(n=/^\#([A-Fa-f0-9]+)$/.exec(t)){var c=n[1],h=c.length;if(h===3)return this.r=parseInt(c.charAt(0)+c.charAt(0),16)/255,this.g=parseInt(c.charAt(1)+c.charAt(1),16)/255,this.b=parseInt(c.charAt(2)+c.charAt(2),16)/255,this;if(h===6)return this.r=parseInt(c.charAt(0)+c.charAt(1),16)/255,this.g=parseInt(c.charAt(2)+c.charAt(3),16)/255,this.b=parseInt(c.charAt(4)+c.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this},setColorName:function(t){var e=dM[t];return e!==void 0?this.setHex(e):console.warn("THREE.Color: Unknown color "+t),this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(t){return this.r=t.r,this.g=t.g,this.b=t.b,this},copyGammaToLinear:function(t,e){return e===void 0&&(e=2),this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this},copyLinearToGamma:function(t,e){e===void 0&&(e=2);var n=e>0?1/e:1;return this.r=Math.pow(t.r,n),this.g=Math.pow(t.g,n),this.b=Math.pow(t.b,n),this},convertGammaToLinear:function(t){return this.copyGammaToLinear(this,t),this},convertLinearToGamma:function(t){return this.copyLinearToGamma(this,t),this},copySRGBToLinear:function(t){return this.r=$m(t.r),this.g=$m(t.g),this.b=$m(t.b),this},copyLinearToSRGB:function(t){return this.r=jm(t.r),this.g=jm(t.g),this.b=jm(t.b),this},convertSRGBToLinear:function(){return this.copySRGBToLinear(this),this},convertLinearToSRGB:function(){return this.copyLinearToSRGB(this),this},getHex:function(){return this.r*255<<16^this.g*255<<8^this.b*255<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(t){t===void 0&&(console.warn("THREE.Color: .getHSL() target is now required"),t={h:0,s:0,l:0});var e=this.r,n=this.g,i=this.b,r=Math.max(e,n,i),a=Math.min(e,n,i),s,o,l=(a+r)/2;if(a===r)s=0,o=0;else{var c=r-a;switch(o=l<=.5?c/(r+a):c/(2-r-a),r){case e:s=(n-i)/c+(n<i?6:0);break;case n:s=(i-e)/c+2;break;case i:s=(e-n)/c+4;break}s/=6}return t.h=s,t.s=o,t.l=l,t},getStyle:function(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"},offsetHSL:function(t,e,n){return this.getHSL(vi),vi.h+=t,vi.s+=e,vi.l+=n,this.setHSL(vi.h,vi.s,vi.l),this},add:function(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this},addColors:function(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this},addScalar:function(t){return this.r+=t,this.g+=t,this.b+=t,this},sub:function(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this},multiply:function(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this},multiplyScalar:function(t){return this.r*=t,this.g*=t,this.b*=t,this},lerp:function(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this},lerpHSL:function(t,e){this.getHSL(vi),t.getHSL(Ku);var n=it.lerp(vi.h,Ku.h,e),i=it.lerp(vi.s,Ku.s,e),r=it.lerp(vi.l,Ku.l,e);return this.setHSL(n,i,r),this},equals:function(t){return t.r===this.r&&t.g===this.g&&t.b===this.b},fromArray:function(t,e){return e===void 0&&(e=0),this.r=t[e],this.g=t[e+1],this.b=t[e+2],this},toArray:function(t,e){return t===void 0&&(t=[]),e===void 0&&(e=0),t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t},toJSON:function(){return this.getHex()}});Ve.NAMES=dM;function Mo(t,e,n,i,r,a){this.a=t,this.b=e,this.c=n,this.normal=i&&i.isVector3?i:new z,this.vertexNormals=Array.isArray(i)?i:[],this.color=r&&r.isColor?r:new Ve,this.vertexColors=Array.isArray(r)?r:[],this.materialIndex=a!==void 0?a:0}Object.assign(Mo.prototype,{clone:function(){return new this.constructor().copy(this)},copy:function(t){this.a=t.a,this.b=t.b,this.c=t.c,this.normal.copy(t.normal),this.color.copy(t.color),this.materialIndex=t.materialIndex;for(var e=0,n=t.vertexNormals.length;e<n;e++)this.vertexNormals[e]=t.vertexNormals[e].clone();for(var e=0,n=t.vertexColors.length;e<n;e++)this.vertexColors[e]=t.vertexColors[e].clone();return this}});var k2=0;function Je(){Object.defineProperty(this,"id",{value:k2++}),this.uuid=it.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=lo,this.side=oo,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=dm,this.blendDst=pm,this.blendEquation=ga,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Du,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=rM,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Wu,this.stencilZFail=Wu,this.stencilZPass=Wu,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}Je.prototype=Object.assign(Object.create(Fi.prototype),{constructor:Je,isMaterial:!0,onBeforeCompile:function(){},setValues:function(t){if(t!==void 0)for(var e in t){var n=t[e];if(n===void 0){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if(e==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===om;continue}var i=this[e];if(i===void 0){console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n}},toJSON:function(t){var e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});var n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,n.reflectivity=this.reflectivity,n.refractionRatio=this.refractionRatio,this.combine!==void 0&&(n.combine=this.combine),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.size!==void 0&&(n.size=this.size),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==lo&&(n.blending=this.blending),this.flatShading===!0&&(n.flatShading=this.flatShading),this.side!==oo&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.morphTargets===!0&&(n.morphTargets=!0),this.morphNormals===!0&&(n.morphNormals=!0),this.skinning===!0&&(n.skinning=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(s){var o=[];for(var l in s){var c=s[l];delete c.metadata,o.push(c)}return o}if(e){var r=i(t.textures),a=i(t.images);r.length>0&&(n.textures=r),a.length>0&&(n.images=a)}return n},clone:function(){return new this.constructor().copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.flatShading=t.flatShading,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;var e=t.clippingPlanes,n=null;if(e!==null){var i=e.length;n=new Array(i);for(var r=0;r!==i;++r)n[r]=e[r].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Object.defineProperty(Je.prototype,"needsUpdate",{set:function(t){t===!0&&this.version++}});function ri(t){Je.call(this),this.type="MeshBasicMaterial",this.color=new Ve(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=rc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(t)}ri.prototype=Object.create(Je.prototype);ri.prototype.constructor=ri;ri.prototype.isMeshBasicMaterial=!0;ri.prototype.copy=function(t){return Je.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this};var Tt=new z;function Ke(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n===!0,this.usage=gc,this.updateRange={offset:0,count:-1},this.version=0}Object.defineProperty(Ke.prototype,"needsUpdate",{set:function(t){t===!0&&this.version++}});Object.assign(Ke.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this},copyAt:function(t,e,n){t*=this.itemSize,n*=e.itemSize;for(var i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){for(var e=this.array,n=0,i=0,r=t.length;i<r;i++){var a=t[i];a===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),a=new Ve),e[n++]=a.r,e[n++]=a.g,e[n++]=a.b}return this},copyVector2sArray:function(t){for(var e=this.array,n=0,i=0,r=t.length;i<r;i++){var a=t[i];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),a=new Me),e[n++]=a.x,e[n++]=a.y}return this},copyVector3sArray:function(t){for(var e=this.array,n=0,i=0,r=t.length;i<r;i++){var a=t[i];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),a=new z),e[n++]=a.x,e[n++]=a.y,e[n++]=a.z}return this},copyVector4sArray:function(t){for(var e=this.array,n=0,i=0,r=t.length;i<r;i++){var a=t[i];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),a=new Et),e[n++]=a.x,e[n++]=a.y,e[n++]=a.z,e[n++]=a.w}return this},applyMatrix3:function(t){for(var e=0,n=this.count;e<n;e++)Tt.x=this.getX(e),Tt.y=this.getY(e),Tt.z=this.getZ(e),Tt.applyMatrix3(t),this.setXYZ(e,Tt.x,Tt.y,Tt.z);return this},applyMatrix4:function(t){for(var e=0,n=this.count;e<n;e++)Tt.x=this.getX(e),Tt.y=this.getY(e),Tt.z=this.getZ(e),Tt.applyMatrix4(t),this.setXYZ(e,Tt.x,Tt.y,Tt.z);return this},applyNormalMatrix:function(t){for(var e=0,n=this.count;e<n;e++)Tt.x=this.getX(e),Tt.y=this.getY(e),Tt.z=this.getZ(e),Tt.applyNormalMatrix(t),this.setXYZ(e,Tt.x,Tt.y,Tt.z);return this},transformDirection:function(t){for(var e=0,n=this.count;e<n;e++)Tt.x=this.getX(e),Tt.y=this.getY(e),Tt.z=this.getZ(e),Tt.transformDirection(t),this.setXYZ(e,Tt.x,Tt.y,Tt.z);return this},set:function(t,e){return e===void 0&&(e=0),this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this},setXYZW:function(t,e,n,i,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}});function Mc(t,e,n){Ke.call(this,new Int8Array(t),e,n)}Mc.prototype=Object.create(Ke.prototype);Mc.prototype.constructor=Mc;function wc(t,e,n){Ke.call(this,new Uint8Array(t),e,n)}wc.prototype=Object.create(Ke.prototype);wc.prototype.constructor=wc;function bc(t,e,n){Ke.call(this,new Uint8ClampedArray(t),e,n)}bc.prototype=Object.create(Ke.prototype);bc.prototype.constructor=bc;function Sc(t,e,n){Ke.call(this,new Int16Array(t),e,n)}Sc.prototype=Object.create(Ke.prototype);Sc.prototype.constructor=Sc;function Ta(t,e,n){Ke.call(this,new Uint16Array(t),e,n)}Ta.prototype=Object.create(Ke.prototype);Ta.prototype.constructor=Ta;function Ec(t,e,n){Ke.call(this,new Int32Array(t),e,n)}Ec.prototype=Object.create(Ke.prototype);Ec.prototype.constructor=Ec;function Aa(t,e,n){Ke.call(this,new Uint32Array(t),e,n)}Aa.prototype=Object.create(Ke.prototype);Aa.prototype.constructor=Aa;function ze(t,e,n){Ke.call(this,new Float32Array(t),e,n)}ze.prototype=Object.create(Ke.prototype);ze.prototype.constructor=ze;function Tc(t,e,n){Ke.call(this,new Float64Array(t),e,n)}Tc.prototype=Object.create(Ke.prototype);Tc.prototype.constructor=Tc;function pM(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}Object.assign(pM.prototype,{computeGroups:function(t){for(var e,n=[],i=void 0,r=t.faces,a=0;a<r.length;a++){var s=r[a];s.materialIndex!==i&&(i=s.materialIndex,e!==void 0&&(e.count=a*3-e.start,n.push(e)),e={start:a*3,materialIndex:i})}e!==void 0&&(e.count=a*3-e.start,n.push(e)),this.groups=n},fromGeometry:function(t){var e=t.faces,n=t.vertices,i=t.faceVertexUvs,r=i[0]&&i[0].length>0,a=i[1]&&i[1].length>0,s=t.morphTargets,o=s.length,l;if(o>0){l=[];for(var c=0;c<o;c++)l[c]={name:s[c].name,data:[]};this.morphTargets.position=l}var h=t.morphNormals,u=h.length,f;if(u>0){f=[];for(var c=0;c<u;c++)f[c]={name:h[c].name,data:[]};this.morphTargets.normal=f}var d=t.skinIndices,p=t.skinWeights,m=d.length===n.length,x=p.length===n.length;n.length>0&&e.length===0&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(var c=0;c<e.length;c++){var g=e[c];this.vertices.push(n[g.a],n[g.b],n[g.c]);var v=g.vertexNormals;if(v.length===3)this.normals.push(v[0],v[1],v[2]);else{var b=g.normal;this.normals.push(b,b,b)}var _=g.vertexColors;if(_.length===3)this.colors.push(_[0],_[1],_[2]);else{var M=g.color;this.colors.push(M,M,M)}if(r===!0){var y=i[0][c];y!==void 0?this.uvs.push(y[0],y[1],y[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",c),this.uvs.push(new Me,new Me,new Me))}if(a===!0){var y=i[1][c];y!==void 0?this.uvs2.push(y[0],y[1],y[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",c),this.uvs2.push(new Me,new Me,new Me))}for(var w=0;w<o;w++){var E=s[w].vertices;l[w].data.push(E[g.a],E[g.b],E[g.c])}for(var w=0;w<u;w++){var A=h[w].vertexNormals[c];f[w].data.push(A.a,A.b,A.c)}m&&this.skinIndices.push(d[g.a],d[g.b],d[g.c]),x&&this.skinWeights.push(p[g.a],p[g.b],p[g.c])}return this.computeGroups(t),this.verticesNeedUpdate=t.verticesNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),this}});function mM(t){if(t.length===0)return-1/0;for(var e=t[0],n=1,i=t.length;n<i;++n)t[n]>e&&(e=t[n]);return e}var W2=1,Bi=new ct,Xm=new Ge,wo=new z,$n=new pi,Ac=new pi,Zt=new z;function ke(){Object.defineProperty(this,"id",{value:W2+=2}),this.uuid=it.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}ke.prototype=Object.assign(Object.create(Fi.prototype),{constructor:ke,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){Array.isArray(t)?this.index=new(mM(t)>65535?Aa:Ta)(t,1):this.index=t},getAttribute:function(t){return this.attributes[t]},setAttribute:function(t,e){return this.attributes[t]=e,this},deleteAttribute:function(t){return delete this.attributes[t],this},addGroup:function(t,e,n){this.groups.push({start:t,count:e,materialIndex:n!==void 0?n:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix4:function(t){var e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);var n=this.attributes.normal;if(n!==void 0){var i=new yn().getNormalMatrix(t);n.applyNormalMatrix(i),n.needsUpdate=!0}var r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(t),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this},rotateX:function(t){return Bi.makeRotationX(t),this.applyMatrix4(Bi),this},rotateY:function(t){return Bi.makeRotationY(t),this.applyMatrix4(Bi),this},rotateZ:function(t){return Bi.makeRotationZ(t),this.applyMatrix4(Bi),this},translate:function(t,e,n){return Bi.makeTranslation(t,e,n),this.applyMatrix4(Bi),this},scale:function(t,e,n){return Bi.makeScale(t,e,n),this.applyMatrix4(Bi),this},lookAt:function(t){return Xm.lookAt(t),Xm.updateMatrix(),this.applyMatrix4(Xm.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(wo).negate(),this.translate(wo.x,wo.y,wo.z),this},setFromObject:function(t){var e=t.geometry;if(t.isPoints||t.isLine){var n=new ze(e.vertices.length*3,3),i=new ze(e.colors.length*3,3);if(this.setAttribute("position",n.copyVector3sArray(e.vertices)),this.setAttribute("color",i.copyColorsArray(e.colors)),e.lineDistances&&e.lineDistances.length===e.vertices.length){var r=new ze(e.lineDistances.length,1);this.setAttribute("lineDistance",r.copyArray(e.lineDistances))}e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone())}else t.isMesh&&e&&e.isGeometry&&this.fromGeometry(e);return this},setFromPoints:function(t){for(var e=[],n=0,i=t.length;n<i;n++){var r=t[n];e.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new ze(e,3)),this},updateFromObject:function(t){var e=t.geometry;if(t.isMesh){var n=e.__directGeometry;if(e.elementsNeedUpdate===!0&&(n=void 0,e.elementsNeedUpdate=!1),n===void 0)return this.fromGeometry(e);n.verticesNeedUpdate=e.verticesNeedUpdate,n.normalsNeedUpdate=e.normalsNeedUpdate,n.colorsNeedUpdate=e.colorsNeedUpdate,n.uvsNeedUpdate=e.uvsNeedUpdate,n.groupsNeedUpdate=e.groupsNeedUpdate,e.verticesNeedUpdate=!1,e.normalsNeedUpdate=!1,e.colorsNeedUpdate=!1,e.uvsNeedUpdate=!1,e.groupsNeedUpdate=!1,e=n}var i;return e.verticesNeedUpdate===!0&&(i=this.attributes.position,i!==void 0&&(i.copyVector3sArray(e.vertices),i.needsUpdate=!0),e.verticesNeedUpdate=!1),e.normalsNeedUpdate===!0&&(i=this.attributes.normal,i!==void 0&&(i.copyVector3sArray(e.normals),i.needsUpdate=!0),e.normalsNeedUpdate=!1),e.colorsNeedUpdate===!0&&(i=this.attributes.color,i!==void 0&&(i.copyColorsArray(e.colors),i.needsUpdate=!0),e.colorsNeedUpdate=!1),e.uvsNeedUpdate&&(i=this.attributes.uv,i!==void 0&&(i.copyVector2sArray(e.uvs),i.needsUpdate=!0),e.uvsNeedUpdate=!1),e.lineDistancesNeedUpdate&&(i=this.attributes.lineDistance,i!==void 0&&(i.copyArray(e.lineDistances),i.needsUpdate=!0),e.lineDistancesNeedUpdate=!1),e.groupsNeedUpdate&&(e.computeGroups(t.geometry),this.groups=e.groups,e.groupsNeedUpdate=!1),this},fromGeometry:function(t){return t.__directGeometry=new pM().fromGeometry(t),this.fromDirectGeometry(t.__directGeometry)},fromDirectGeometry:function(t){var e=new Float32Array(t.vertices.length*3);if(this.setAttribute("position",new Ke(e,3).copyVector3sArray(t.vertices)),t.normals.length>0){var n=new Float32Array(t.normals.length*3);this.setAttribute("normal",new Ke(n,3).copyVector3sArray(t.normals))}if(t.colors.length>0){var i=new Float32Array(t.colors.length*3);this.setAttribute("color",new Ke(i,3).copyColorsArray(t.colors))}if(t.uvs.length>0){var r=new Float32Array(t.uvs.length*2);this.setAttribute("uv",new Ke(r,2).copyVector2sArray(t.uvs))}if(t.uvs2.length>0){var a=new Float32Array(t.uvs2.length*2);this.setAttribute("uv2",new Ke(a,2).copyVector2sArray(t.uvs2))}this.groups=t.groups;for(var s in t.morphTargets){for(var o=[],l=t.morphTargets[s],c=0,h=l.length;c<h;c++){var u=l[c],f=new ze(u.data.length*3,3);f.name=u.name,o.push(f.copyVector3sArray(u.data))}this.morphAttributes[s]=o}if(t.skinIndices.length>0){var d=new ze(t.skinIndices.length*4,4);this.setAttribute("skinIndex",d.copyVector4sArray(t.skinIndices))}if(t.skinWeights.length>0){var p=new ze(t.skinWeights.length*4,4);this.setAttribute("skinWeight",p.copyVector4sArray(t.skinWeights))}return t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),this},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new pi);var t=this.attributes.position,e=this.morphAttributes.position;if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(var n=0,i=e.length;n<i;n++){var r=e[n];$n.setFromBufferAttribute(r),this.morphTargetsRelative?(Zt.addVectors(this.boundingBox.min,$n.min),this.boundingBox.expandByPoint(Zt),Zt.addVectors(this.boundingBox.max,$n.max),this.boundingBox.expandByPoint(Zt)):(this.boundingBox.expandByPoint($n.min),this.boundingBox.expandByPoint($n.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new hr);var t=this.attributes.position,e=this.morphAttributes.position;if(t){var n=this.boundingSphere.center;if($n.setFromBufferAttribute(t),e)for(var i=0,r=e.length;i<r;i++){var a=e[i];Ac.setFromBufferAttribute(a),this.morphTargetsRelative?(Zt.addVectors($n.min,Ac.min),$n.expandByPoint(Zt),Zt.addVectors($n.max,Ac.max),$n.expandByPoint(Zt)):($n.expandByPoint(Ac.min),$n.expandByPoint(Ac.max))}$n.getCenter(n);for(var s=0,i=0,r=t.count;i<r;i++)Zt.fromBufferAttribute(t,i),s=Math.max(s,n.distanceToSquared(Zt));if(e)for(var i=0,r=e.length;i<r;i++)for(var a=e[i],o=this.morphTargetsRelative,l=0,c=a.count;l<c;l++)Zt.fromBufferAttribute(a,l),o&&(wo.fromBufferAttribute(t,l),Zt.add(wo)),s=Math.max(s,n.distanceToSquared(Zt));this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeVertexNormals:function(){var t=this.index,e=this.attributes;if(e.position){var n=e.position.array;if(e.normal===void 0)this.setAttribute("normal",new Ke(new Float32Array(n.length),3));else for(var i=e.normal.array,r=0,a=i.length;r<a;r++)i[r]=0;var s=e.normal.array,o,l,c,h=new z,u=new z,f=new z,d=new z,p=new z;if(t)for(var m=t.array,r=0,a=t.count;r<a;r+=3)o=m[r+0]*3,l=m[r+1]*3,c=m[r+2]*3,h.fromArray(n,o),u.fromArray(n,l),f.fromArray(n,c),d.subVectors(f,u),p.subVectors(h,u),d.cross(p),s[o]+=d.x,s[o+1]+=d.y,s[o+2]+=d.z,s[l]+=d.x,s[l+1]+=d.y,s[l+2]+=d.z,s[c]+=d.x,s[c+1]+=d.y,s[c+2]+=d.z;else for(var r=0,a=n.length;r<a;r+=9)h.fromArray(n,r),u.fromArray(n,r+3),f.fromArray(n,r+6),d.subVectors(f,u),p.subVectors(h,u),d.cross(p),s[r]=d.x,s[r+1]=d.y,s[r+2]=d.z,s[r+3]=d.x,s[r+4]=d.y,s[r+5]=d.z,s[r+6]=d.x,s[r+7]=d.y,s[r+8]=d.z;this.normalizeNormals(),e.normal.needsUpdate=!0}},merge:function(t,e){if(!(t&&t.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);return}e===void 0&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));var n=this.attributes;for(var i in n)if(t.attributes[i]!==void 0)for(var r=n[i],a=r.array,s=t.attributes[i],o=s.array,l=s.itemSize*e,c=Math.min(o.length,a.length-l),h=0,u=l;h<c;h++,u++)a[u]=o[h];return this},normalizeNormals:function(){for(var t=this.attributes.normal,e=0,n=t.count;e<n;e++)Zt.x=t.getX(e),Zt.y=t.getY(e),Zt.z=t.getZ(e),Zt.normalize(),t.setXYZ(e,Zt.x,Zt.y,Zt.z)},toNonIndexed:function(){function t(m,x){for(var g=m.array,v=m.itemSize,b=new g.constructor(x.length*v),_=0,M=0,y=0,w=x.length;y<w;y++){_=x[y]*v;for(var E=0;E<v;E++)b[M++]=g[_++]}return new Ke(b,v)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;var e=new ke,n=this.index.array,i=this.attributes;for(var r in i){var a=i[r],s=t(a,n);e.setAttribute(r,s)}var o=this.morphAttributes;for(r in o){for(var l=[],c=o[r],h=0,u=c.length;h<u;h++){var a=c[h],s=t(a,n);l.push(s)}e.morphAttributes[r]=l}e.morphTargetsRelative=this.morphTargetsRelative;for(var f=this.groups,h=0,d=f.length;h<d;h++){var p=f[h];e.addGroup(p.start,p.count,p.materialIndex)}return e},toJSON:function(){var t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){var e=this.parameters;for(var n in e)e[n]!==void 0&&(t[n]=e[n]);return t}t.data={attributes:{}};var i=this.index;i!==null&&(t.data.index={type:i.array.constructor.name,array:Array.prototype.slice.call(i.array)});var r=this.attributes;for(var n in r){var a=r[n],s=a.toJSON();a.name!==""&&(s.name=a.name),t.data.attributes[n]=s}var o={},l=!1;for(var n in this.morphAttributes){for(var c=this.morphAttributes[n],h=[],u=0,f=c.length;u<f;u++){var a=c[u],s=a.toJSON();a.name!==""&&(s.name=a.name),h.push(s)}h.length>0&&(o[n]=h,l=!0)}l&&(t.data.morphAttributes=o,t.data.morphTargetsRelative=this.morphTargetsRelative);var d=this.groups;d.length>0&&(t.data.groups=JSON.parse(JSON.stringify(d)));var p=this.boundingSphere;return p!==null&&(t.data.boundingSphere={center:p.center.toArray(),radius:p.radius}),t},clone:function(){return new ke().copy(this)},copy:function(t){var e,n,i;this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;var r=t.index;r!==null&&this.setIndex(r.clone());var a=t.attributes;for(e in a){var s=a[e];this.setAttribute(e,s.clone())}var o=t.morphAttributes;for(e in o){var l=[],c=o[e];for(n=0,i=c.length;n<i;n++)l.push(c[n].clone());this.morphAttributes[e]=l}this.morphTargetsRelative=t.morphTargetsRelative;var h=t.groups;for(n=0,i=h.length;n<i;n++){var u=h[n];this.addGroup(u.start,u.count,u.materialIndex)}var f=t.boundingBox;f!==null&&(this.boundingBox=f.clone());var d=t.boundingSphere;return d!==null&&(this.boundingSphere=d.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});var gM=new ct,La=new Ea,qm=new hr,Ca=new z,Ra=new z,Pa=new z,Ym=new z,Zm=new z,Jm=new z,Qu=new z,ef=new z,tf=new z,bo=new Me,So=new Me,Eo=new Me,Lc=new z,nf=new z;function Ft(t,e){Ge.call(this),this.type="Mesh",this.geometry=t!==void 0?t:new ke,this.material=e!==void 0?e:new ri,this.updateMorphTargets()}Ft.prototype=Object.assign(Object.create(Ge.prototype),{constructor:Ft,isMesh:!0,copy:function(t){return Ge.prototype.copy.call(this,t),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this},updateMorphTargets:function(){var t=this.geometry,e,n,i;if(t.isBufferGeometry){var r=t.morphAttributes,a=Object.keys(r);if(a.length>0){var s=r[a[0]];if(s!==void 0)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},e=0,n=s.length;e<n;e++)i=s[e].name||String(e),this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=e}}else{var o=t.morphTargets;o!==void 0&&o.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(t,e){var n=this.geometry,i=this.material,r=this.matrixWorld;if(i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),qm.copy(n.boundingSphere),qm.applyMatrix4(r),t.ray.intersectsSphere(qm)!==!1&&(gM.getInverse(r),La.copy(t.ray).applyMatrix4(gM),!(n.boundingBox!==null&&La.intersectsBox(n.boundingBox)===!1)))){var a;if(n.isBufferGeometry){var s,o,l,c=n.index,h=n.attributes.position,u=n.morphAttributes.position,f=n.morphTargetsRelative,d=n.attributes.uv,p=n.attributes.uv2,m=n.groups,x=n.drawRange,g,v,b,_,M,y,w,E;if(c!==null)if(Array.isArray(i))for(g=0,b=m.length;g<b;g++)for(M=m[g],y=i[M.materialIndex],w=Math.max(M.start,x.start),E=Math.min(M.start+M.count,x.start+x.count),v=w,_=E;v<_;v+=3)s=c.getX(v),o=c.getX(v+1),l=c.getX(v+2),a=rf(this,y,t,La,h,u,f,d,p,s,o,l),a&&(a.faceIndex=Math.floor(v/3),a.face.materialIndex=M.materialIndex,e.push(a));else for(w=Math.max(0,x.start),E=Math.min(c.count,x.start+x.count),g=w,b=E;g<b;g+=3)s=c.getX(g),o=c.getX(g+1),l=c.getX(g+2),a=rf(this,i,t,La,h,u,f,d,p,s,o,l),a&&(a.faceIndex=Math.floor(g/3),e.push(a));else if(h!==void 0)if(Array.isArray(i))for(g=0,b=m.length;g<b;g++)for(M=m[g],y=i[M.materialIndex],w=Math.max(M.start,x.start),E=Math.min(M.start+M.count,x.start+x.count),v=w,_=E;v<_;v+=3)s=v,o=v+1,l=v+2,a=rf(this,y,t,La,h,u,f,d,p,s,o,l),a&&(a.faceIndex=Math.floor(v/3),a.face.materialIndex=M.materialIndex,e.push(a));else for(w=Math.max(0,x.start),E=Math.min(h.count,x.start+x.count),g=w,b=E;g<b;g+=3)s=g,o=g+1,l=g+2,a=rf(this,i,t,La,h,u,f,d,p,s,o,l),a&&(a.faceIndex=Math.floor(g/3),e.push(a))}else if(n.isGeometry){var A,L,S,R=Array.isArray(i),D=n.vertices,I=n.faces,F,U=n.faceVertexUvs[0];U.length>0&&(F=U);for(var j=0,Y=I.length;j<Y;j++){var K=I[j],X=R?i[K.materialIndex]:i;if(X!==void 0&&(A=D[K.a],L=D[K.b],S=D[K.c],a=vM(this,X,t,La,A,L,S,Lc),a)){if(F&&F[j]){var q=F[j];bo.copy(q[0]),So.copy(q[1]),Eo.copy(q[2]),a.uv=ln.getUV(Lc,A,L,S,bo,So,Eo,new Me)}a.face=K,a.faceIndex=j,e.push(a)}}}}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});function vM(t,e,n,i,r,a,s,o){var l;if(e.side===nn?l=i.intersectTriangle(s,a,r,!0,o):l=i.intersectTriangle(r,a,s,e.side!==ic,o),l===null)return null;nf.copy(o),nf.applyMatrix4(t.matrixWorld);var c=n.ray.origin.distanceTo(nf);return c<n.near||c>n.far?null:{distance:c,point:nf.clone(),object:t}}function rf(t,e,n,i,r,a,s,o,l,c,h,u){Ca.fromBufferAttribute(r,c),Ra.fromBufferAttribute(r,h),Pa.fromBufferAttribute(r,u);var f=t.morphTargetInfluences;if(e.morphTargets&&a&&f){Qu.set(0,0,0),ef.set(0,0,0),tf.set(0,0,0);for(var d=0,p=a.length;d<p;d++){var m=f[d],x=a[d];m!==0&&(Ym.fromBufferAttribute(x,c),Zm.fromBufferAttribute(x,h),Jm.fromBufferAttribute(x,u),s?(Qu.addScaledVector(Ym,m),ef.addScaledVector(Zm,m),tf.addScaledVector(Jm,m)):(Qu.addScaledVector(Ym.sub(Ca),m),ef.addScaledVector(Zm.sub(Ra),m),tf.addScaledVector(Jm.sub(Pa),m)))}Ca.add(Qu),Ra.add(ef),Pa.add(tf)}var g=vM(t,e,n,i,Ca,Ra,Pa,Lc);if(g){o&&(bo.fromBufferAttribute(o,c),So.fromBufferAttribute(o,h),Eo.fromBufferAttribute(o,u),g.uv=ln.getUV(Lc,Ca,Ra,Pa,bo,So,Eo,new Me)),l&&(bo.fromBufferAttribute(l,c),So.fromBufferAttribute(l,h),Eo.fromBufferAttribute(l,u),g.uv2=ln.getUV(Lc,Ca,Ra,Pa,bo,So,Eo,new Me));var v=new Mo(c,h,u);ln.getNormal(Ca,Ra,Pa,v.normal),g.face=v}return g}var $2=0,Oi=new ct,Km=new Ge,af=new z;function Qe(){Object.defineProperty(this,"id",{value:$2+=2}),this.uuid=it.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}Qe.prototype=Object.assign(Object.create(Fi.prototype),{constructor:Qe,isGeometry:!0,applyMatrix4:function(t){for(var e=new yn().getNormalMatrix(t),n=0,i=this.vertices.length;n<i;n++){var r=this.vertices[n];r.applyMatrix4(t)}for(var n=0,i=this.faces.length;n<i;n++){var a=this.faces[n];a.normal.applyMatrix3(e).normalize();for(var s=0,o=a.vertexNormals.length;s<o;s++)a.vertexNormals[s].applyMatrix3(e).normalize()}return this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(t){return Oi.makeRotationX(t),this.applyMatrix4(Oi),this},rotateY:function(t){return Oi.makeRotationY(t),this.applyMatrix4(Oi),this},rotateZ:function(t){return Oi.makeRotationZ(t),this.applyMatrix4(Oi),this},translate:function(t,e,n){return Oi.makeTranslation(t,e,n),this.applyMatrix4(Oi),this},scale:function(t,e,n){return Oi.makeScale(t,e,n),this.applyMatrix4(Oi),this},lookAt:function(t){return Km.lookAt(t),Km.updateMatrix(),this.applyMatrix4(Km.matrix),this},fromBufferGeometry:function(t){var e=this,n=t.index!==null?t.index.array:void 0,i=t.attributes;if(i.position===void 0)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;var r=i.position.array,a=i.normal!==void 0?i.normal.array:void 0,s=i.color!==void 0?i.color.array:void 0,o=i.uv!==void 0?i.uv.array:void 0,l=i.uv2!==void 0?i.uv2.array:void 0;l!==void 0&&(this.faceVertexUvs[1]=[]);for(var c=0;c<r.length;c+=3)e.vertices.push(new z().fromArray(r,c)),s!==void 0&&e.colors.push(new Ve().fromArray(s,c));function h(g,v,b,_){var M=s===void 0?[]:[e.colors[g].clone(),e.colors[v].clone(),e.colors[b].clone()],y=a===void 0?[]:[new z().fromArray(a,g*3),new z().fromArray(a,v*3),new z().fromArray(a,b*3)],w=new Mo(g,v,b,y,M,_);e.faces.push(w),o!==void 0&&e.faceVertexUvs[0].push([new Me().fromArray(o,g*2),new Me().fromArray(o,v*2),new Me().fromArray(o,b*2)]),l!==void 0&&e.faceVertexUvs[1].push([new Me().fromArray(l,g*2),new Me().fromArray(l,v*2),new Me().fromArray(l,b*2)])}var u=t.groups;if(u.length>0)for(var c=0;c<u.length;c++)for(var f=u[c],d=f.start,p=f.count,m=d,x=d+p;m<x;m+=3)n!==void 0?h(n[m],n[m+1],n[m+2],f.materialIndex):h(m,m+1,m+2,f.materialIndex);else if(n!==void 0)for(var c=0;c<n.length;c+=3)h(n[c],n[c+1],n[c+2]);else for(var c=0;c<r.length/3;c+=3)h(c,c+1,c+2);return this.computeFaceNormals(),t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(af).negate(),this.translate(af.x,af.y,af.z),this},normalize:function(){this.computeBoundingSphere();var t=this.boundingSphere.center,e=this.boundingSphere.radius,n=e===0?1:1/e,i=new ct;return i.set(n,0,0,-n*t.x,0,n,0,-n*t.y,0,0,n,-n*t.z,0,0,0,1),this.applyMatrix4(i),this},computeFaceNormals:function(){for(var t=new z,e=new z,n=0,i=this.faces.length;n<i;n++){var r=this.faces[n],a=this.vertices[r.a],s=this.vertices[r.b],o=this.vertices[r.c];t.subVectors(o,s),e.subVectors(a,s),t.cross(e),t.normalize(),r.normal.copy(t)}},computeVertexNormals:function(t){t===void 0&&(t=!0);var e,n,i,r,a,s;for(s=new Array(this.vertices.length),e=0,n=this.vertices.length;e<n;e++)s[e]=new z;if(t){var o,l,c,h=new z,u=new z;for(i=0,r=this.faces.length;i<r;i++)a=this.faces[i],o=this.vertices[a.a],l=this.vertices[a.b],c=this.vertices[a.c],h.subVectors(c,l),u.subVectors(o,l),h.cross(u),s[a.a].add(h),s[a.b].add(h),s[a.c].add(h)}else for(this.computeFaceNormals(),i=0,r=this.faces.length;i<r;i++)a=this.faces[i],s[a.a].add(a.normal),s[a.b].add(a.normal),s[a.c].add(a.normal);for(e=0,n=this.vertices.length;e<n;e++)s[e].normalize();for(i=0,r=this.faces.length;i<r;i++){a=this.faces[i];var f=a.vertexNormals;f.length===3?(f[0].copy(s[a.a]),f[1].copy(s[a.b]),f[2].copy(s[a.c])):(f[0]=s[a.a].clone(),f[1]=s[a.b].clone(),f[2]=s[a.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var t,e,n;for(this.computeFaceNormals(),t=0,e=this.faces.length;t<e;t++){n=this.faces[t];var i=n.vertexNormals;i.length===3?(i[0].copy(n.normal),i[1].copy(n.normal),i[2].copy(n.normal)):(i[0]=n.normal.clone(),i[1]=n.normal.clone(),i[2]=n.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var t,e,n,i,r;for(n=0,i=this.faces.length;n<i;n++)for(r=this.faces[n],r.__originalFaceNormal?r.__originalFaceNormal.copy(r.normal):r.__originalFaceNormal=r.normal.clone(),r.__originalVertexNormals||(r.__originalVertexNormals=[]),t=0,e=r.vertexNormals.length;t<e;t++)r.__originalVertexNormals[t]?r.__originalVertexNormals[t].copy(r.vertexNormals[t]):r.__originalVertexNormals[t]=r.vertexNormals[t].clone();var a=new Qe;for(a.faces=this.faces,t=0,e=this.morphTargets.length;t<e;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];var s=this.morphNormals[t].faceNormals,o=this.morphNormals[t].vertexNormals,c,h;for(n=0,i=this.faces.length;n<i;n++)c=new z,h={a:new z,b:new z,c:new z},s.push(c),o.push(h)}var l=this.morphNormals[t];a.vertices=this.morphTargets[t].vertices,a.computeFaceNormals(),a.computeVertexNormals();var c,h;for(n=0,i=this.faces.length;n<i;n++)r=this.faces[n],c=l.faceNormals[n],h=l.vertexNormals[n],c.copy(r.normal),h.a.copy(r.vertexNormals[0]),h.b.copy(r.vertexNormals[1]),h.c.copy(r.vertexNormals[2])}for(n=0,i=this.faces.length;n<i;n++)r=this.faces[n],r.normal=r.__originalFaceNormal,r.vertexNormals=r.__originalVertexNormals},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new pi),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new hr),this.boundingSphere.setFromPoints(this.vertices)},merge:function(t,e,n){if(!(t&&t.isGeometry)){console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",t);return}var i,r=this.vertices.length,a=this.vertices,s=t.vertices,o=this.faces,l=t.faces,c=this.colors,h=t.colors;n===void 0&&(n=0),e!==void 0&&(i=new yn().getNormalMatrix(e));for(var u=0,f=s.length;u<f;u++){var d=s[u],p=d.clone();e!==void 0&&p.applyMatrix4(e),a.push(p)}for(var u=0,f=h.length;u<f;u++)c.push(h[u].clone());for(u=0,f=l.length;u<f;u++){var m=l[u],x,g,v,b=m.vertexNormals,_=m.vertexColors;x=new Mo(m.a+r,m.b+r,m.c+r),x.normal.copy(m.normal),i!==void 0&&x.normal.applyMatrix3(i).normalize();for(var M=0,y=b.length;M<y;M++)g=b[M].clone(),i!==void 0&&g.applyMatrix3(i).normalize(),x.vertexNormals.push(g);x.color.copy(m.color);for(var M=0,y=_.length;M<y;M++)v=_[M],x.vertexColors.push(v.clone());x.materialIndex=m.materialIndex+n,o.push(x)}for(var u=0,f=t.faceVertexUvs.length;u<f;u++){var w=t.faceVertexUvs[u];this.faceVertexUvs[u]===void 0&&(this.faceVertexUvs[u]=[]);for(var M=0,y=w.length;M<y;M++){for(var E=w[M],A=[],L=0,S=E.length;L<S;L++)A.push(E[L].clone());this.faceVertexUvs[u].push(A)}}},mergeMesh:function(t){if(!(t&&t.isMesh)){console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",t);return}t.matrixAutoUpdate&&t.updateMatrix(),this.merge(t.geometry,t.matrix)},mergeVertices:function(){var t={},e=[],n=[],i,r,a=4,s=Math.pow(10,a),o,l,c,h,u,f;for(o=0,l=this.vertices.length;o<l;o++)i=this.vertices[o],r=Math.round(i.x*s)+"_"+Math.round(i.y*s)+"_"+Math.round(i.z*s),t[r]===void 0?(t[r]=o,e.push(this.vertices[o]),n[o]=e.length-1):n[o]=n[t[r]];var d=[];for(o=0,l=this.faces.length;o<l;o++){c=this.faces[o],c.a=n[c.a],c.b=n[c.b],c.c=n[c.c],h=[c.a,c.b,c.c];for(var p=0;p<3;p++)if(h[p]===h[(p+1)%3]){d.push(o);break}}for(o=d.length-1;o>=0;o--){var m=d[o];for(this.faces.splice(m,1),u=0,f=this.faceVertexUvs.length;u<f;u++)this.faceVertexUvs[u].splice(m,1)}var x=this.vertices.length-e.length;return this.vertices=e,x},setFromPoints:function(t){this.vertices=[];for(var e=0,n=t.length;e<n;e++){var i=t[e];this.vertices.push(new z(i.x,i.y,i.z||0))}return this},sortFacesByMaterialIndex:function(){for(var t=this.faces,e=t.length,n=0;n<e;n++)t[n]._id=n;function i(c,h){return c.materialIndex-h.materialIndex}t.sort(i);var r=this.faceVertexUvs[0],a=this.faceVertexUvs[1],s,o;r&&r.length===e&&(s=[]),a&&a.length===e&&(o=[]);for(var n=0;n<e;n++){var l=t[n]._id;s&&s.push(r[l]),o&&o.push(a[l])}s&&(this.faceVertexUvs[0]=s),o&&(this.faceVertexUvs[1]=o)},toJSON:function(){var t={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),this.parameters!==void 0){var e=this.parameters;for(var n in e)e[n]!==void 0&&(t[n]=e[n]);return t}for(var i=[],r=0;r<this.vertices.length;r++){var a=this.vertices[r];i.push(a.x,a.y,a.z)}for(var s=[],o=[],l={},c=[],h={},u=[],f={},r=0;r<this.faces.length;r++){var d=this.faces[r],p=!0,m=!1,x=this.faceVertexUvs[0][r]!==void 0,g=d.normal.length()>0,v=d.vertexNormals.length>0,b=d.color.r!==1||d.color.g!==1||d.color.b!==1,_=d.vertexColors.length>0,M=0;if(M=A(M,0,0),M=A(M,1,p),M=A(M,2,m),M=A(M,3,x),M=A(M,4,g),M=A(M,5,v),M=A(M,6,b),M=A(M,7,_),s.push(M),s.push(d.a,d.b,d.c),s.push(d.materialIndex),x){var y=this.faceVertexUvs[0][r];s.push(R(y[0]),R(y[1]),R(y[2]))}if(g&&s.push(L(d.normal)),v){var w=d.vertexNormals;s.push(L(w[0]),L(w[1]),L(w[2]))}if(b&&s.push(S(d.color)),_){var E=d.vertexColors;s.push(S(E[0]),S(E[1]),S(E[2]))}}function A(D,I,F){return F?D|1<<I:D&~(1<<I)}function L(D){var I=D.x.toString()+D.y.toString()+D.z.toString();return l[I]!==void 0||(l[I]=o.length/3,o.push(D.x,D.y,D.z)),l[I]}function S(D){var I=D.r.toString()+D.g.toString()+D.b.toString();return h[I]!==void 0||(h[I]=c.length,c.push(D.getHex())),h[I]}function R(D){var I=D.x.toString()+D.y.toString();return f[I]!==void 0||(f[I]=u.length/2,u.push(D.x,D.y)),f[I]}return t.data={},t.data.vertices=i,t.data.normals=o,c.length>0&&(t.data.colors=c),u.length>0&&(t.data.uvs=[u]),t.data.faces=s,t},clone:function(){return new Qe().copy(this)},copy:function(t){var e,n,i,r,a,s;this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;var o=t.vertices;for(e=0,n=o.length;e<n;e++)this.vertices.push(o[e].clone());var l=t.colors;for(e=0,n=l.length;e<n;e++)this.colors.push(l[e].clone());var c=t.faces;for(e=0,n=c.length;e<n;e++)this.faces.push(c[e].clone());for(e=0,n=t.faceVertexUvs.length;e<n;e++){var h=t.faceVertexUvs[e];for(this.faceVertexUvs[e]===void 0&&(this.faceVertexUvs[e]=[]),i=0,r=h.length;i<r;i++){var u=h[i],f=[];for(a=0,s=u.length;a<s;a++){var d=u[a];f.push(d.clone())}this.faceVertexUvs[e].push(f)}}var p=t.morphTargets;for(e=0,n=p.length;e<n;e++){var m={};if(m.name=p[e].name,p[e].vertices!==void 0)for(m.vertices=[],i=0,r=p[e].vertices.length;i<r;i++)m.vertices.push(p[e].vertices[i].clone());if(p[e].normals!==void 0)for(m.normals=[],i=0,r=p[e].normals.length;i<r;i++)m.normals.push(p[e].normals[i].clone());this.morphTargets.push(m)}var x=t.morphNormals;for(e=0,n=x.length;e<n;e++){var g={};if(x[e].vertexNormals!==void 0)for(g.vertexNormals=[],i=0,r=x[e].vertexNormals.length;i<r;i++){var v=x[e].vertexNormals[i],b={};b.a=v.a.clone(),b.b=v.b.clone(),b.c=v.c.clone(),g.vertexNormals.push(b)}if(x[e].faceNormals!==void 0)for(g.faceNormals=[],i=0,r=x[e].faceNormals.length;i<r;i++)g.faceNormals.push(x[e].faceNormals[i].clone());this.morphNormals.push(g)}var _=t.skinWeights;for(e=0,n=_.length;e<n;e++)this.skinWeights.push(_[e].clone());var M=t.skinIndices;for(e=0,n=M.length;e<n;e++)this.skinIndices.push(M[e].clone());var y=t.lineDistances;for(e=0,n=y.length;e<n;e++)this.lineDistances.push(y[e]);var w=t.boundingBox;w!==null&&(this.boundingBox=w.clone());var E=t.boundingSphere;return E!==null&&(this.boundingSphere=E.clone()),this.elementsNeedUpdate=t.elementsNeedUpdate,this.verticesNeedUpdate=t.verticesNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.lineDistancesNeedUpdate=t.lineDistancesNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});class Qm extends Qe{constructor(e,n,i,r,a,s){super();this.type="BoxGeometry",this.parameters={width:e,height:n,depth:i,widthSegments:r,heightSegments:a,depthSegments:s},this.fromBufferGeometry(new Cc(e,n,i,r,a,s)),this.mergeVertices()}}class Cc extends ke{constructor(e,n,i,r,a,s){super();this.type="BoxBufferGeometry",this.parameters={width:e,height:n,depth:i,widthSegments:r,heightSegments:a,depthSegments:s};var o=this;e=e||1,n=n||1,i=i||1,r=Math.floor(r)||1,a=Math.floor(a)||1,s=Math.floor(s)||1;var l=[],c=[],h=[],u=[],f=0,d=0;p("z","y","x",-1,-1,i,n,e,s,a,0),p("z","y","x",1,-1,i,n,-e,s,a,1),p("x","z","y",1,1,e,i,n,r,s,2),p("x","z","y",1,-1,e,i,-n,r,s,3),p("x","y","z",1,-1,e,n,i,r,a,4),p("x","y","z",-1,-1,e,n,-i,r,a,5),this.setIndex(l),this.setAttribute("position",new ze(c,3)),this.setAttribute("normal",new ze(h,3)),this.setAttribute("uv",new ze(u,2));function p(m,x,g,v,b,_,M,y,w,E,A){var L=_/w,S=M/E,R=_/2,D=M/2,I=y/2,F=w+1,U=E+1,j=0,Y=0,K,X,q=new z;for(X=0;X<U;X++){var he=X*S-D;for(K=0;K<F;K++){var Se=K*L-R;q[m]=Se*v,q[x]=he*b,q[g]=I,c.push(q.x,q.y,q.z),q[m]=0,q[x]=0,q[g]=y>0?1:-1,h.push(q.x,q.y,q.z),u.push(K/w),u.push(1-X/E),j+=1}}for(X=0;X<E;X++)for(K=0;K<w;K++){var _e=f+K+F*X,Z=f+K+F*(X+1),ie=f+(K+1)+F*(X+1),Le=f+(K+1)+F*X;l.push(_e,Z,Le),l.push(Z,ie,Le),Y+=6}o.addGroup(d,Y,A),d+=Y,f+=j}}}function To(t){var e={};for(var n in t){e[n]={};for(var i in t[n]){var r=t[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture)?e[n][i]=r.clone():Array.isArray(r)?e[n][i]=r.slice():e[n][i]=r}}return e}function xn(t){for(var e={},n=0;n<t.length;n++){var i=To(t[n]);for(var r in i)e[r]=i[r]}return e}var yM={clone:To,merge:xn},j2=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,X2=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;function Dn(t){Je.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=j2,this.fragmentShader=X2,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,t!==void 0&&(t.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}Dn.prototype=Object.create(Je.prototype);Dn.prototype.constructor=Dn;Dn.prototype.isShaderMaterial=!0;Dn.prototype.copy=function(t){return Je.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=To(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=t.extensions,this};Dn.prototype.toJSON=function(t){var e=Je.prototype.toJSON.call(this,t);e.uniforms={};for(var n in this.uniforms){var i=this.uniforms[n],r=i.value;r&&r.isTexture?e.uniforms[n]={type:"t",value:r.toJSON(t).uuid}:r&&r.isColor?e.uniforms[n]={type:"c",value:r.getHex()}:r&&r.isVector2?e.uniforms[n]={type:"v2",value:r.toArray()}:r&&r.isVector3?e.uniforms[n]={type:"v3",value:r.toArray()}:r&&r.isVector4?e.uniforms[n]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?e.uniforms[n]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?e.uniforms[n]={type:"m4",value:r.toArray()}:e.uniforms[n]={value:r}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;var a={};for(var s in this.extensions)this.extensions[s]===!0&&(a[s]=!0);return Object.keys(a).length>0&&(e.extensions=a),e};function Ni(){Ge.call(this),this.type="Camera",this.matrixWorldInverse=new ct,this.projectionMatrix=new ct,this.projectionMatrixInverse=new ct}Ni.prototype=Object.assign(Object.create(Ge.prototype),{constructor:Ni,isCamera:!0,copy:function(t,e){return Ge.prototype.copy.call(this,t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this},getWorldDirection:function(t){t===void 0&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),t=new z),this.updateMatrixWorld(!0);var e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()},updateMatrixWorld:function(t){Ge.prototype.updateMatrixWorld.call(this,t),this.matrixWorldInverse.getInverse(this.matrixWorld)},updateWorldMatrix:function(t,e){Ge.prototype.updateWorldMatrix.call(this,t,e),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return new this.constructor().copy(this)}});function Jt(t,e,n,i){Ni.call(this),this.type="PerspectiveCamera",this.fov=t!==void 0?t:50,this.zoom=1,this.near=n!==void 0?n:.1,this.far=i!==void 0?i:2e3,this.focus=10,this.aspect=e!==void 0?e:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}Jt.prototype=Object.assign(Object.create(Ni.prototype),{constructor:Jt,isPerspectiveCamera:!0,copy:function(t,e){return Ni.prototype.copy.call(this,t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},setFocalLength:function(t){var e=.5*this.getFilmHeight()/t;this.fov=it.RAD2DEG*2*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){var t=Math.tan(it.DEG2RAD*.5*this.fov);return .5*this.getFilmHeight()/t},getEffectiveFOV:function(){return it.RAD2DEG*2*Math.atan(Math.tan(it.DEG2RAD*.5*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(t,e,n,i,r,a){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var t=this.near,e=t*Math.tan(it.DEG2RAD*.5*this.fov)/this.zoom,n=2*e,i=this.aspect*n,r=-.5*i,a=this.view;if(this.view!==null&&this.view.enabled){var s=a.fullWidth,o=a.fullHeight;r+=a.offsetX*i/s,e-=a.offsetY*n/o,i*=a.width/s,n*=a.height/o}var l=this.filmOffset;l!==0&&(r+=t*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-n,t,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(t){var e=Ge.prototype.toJSON.call(this,t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}});var Ao=90,Lo=1;function Co(t,e,n,i){Ge.call(this),this.type="CubeCamera";var r=new Jt(Ao,Lo,t,e);r.up.set(0,-1,0),r.lookAt(new z(1,0,0)),this.add(r);var a=new Jt(Ao,Lo,t,e);a.up.set(0,-1,0),a.lookAt(new z(-1,0,0)),this.add(a);var s=new Jt(Ao,Lo,t,e);s.up.set(0,0,1),s.lookAt(new z(0,1,0)),this.add(s);var o=new Jt(Ao,Lo,t,e);o.up.set(0,0,-1),o.lookAt(new z(0,-1,0)),this.add(o);var l=new Jt(Ao,Lo,t,e);l.up.set(0,-1,0),l.lookAt(new z(0,0,1)),this.add(l);var c=new Jt(Ao,Lo,t,e);c.up.set(0,-1,0),c.lookAt(new z(0,0,-1)),this.add(c),i=i||{format:sr,magFilter:rn,minFilter:rn},this.renderTarget=new Zr(n,i),this.renderTarget.texture.name="CubeCamera",this.update=function(h,u){this.parent===null&&this.updateMatrixWorld();var f=h.getRenderTarget(),d=this.renderTarget,p=d.texture.generateMipmaps;d.texture.generateMipmaps=!1,h.setRenderTarget(d,0),h.render(u,r),h.setRenderTarget(d,1),h.render(u,a),h.setRenderTarget(d,2),h.render(u,s),h.setRenderTarget(d,3),h.render(u,o),h.setRenderTarget(d,4),h.render(u,l),d.texture.generateMipmaps=p,h.setRenderTarget(d,5),h.render(u,c),h.setRenderTarget(f)},this.clear=function(h,u,f,d){for(var p=h.getRenderTarget(),m=this.renderTarget,x=0;x<6;x++)h.setRenderTarget(m,x),h.clear(u,f,d);h.setRenderTarget(p)}}Co.prototype=Object.create(Ge.prototype);Co.prototype.constructor=Co;function Zr(t,e,n){Number.isInteger(e)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),e=n),kn.call(this,t,t,e)}Zr.prototype=Object.create(kn.prototype);Zr.prototype.constructor=Zr;Zr.prototype.isWebGLCubeRenderTarget=!0;Zr.prototype.fromEquirectangularTexture=function(t,e){this.texture.type=e.type,this.texture.format=e.format,this.texture.encoding=e.encoding;var n=new lr,i={uniforms:{tEquirect:{value:null}},vertexShader:["varying vec3 vWorldDirection;","vec3 transformDirection( in vec3 dir, in mat4 matrix ) {","	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );","}","void main() {","	vWorldDirection = transformDirection( position, modelMatrix );","	#include <begin_vertex>","	#include <project_vertex>","}"].join(`
`),fragmentShader:["uniform sampler2D tEquirect;","varying vec3 vWorldDirection;","#define RECIPROCAL_PI 0.31830988618","#define RECIPROCAL_PI2 0.15915494","void main() {","	vec3 direction = normalize( vWorldDirection );","	vec2 sampleUV;","	sampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;","	sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;","	gl_FragColor = texture2D( tEquirect, sampleUV );","}"].join(`
`)},r=new Dn({type:"CubemapFromEquirect",uniforms:To(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:nn,blending:rr});r.uniforms.tEquirect.value=e;var a=new Ft(new Cc(5,5,5),r);n.add(a);var s=new Co(1,10,1);return s.renderTarget=this,s.renderTarget.texture.name="CubeCameraTexture",s.update(t,n),a.geometry.dispose(),a.material.dispose(),this};function Da(t,e,n,i,r,a,s,o,l,c,h,u){St.call(this,null,a,s,o,l,c,i,r,h,u),this.image={data:t||null,width:e||1,height:n||1},this.magFilter=l!==void 0?l:$t,this.minFilter=c!==void 0?c:$t,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}Da.prototype=Object.create(St.prototype);Da.prototype.constructor=Da;Da.prototype.isDataTexture=!0;var Ro=new hr,sf=new z;function Po(t,e,n,i,r,a){this.planes=[t!==void 0?t:new mi,e!==void 0?e:new mi,n!==void 0?n:new mi,i!==void 0?i:new mi,r!==void 0?r:new mi,a!==void 0?a:new mi]}Object.assign(Po.prototype,{set:function(t,e,n,i,r,a){var s=this.planes;return s[0].copy(t),s[1].copy(e),s[2].copy(n),s[3].copy(i),s[4].copy(r),s[5].copy(a),this},clone:function(){return new this.constructor().copy(this)},copy:function(t){for(var e=this.planes,n=0;n<6;n++)e[n].copy(t.planes[n]);return this},setFromProjectionMatrix:function(t){var e=this.planes,n=t.elements,i=n[0],r=n[1],a=n[2],s=n[3],o=n[4],l=n[5],c=n[6],h=n[7],u=n[8],f=n[9],d=n[10],p=n[11],m=n[12],x=n[13],g=n[14],v=n[15];return e[0].setComponents(s-i,h-o,p-u,v-m).normalize(),e[1].setComponents(s+i,h+o,p+u,v+m).normalize(),e[2].setComponents(s+r,h+l,p+f,v+x).normalize(),e[3].setComponents(s-r,h-l,p-f,v-x).normalize(),e[4].setComponents(s-a,h-c,p-d,v-g).normalize(),e[5].setComponents(s+a,h+c,p+d,v+g).normalize(),this},intersectsObject:function(t){var e=t.geometry;return e.boundingSphere===null&&e.computeBoundingSphere(),Ro.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(Ro)},intersectsSprite:function(t){return Ro.center.set(0,0,0),Ro.radius=.7071067811865476,Ro.applyMatrix4(t.matrixWorld),this.intersectsSphere(Ro)},intersectsSphere:function(t){for(var e=this.planes,n=t.center,i=-t.radius,r=0;r<6;r++){var a=e[r].distanceToPoint(n);if(a<i)return!1}return!0},intersectsBox:function(t){for(var e=this.planes,n=0;n<6;n++){var i=e[n];if(sf.x=i.normal.x>0?t.max.x:t.min.x,sf.y=i.normal.y>0?t.max.y:t.min.y,sf.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(sf)<0)return!1}return!0},containsPoint:function(t){for(var e=this.planes,n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}});var Ue={common:{diffuse:{value:new Ve(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new yn},uv2Transform:{value:new yn},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Me(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ve(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new Ve(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new yn}},sprite:{diffuse:{value:new Ve(15658734)},opacity:{value:1},center:{value:new Me(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new yn}}};function xM(){var t=null,e=!1,n=null;function i(r,a){e!==!1&&(n(r,a),t.requestAnimationFrame(i))}return{start:function(){e!==!0&&n!==null&&(t.requestAnimationFrame(i),e=!0)},stop:function(){e=!1},setAnimationLoop:function(r){n=r},setContext:function(r){t=r}}}function q2(t,e){var n=e.isWebGL2,i=new WeakMap;function r(c,h){var u=c.array,f=c.usage,d=t.createBuffer();t.bindBuffer(h,d),t.bufferData(h,u,f),c.onUploadCallback();var p=5126;return u instanceof Float32Array?p=5126:u instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):u instanceof Uint16Array?p=5123:u instanceof Int16Array?p=5122:u instanceof Uint32Array?p=5125:u instanceof Int32Array?p=5124:u instanceof Int8Array?p=5120:u instanceof Uint8Array&&(p=5121),{buffer:d,type:p,bytesPerElement:u.BYTES_PER_ELEMENT,version:c.version}}function a(c,h,u){var f=h.array,d=h.updateRange;t.bindBuffer(u,c),d.count===-1?t.bufferSubData(u,0,f):(n?t.bufferSubData(u,d.offset*f.BYTES_PER_ELEMENT,f,d.offset,d.count):t.bufferSubData(u,d.offset*f.BYTES_PER_ELEMENT,f.subarray(d.offset,d.offset+d.count)),d.count=-1)}function s(c){return c.isInterleavedBufferAttribute&&(c=c.data),i.get(c)}function o(c){c.isInterleavedBufferAttribute&&(c=c.data);var h=i.get(c);h&&(t.deleteBuffer(h.buffer),i.delete(c))}function l(c,h){c.isInterleavedBufferAttribute&&(c=c.data);var u=i.get(c);u===void 0?i.set(c,r(c,h)):u.version<c.version&&(a(u.buffer,c,h),u.version=c.version)}return{get:s,remove:o,update:l}}function Rc(t,e,n,i){Qe.call(this),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i},this.fromBufferGeometry(new Ia(t,e,n,i)),this.mergeVertices()}Rc.prototype=Object.create(Qe.prototype);Rc.prototype.constructor=Rc;function Ia(t,e,n,i){ke.call(this),this.type="PlaneBufferGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i},t=t||1,e=e||1;var r=t/2,a=e/2,s=Math.floor(n)||1,o=Math.floor(i)||1,l=s+1,c=o+1,h=t/s,u=e/o,f,d,p=[],m=[],x=[],g=[];for(d=0;d<c;d++){var v=d*u-a;for(f=0;f<l;f++){var b=f*h-r;m.push(b,-v,0),x.push(0,0,1),g.push(f/s),g.push(1-d/o)}}for(d=0;d<o;d++)for(f=0;f<s;f++){var _=f+l*d,M=f+l*(d+1),y=f+1+l*(d+1),w=f+1+l*d;p.push(_,M,w),p.push(M,y,w)}this.setIndex(p),this.setAttribute("position",new ze(m,3)),this.setAttribute("normal",new ze(x,3)),this.setAttribute("uv",new ze(g,2))}Ia.prototype=Object.create(ke.prototype);Ia.prototype.constructor=Ia;var Y2=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,Z2=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,J2=`#ifdef ALPHATEST
	if ( diffuseColor.a < ALPHATEST ) discard;
#endif`,K2=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );
	#endif
#endif`,Q2=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,eC="vec3 transformed = vec3( position );",tC=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,nC=`vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	return vec2( -1.04, 1.04 ) * a004 + r.zw;
}
float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
#if defined ( PHYSICALLY_CORRECT_LIGHTS )
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
#else
	if( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
		return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );
	}
	return 1.0;
#endif
}
vec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {
	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );
	return ( 1.0 - specularColor ) * fresnel + specularColor;
}
vec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {
	float fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );
	vec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;
	return Fr * fresnel + F0;
}
float G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	return 1.0 / ( gl * gv );
}
float G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( incidentLight.direction + viewDir );
	float dotNL = saturate( dot( normal, incidentLight.direction ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( G * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE  = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS  = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
vec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	return specularColor * brdf.x + brdf.y;
}
void BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
	vec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	vec3 FssEss = F * brdf.x + brdf.y;
	float Ess = brdf.x + brdf.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );
	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
float GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {
	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );
}
float BlinnExponentToGGXRoughness( const in float blinnExponent ) {
	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );
}
#if defined( USE_SHEEN )
float D_Charlie(float roughness, float NoH) {
	float invAlpha  = 1.0 / roughness;
	float cos2h = NoH * NoH;
	float sin2h = max(1.0 - cos2h, 0.0078125);	return (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);
}
float V_Neubelt(float NoV, float NoL) {
	return saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));
}
vec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {
	vec3 N = geometry.normal;
	vec3 V = geometry.viewDir;
	vec3 H = normalize( V + L );
	float dotNH = saturate( dot( N, H ) );
	return specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );
}
#endif`,iC=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 );
		fDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,rC=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,aC=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,sC=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,oC=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,lC=`#ifdef USE_COLOR
	diffuseColor.rgb *= vColor;
#endif`,cC=`#ifdef USE_COLOR
	varying vec3 vColor;
#endif`,hC=`#ifdef USE_COLOR
	varying vec3 vColor;
#endif`,uC=`#ifdef USE_COLOR
	vColor.xyz = color.xyz;
#endif`,fC=`#define PI 3.14159265359
#define PI2 6.28318530718
#define PI_HALF 1.5707963267949
#define RECIPROCAL_PI 0.31830988618
#define RECIPROCAL_PI2 0.15915494
#define LOG2 1.442695
#define EPSILON 1e-6
#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement(a) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract(sin(sn) * c);
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
vec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	float distance = dot( planeNormal, point - pointOnPlane );
	return - distance * planeNormal + point;
}
float sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return sign( dot( point - pointOnPlane, planeNormal ) );
}
vec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
  return m[ 2 ][ 3 ] == - 1.0;
}`,dC=`#ifdef ENVMAP_TYPE_CUBE_UV
#define cubeUV_maxMipLevel 8.0
#define cubeUV_minMipLevel 4.0
#define cubeUV_maxTileSize 256.0
#define cubeUV_minTileSize 16.0
float getFace(vec3 direction) {
    vec3 absDirection = abs(direction);
    float face = -1.0;
    if (absDirection.x > absDirection.z) {
      if (absDirection.x > absDirection.y)
        face = direction.x > 0.0 ? 0.0 : 3.0;
      else
        face = direction.y > 0.0 ? 1.0 : 4.0;
    } else {
      if (absDirection.z > absDirection.y)
        face = direction.z > 0.0 ? 2.0 : 5.0;
      else
        face = direction.y > 0.0 ? 1.0 : 4.0;
    }
    return face;
}
vec2 getUV(vec3 direction, float face) {
    vec2 uv;
    if (face == 0.0) {
      uv = vec2(-direction.z, direction.y) / abs(direction.x);
    } else if (face == 1.0) {
      uv = vec2(direction.x, -direction.z) / abs(direction.y);
    } else if (face == 2.0) {
      uv = direction.xy / abs(direction.z);
    } else if (face == 3.0) {
      uv = vec2(direction.z, direction.y) / abs(direction.x);
    } else if (face == 4.0) {
      uv = direction.xz / abs(direction.y);
    } else {
      uv = vec2(-direction.x, direction.y) / abs(direction.z);
    }
    return 0.5 * (uv + 1.0);
}
vec3 bilinearCubeUV(sampler2D envMap, vec3 direction, float mipInt) {
  float face = getFace(direction);
  float filterInt = max(cubeUV_minMipLevel - mipInt, 0.0);
  mipInt = max(mipInt, cubeUV_minMipLevel);
  float faceSize = exp2(mipInt);
  float texelSize = 1.0 / (3.0 * cubeUV_maxTileSize);
  vec2 uv = getUV(direction, face) * (faceSize - 1.0);
  vec2 f = fract(uv);
  uv += 0.5 - f;
  if (face > 2.0) {
    uv.y += faceSize;
    face -= 3.0;
  }
  uv.x += face * faceSize;
  if(mipInt < cubeUV_maxMipLevel){
    uv.y += 2.0 * cubeUV_maxTileSize;
  }
  uv.y += filterInt * 2.0 * cubeUV_minTileSize;
  uv.x += 3.0 * max(0.0, cubeUV_maxTileSize - 2.0 * faceSize);
  uv *= texelSize;
  vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
  uv.x += texelSize;
  vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
  uv.y += texelSize;
  vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
  uv.x -= texelSize;
  vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
  vec3 tm = mix(tl, tr, f.x);
  vec3 bm = mix(bl, br, f.x);
  return mix(tm, bm, f.y);
}
#define r0 1.0
#define v0 0.339
#define m0 -2.0
#define r1 0.8
#define v1 0.276
#define m1 -1.0
#define r4 0.4
#define v4 0.046
#define m4 2.0
#define r5 0.305
#define v5 0.016
#define m5 3.0
#define r6 0.21
#define v6 0.0038
#define m6 4.0
float roughnessToMip(float roughness) {
  float mip = 0.0;
  if (roughness >= r1) {
    mip = (r0 - roughness) * (m1 - m0) / (r0 - r1) + m0;
  } else if (roughness >= r4) {
    mip = (r1 - roughness) * (m4 - m1) / (r1 - r4) + m1;
  } else if (roughness >= r5) {
    mip = (r4 - roughness) * (m5 - m4) / (r4 - r5) + m4;
  } else if (roughness >= r6) {
    mip = (r5 - roughness) * (m6 - m5) / (r5 - r6) + m5;
  } else {
    mip = -2.0 * log2(1.16 * roughness);  }
  return mip;
}
vec4 textureCubeUV(sampler2D envMap, vec3 sampleDir, float roughness) {
  float mip = clamp(roughnessToMip(roughness), m0, cubeUV_maxMipLevel);
  float mipF = fract(mip);
  float mipInt = floor(mip);
  vec3 color0 = bilinearCubeUV(envMap, sampleDir, mipInt);
  if (mipF == 0.0) {
    return vec4(color0, 1.0);
  } else {
    vec3 color1 = bilinearCubeUV(envMap, sampleDir, mipInt + 1.0);
    return vec4(mix(color0, color1, mipF), 1.0);
  }
}
#endif`,pC=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,mC=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,gC=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,vC=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,yC=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,xC="gl_FragColor = linearToOutputTexel( gl_FragColor );",_C=`
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 GammaToLinear( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );
}
vec4 LinearToGamma( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );
}
vec4 sRGBToLinear( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 RGBEToLinear( in vec4 value ) {
	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );
}
vec4 LinearToRGBE( in vec4 value ) {
	float maxComponent = max( max( value.r, value.g ), value.b );
	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );
	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );
}
vec4 RGBMToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * value.a * maxRange, 1.0 );
}
vec4 LinearToRGBM( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float M = clamp( maxRGB / maxRange, 0.0, 1.0 );
	M = ceil( M * 255.0 ) / 255.0;
	return vec4( value.rgb / ( M * maxRange ), M );
}
vec4 RGBDToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );
}
vec4 LinearToRGBD( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float D = max( maxRange / maxRGB, 1.0 );
	D = clamp( floor( D ) / 255.0, 0.0, 1.0 );
	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );
}
const mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );
vec4 LinearToLogLuv( in vec4 value )  {
	vec3 Xp_Y_XYZp = cLogLuvM * value.rgb;
	Xp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );
	vec4 vResult;
	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;
	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;
	vResult.w = fract( Le );
	vResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;
	return vResult;
}
const mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );
vec4 LogLuvToLinear( in vec4 value ) {
	float Le = value.z * 255.0 + value.w;
	vec3 Xp_Y_XYZp;
	Xp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );
	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;
	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;
	vec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;
	return vec4( max( vRGB, 0.0 ), 1.0 );
}`,MC=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		}  else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#elif defined( ENVMAP_TYPE_EQUIREC )
		vec2 sampleUV;
		reflectVec = normalize( reflectVec );
		sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
		sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;
		vec4 envColor = texture2D( envMap, sampleUV );
	#elif defined( ENVMAP_TYPE_SPHERE )
		reflectVec = normalize( reflectVec );
		vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );
		vec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifndef ENVMAP_TYPE_CUBE_UV
		envColor = envMapTexelToLinear( envColor );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,wC=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform int maxMipLevel;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,bC=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,SC=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,EC=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) { 
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,TC=`#ifdef USE_FOG
	fogDepth = -mvPosition.z;
#endif`,AC=`#ifdef USE_FOG
	varying float fogDepth;
#endif`,LC=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, fogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,CC=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float fogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,RC=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return texture2D( gradientMap, coord ).rgb;
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,PC=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel= texture2D( lightMap, vUv2 );
	reflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
#endif`,DC=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,IC=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );
		#endif
	}
	#pragma unroll_loop_end
#endif`,FC=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {
	vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	return irradiance;
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		directLight.color = directionalLight.color;
		directLight.direction = directionalLight.direction;
		directLight.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
		struct PointLightShadow {
			float shadowBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = pointLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		directLight.color = pointLight.color;
		directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );
		directLight.visible = ( directLight.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {
		vec3 lVector = spotLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		float angleCos = dot( directLight.direction, spotLight.direction );
		if ( angleCos > spotLight.coneCos ) {
			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );
			directLight.color = spotLight.color;
			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );
			directLight.visible = true;
		} else {
			directLight.color = vec3( 0.0 );
			directLight.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {
		float dotNL = dot( geometry.normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			irradiance *= PI;
		#endif
		return irradiance;
	}
#endif`,BC=`#if defined( USE_ENVMAP )
	#ifdef ENVMAP_MODE_REFRACTION
		uniform float refractionRatio;
	#endif
	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {
		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );
			#else
				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
		#else
			vec4 envMapColor = vec4( 0.0 );
		#endif
		return PI * envMapColor.rgb * envMapIntensity;
	}
	float getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {
		float maxMIPLevelScalar = float( maxMIPLevel );
		float sigma = PI * roughness * roughness / ( 1.0 + roughness );
		float desiredMIPLevel = maxMIPLevelScalar + log2( sigma );
		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );
	}
	vec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {
		#ifdef ENVMAP_MODE_REFLECTION
		  vec3 reflectVec = reflect( -viewDir, normal );
		  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
		#else
		  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );
		#endif
		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
		float specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );
			#else
				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
		#elif defined( ENVMAP_TYPE_EQUIREC )
			vec2 sampleUV;
			sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
			sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );
			#else
				vec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_SPHERE )
			vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );
			#else
				vec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#endif
		return envMapColor.rgb * envMapIntensity;
	}
#endif`,OC=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,NC=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct ToonMaterial {
	vec3	diffuseColor;
	vec3	specularColor;
	float	specularShininess;
	float	specularStrength;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,zC=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,UC=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct BlinnPhongMaterial {
	vec3	diffuseColor;
	vec3	specularColor;
	float	specularShininess;
	float	specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,GC=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;
material.specularRoughness = min( material.specularRoughness, 1.0 );
#ifdef REFLECTIVITY
	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );
#endif
#ifdef CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheen;
#endif`,HC=`struct PhysicalMaterial {
	vec3	diffuseColor;
	float	specularRoughness;
	vec3	specularColor;
#ifdef CLEARCOAT
	float clearcoat;
	float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	vec3 sheenColor;
#endif
};
#define MAXIMUM_SPECULAR_COEFFICIENT 0.16
#define DEFAULT_SPECULAR_COEFFICIENT 0.04
float clearcoatDHRApprox( const in float roughness, const in float dotNL ) {
	return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.specularRoughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	#ifdef CLEARCOAT
		float ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = ccDotNL * directLight.color;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			ccIrradiance *= PI;
		#endif
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
		reflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
	#else
		float clearcoatDHR = 0.0;
	#endif
	#ifdef USE_SHEEN
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(
			material.specularRoughness,
			directLight.direction,
			geometry,
			material.sheenColor
		);
	#else
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);
	#endif
	reflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef CLEARCOAT
		float ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		reflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
		float ccDotNL = ccDotNV;
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
	#else
		float clearcoatDHR = 0.0;
	#endif
	float clearcoatInv = 1.0 - clearcoatDHR;
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	BRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,VC=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointDirectLightIrradiance( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotDirectLightIrradiance( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,kC=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );
	#ifdef CLEARCOAT
		clearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );
	#endif
#endif`,WC=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,$C=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,jC=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,XC=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,qC=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,YC=`#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif`,ZC=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,JC=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	vec4 mapTexel = texture2D( map, uv );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,KC=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,QC=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,eR=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,tR=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
	objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
	objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
	objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
#endif`,nR=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifndef USE_MORPHNORMALS
	uniform float morphTargetInfluences[ 8 ];
	#else
	uniform float morphTargetInfluences[ 4 ];
	#endif
#endif`,iR=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	transformed += morphTarget0 * morphTargetInfluences[ 0 ];
	transformed += morphTarget1 * morphTargetInfluences[ 1 ];
	transformed += morphTarget2 * morphTargetInfluences[ 2 ];
	transformed += morphTarget3 * morphTargetInfluences[ 3 ];
	#ifndef USE_MORPHNORMALS
	transformed += morphTarget4 * morphTargetInfluences[ 4 ];
	transformed += morphTarget5 * morphTargetInfluences[ 5 ];
	transformed += morphTarget6 * morphTargetInfluences[ 6 ];
	transformed += morphTarget7 * morphTargetInfluences[ 7 ];
	#endif
#endif`,rR=`#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
			bitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,aR=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( -vViewPosition, normal, mapN );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );
#endif`,sR=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		float scale = sign( st1.t * st0.s - st0.t * st1.s );
		vec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );
		vec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );
		vec3 N = normalize( surf_norm );
		mat3 tsn = mat3( S, T, N );
		mapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		return normalize( tsn * mapN );
	}
#endif`,oR=`#ifdef CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,lR=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );
	#endif
#endif`,cR=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,hR=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return (( near + viewZ ) * far ) / (( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,uR=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,fR=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,dR=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,pR=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,mR=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,gR=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,vR=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,yR=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,xR=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,_R=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,MR=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,wR=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`,bR=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,SR=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,ER=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,TR=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,AR=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,LR=`#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
uniform float toneMappingWhitePoint;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )
vec3 Uncharted2ToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );
}`,CR=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,RR=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,PR=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,DR=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,IR=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,FR=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,BR=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`,OR=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,NR=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,zR=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,UR=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,GR=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,HR=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,VR=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,kR=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,WR=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV;
	sampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;
	vec4 texColor = texture2D( tEquirect, sampleUV );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,$R=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,jR=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,XR=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <begin_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,qR=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
	
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,YR=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <skinbase_vertex>
	#ifdef USE_ENVMAP
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,ZR=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	reflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,JR=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,KR=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
		matcapColor = matcapTexelToLinear( matcapColor );
	#else
		vec4 matcapColor = vec4( 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,QR=`#define MATCAP
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#ifndef FLAT_SHADED
		vNormal = normalize( transformedNormal );
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,eP=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,tP=`#define TOON
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,nP=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,iP=`#define PHONG
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,rP=`#define STANDARD
#ifdef PHYSICAL
	#define REFLECTIVITY
	#define CLEARCOAT
	#define TRANSPARENCY
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef TRANSPARENCY
	uniform float transparency;
#endif
#ifdef REFLECTIVITY
	uniform float reflectivity;
#endif
#ifdef CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheen;
#endif
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <lights_physical_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#ifdef TRANSPARENCY
		diffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );
	#endif
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,aP=`#define STANDARD
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,sP=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <packing>
#include <uv_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
}`,oP=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,lP=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,cP=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,hP=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,uP=`#include <fog_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <begin_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,fP=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,dP=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,ht={alphamap_fragment:Y2,alphamap_pars_fragment:Z2,alphatest_fragment:J2,aomap_fragment:K2,aomap_pars_fragment:Q2,begin_vertex:eC,beginnormal_vertex:tC,bsdfs:nC,bumpmap_pars_fragment:iC,clipping_planes_fragment:rC,clipping_planes_pars_fragment:aC,clipping_planes_pars_vertex:sC,clipping_planes_vertex:oC,color_fragment:lC,color_pars_fragment:cC,color_pars_vertex:hC,color_vertex:uC,common:fC,cube_uv_reflection_fragment:dC,defaultnormal_vertex:pC,displacementmap_pars_vertex:mC,displacementmap_vertex:gC,emissivemap_fragment:vC,emissivemap_pars_fragment:yC,encodings_fragment:xC,encodings_pars_fragment:_C,envmap_fragment:MC,envmap_common_pars_fragment:wC,envmap_pars_fragment:bC,envmap_pars_vertex:SC,envmap_physical_pars_fragment:BC,envmap_vertex:EC,fog_vertex:TC,fog_pars_vertex:AC,fog_fragment:LC,fog_pars_fragment:CC,gradientmap_pars_fragment:RC,lightmap_fragment:PC,lightmap_pars_fragment:DC,lights_lambert_vertex:IC,lights_pars_begin:FC,lights_toon_fragment:OC,lights_toon_pars_fragment:NC,lights_phong_fragment:zC,lights_phong_pars_fragment:UC,lights_physical_fragment:GC,lights_physical_pars_fragment:HC,lights_fragment_begin:VC,lights_fragment_maps:kC,lights_fragment_end:WC,logdepthbuf_fragment:$C,logdepthbuf_pars_fragment:jC,logdepthbuf_pars_vertex:XC,logdepthbuf_vertex:qC,map_fragment:YC,map_pars_fragment:ZC,map_particle_fragment:JC,map_particle_pars_fragment:KC,metalnessmap_fragment:QC,metalnessmap_pars_fragment:eR,morphnormal_vertex:tR,morphtarget_pars_vertex:nR,morphtarget_vertex:iR,normal_fragment_begin:rR,normal_fragment_maps:aR,normalmap_pars_fragment:sR,clearcoat_normal_fragment_begin:oR,clearcoat_normal_fragment_maps:lR,clearcoat_pars_fragment:cR,packing:hR,premultiplied_alpha_fragment:uR,project_vertex:fR,dithering_fragment:dR,dithering_pars_fragment:pR,roughnessmap_fragment:mR,roughnessmap_pars_fragment:gR,shadowmap_pars_fragment:vR,shadowmap_pars_vertex:yR,shadowmap_vertex:xR,shadowmask_pars_fragment:_R,skinbase_vertex:MR,skinning_pars_vertex:wR,skinning_vertex:bR,skinnormal_vertex:SR,specularmap_fragment:ER,specularmap_pars_fragment:TR,tonemapping_fragment:AR,tonemapping_pars_fragment:LR,uv_pars_fragment:CR,uv_pars_vertex:RR,uv_vertex:PR,uv2_pars_fragment:DR,uv2_pars_vertex:IR,uv2_vertex:FR,worldpos_vertex:BR,background_frag:OR,background_vert:NR,cube_frag:zR,cube_vert:UR,depth_frag:GR,depth_vert:HR,distanceRGBA_frag:VR,distanceRGBA_vert:kR,equirect_frag:WR,equirect_vert:$R,linedashed_frag:jR,linedashed_vert:XR,meshbasic_frag:qR,meshbasic_vert:YR,meshlambert_frag:ZR,meshlambert_vert:JR,meshmatcap_frag:KR,meshmatcap_vert:QR,meshtoon_frag:eP,meshtoon_vert:tP,meshphong_frag:nP,meshphong_vert:iP,meshphysical_frag:rP,meshphysical_vert:aP,normal_frag:sP,normal_vert:oP,points_frag:lP,points_vert:cP,shadow_frag:hP,shadow_vert:uP,sprite_frag:fP,sprite_vert:dP},zi={basic:{uniforms:xn([Ue.common,Ue.specularmap,Ue.envmap,Ue.aomap,Ue.lightmap,Ue.fog]),vertexShader:ht.meshbasic_vert,fragmentShader:ht.meshbasic_frag},lambert:{uniforms:xn([Ue.common,Ue.specularmap,Ue.envmap,Ue.aomap,Ue.lightmap,Ue.emissivemap,Ue.fog,Ue.lights,{emissive:{value:new Ve(0)}}]),vertexShader:ht.meshlambert_vert,fragmentShader:ht.meshlambert_frag},phong:{uniforms:xn([Ue.common,Ue.specularmap,Ue.envmap,Ue.aomap,Ue.lightmap,Ue.emissivemap,Ue.bumpmap,Ue.normalmap,Ue.displacementmap,Ue.fog,Ue.lights,{emissive:{value:new Ve(0)},specular:{value:new Ve(1118481)},shininess:{value:30}}]),vertexShader:ht.meshphong_vert,fragmentShader:ht.meshphong_frag},standard:{uniforms:xn([Ue.common,Ue.envmap,Ue.aomap,Ue.lightmap,Ue.emissivemap,Ue.bumpmap,Ue.normalmap,Ue.displacementmap,Ue.roughnessmap,Ue.metalnessmap,Ue.fog,Ue.lights,{emissive:{value:new Ve(0)},roughness:{value:.5},metalness:{value:.5},envMapIntensity:{value:1}}]),vertexShader:ht.meshphysical_vert,fragmentShader:ht.meshphysical_frag},toon:{uniforms:xn([Ue.common,Ue.specularmap,Ue.aomap,Ue.lightmap,Ue.emissivemap,Ue.bumpmap,Ue.normalmap,Ue.displacementmap,Ue.gradientmap,Ue.fog,Ue.lights,{emissive:{value:new Ve(0)},specular:{value:new Ve(1118481)},shininess:{value:30}}]),vertexShader:ht.meshtoon_vert,fragmentShader:ht.meshtoon_frag},matcap:{uniforms:xn([Ue.common,Ue.bumpmap,Ue.normalmap,Ue.displacementmap,Ue.fog,{matcap:{value:null}}]),vertexShader:ht.meshmatcap_vert,fragmentShader:ht.meshmatcap_frag},points:{uniforms:xn([Ue.points,Ue.fog]),vertexShader:ht.points_vert,fragmentShader:ht.points_frag},dashed:{uniforms:xn([Ue.common,Ue.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ht.linedashed_vert,fragmentShader:ht.linedashed_frag},depth:{uniforms:xn([Ue.common,Ue.displacementmap]),vertexShader:ht.depth_vert,fragmentShader:ht.depth_frag},normal:{uniforms:xn([Ue.common,Ue.bumpmap,Ue.normalmap,Ue.displacementmap,{opacity:{value:1}}]),vertexShader:ht.normal_vert,fragmentShader:ht.normal_frag},sprite:{uniforms:xn([Ue.sprite,Ue.fog]),vertexShader:ht.sprite_vert,fragmentShader:ht.sprite_frag},background:{uniforms:{uvTransform:{value:new yn},t2D:{value:null}},vertexShader:ht.background_vert,fragmentShader:ht.background_frag},cube:{uniforms:xn([Ue.envmap,{opacity:{value:1}}]),vertexShader:ht.cube_vert,fragmentShader:ht.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ht.equirect_vert,fragmentShader:ht.equirect_frag},distanceRGBA:{uniforms:xn([Ue.common,Ue.displacementmap,{referencePosition:{value:new z},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ht.distanceRGBA_vert,fragmentShader:ht.distanceRGBA_frag},shadow:{uniforms:xn([Ue.lights,Ue.fog,{color:{value:new Ve(0)},opacity:{value:1}}]),vertexShader:ht.shadow_vert,fragmentShader:ht.shadow_frag}};zi.physical={uniforms:xn([zi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Me(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new Ve(0)},transparency:{value:0}}]),vertexShader:ht.meshphysical_vert,fragmentShader:ht.meshphysical_frag};function pP(t,e,n,i){var r=new Ve(0),a=0,s,o,l=null,c=0,h=null;function u(d,p,m,x){var g=p.background,v=t.xr,b=v.getSession&&v.getSession();if(b&&b.environmentBlendMode==="additive"&&(g=null),g===null?f(r,a):g&&g.isColor&&(f(g,1),x=!0),(t.autoClear||x)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),g&&(g.isCubeTexture||g.isWebGLCubeRenderTarget||g.mapping===co)){o===void 0&&(o=new Ft(new Cc(1,1,1),new Dn({type:"BackgroundCubeMaterial",uniforms:To(zi.cube.uniforms),vertexShader:zi.cube.vertexShader,fragmentShader:zi.cube.fragmentShader,side:nn,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),o.geometry.deleteAttribute("uv"),o.onBeforeRender=function(M,y,w){this.matrixWorld.copyPosition(w.matrixWorld)},Object.defineProperty(o.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(o));var _=g.isWebGLCubeRenderTarget?g.texture:g;o.material.uniforms.envMap.value=_,o.material.uniforms.flipEnvMap.value=_.isCubeTexture?-1:1,(l!==g||c!==_.version||h!==t.toneMapping)&&(o.material.needsUpdate=!0,l=g,c=_.version,h=t.toneMapping),d.unshift(o,o.geometry,o.material,0,0,null)}else g&&g.isTexture&&(s===void 0&&(s=new Ft(new Ia(2,2),new Dn({type:"BackgroundMaterial",uniforms:To(zi.background.uniforms),vertexShader:zi.background.vertexShader,fragmentShader:zi.background.fragmentShader,side:oo,depthTest:!1,depthWrite:!1,fog:!1})),s.geometry.deleteAttribute("normal"),Object.defineProperty(s.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(s)),s.material.uniforms.t2D.value=g,g.matrixAutoUpdate===!0&&g.updateMatrix(),s.material.uniforms.uvTransform.value.copy(g.matrix),(l!==g||c!==g.version||h!==t.toneMapping)&&(s.material.needsUpdate=!0,l=g,c=g.version,h=t.toneMapping),d.unshift(s,s.geometry,s.material,0,0,null))}function f(d,p){e.buffers.color.setClear(d.r,d.g,d.b,p,i)}return{getClearColor:function(){return r},setClearColor:function(d,p){r.set(d),a=p!==void 0?p:1,f(r,a)},getClearAlpha:function(){return a},setClearAlpha:function(d){a=d,f(r,a)},render:u}}function mP(t,e,n,i){var r=i.isWebGL2,a;function s(c){a=c}function o(c,h){t.drawArrays(a,c,h),n.update(h,a)}function l(c,h,u,f){if(f!==0){var d,p;if(r)d=t,p="drawArraysInstanced";else if(d=e.get("ANGLE_instanced_arrays"),p="drawArraysInstancedANGLE",d===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}d[p](a,h,u,f),n.update(u,a,f)}}this.setMode=s,this.render=o,this.renderInstances=l}function gP(t,e,n){var i;function r(){if(i!==void 0)return i;var y=e.get("EXT_texture_filter_anisotropic");return y!==null?i=t.getParameter(y.MAX_TEXTURE_MAX_ANISOTROPY_EXT):i=0,i}function a(y){if(y==="highp"){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";y="mediump"}return y==="mediump"&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}var s=typeof WebGL2RenderingContext!="undefined"&&t instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!="undefined"&&t instanceof WebGL2ComputeRenderingContext,o=n.precision!==void 0?n.precision:"highp",l=a(o);l!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",l,"instead."),o=l);var c=n.logarithmicDepthBuffer===!0,h=t.getParameter(34930),u=t.getParameter(35660),f=t.getParameter(3379),d=t.getParameter(34076),p=t.getParameter(34921),m=t.getParameter(36347),x=t.getParameter(36348),g=t.getParameter(36349),v=u>0,b=s||!!e.get("OES_texture_float"),_=v&&b,M=s?t.getParameter(36183):0;return{isWebGL2:s,getMaxAnisotropy:r,getMaxPrecision:a,precision:o,logarithmicDepthBuffer:c,maxTextures:h,maxVertexTextures:u,maxTextureSize:f,maxCubemapSize:d,maxAttributes:p,maxVertexUniforms:m,maxVaryings:x,maxFragmentUniforms:g,vertexTextures:v,floatFragmentTextures:b,floatVertexTextures:_,maxSamples:M}}function vP(){var t=this,e=null,n=0,i=!1,r=!1,a=new mi,s=new yn,o={value:null,needsUpdate:!1};this.uniform=o,this.numPlanes=0,this.numIntersection=0,this.init=function(h,u,f){var d=h.length!==0||u||n!==0||i;return i=u,e=c(h,f,0),n=h.length,d},this.beginShadows=function(){r=!0,c(null)},this.endShadows=function(){r=!1,l()},this.setState=function(h,u,f,d,p,m){if(!i||h===null||h.length===0||r&&!f)r?c(null):l();else{var x=r?0:n,g=x*4,v=p.clippingState||null;o.value=v,v=c(h,d,g,m);for(var b=0;b!==g;++b)v[b]=e[b];p.clippingState=v,this.numIntersection=u?this.numPlanes:0,this.numPlanes+=x}};function l(){o.value!==e&&(o.value=e,o.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function c(h,u,f,d){var p=h!==null?h.length:0,m=null;if(p!==0){if(m=o.value,d!==!0||m===null){var x=f+p*4,g=u.matrixWorldInverse;s.getNormalMatrix(g),(m===null||m.length<x)&&(m=new Float32Array(x));for(var v=0,b=f;v!==p;++v,b+=4)a.copy(h[v]).applyMatrix4(g,s),a.normal.toArray(m,b),m[b+3]=a.constant}o.value=m,o.needsUpdate=!0}return t.numPlanes=p,t.numIntersection=0,m}}function yP(t){var e={};return{get:function(n){if(e[n]!==void 0)return e[n];var i;switch(n){case"WEBGL_depth_texture":i=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=t.getExtension(n)}return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),e[n]=i,i}}}function xP(t,e,n){var i=new WeakMap,r=new WeakMap;function a(h){var u=h.target,f=i.get(u);f.index!==null&&e.remove(f.index);for(var d in f.attributes)e.remove(f.attributes[d]);u.removeEventListener("dispose",a),i.delete(u);var p=r.get(f);p&&(e.remove(p),r.delete(f)),n.memory.geometries--}function s(h,u){var f=i.get(u);return f||(u.addEventListener("dispose",a),u.isBufferGeometry?f=u:u.isGeometry&&(u._bufferGeometry===void 0&&(u._bufferGeometry=new ke().setFromObject(h)),f=u._bufferGeometry),i.set(u,f),n.memory.geometries++,f)}function o(h){var u=h.index,f=h.attributes;u!==null&&e.update(u,34963);for(var d in f)e.update(f[d],34962);var p=h.morphAttributes;for(var d in p)for(var m=p[d],x=0,g=m.length;x<g;x++)e.update(m[x],34962)}function l(h){var u=[],f=h.index,d=h.attributes.position,p=0;if(f!==null){var m=f.array;p=f.version;for(var x=0,g=m.length;x<g;x+=3){var v=m[x+0],b=m[x+1],_=m[x+2];u.push(v,b,b,_,_,v)}}else{var m=d.array;p=d.version;for(var x=0,g=m.length/3-1;x<g;x+=3){var v=x+0,b=x+1,_=x+2;u.push(v,b,b,_,_,v)}}var M=new(mM(u)>65535?Aa:Ta)(u,1);M.version=p,e.update(M,34963);var y=r.get(h);y&&e.remove(y),r.set(h,M)}function c(h){var u=r.get(h);if(u){var f=h.index;f!==null&&u.version<f.version&&l(h)}else l(h);return r.get(h)}return{get:s,update:o,getWireframeAttribute:c}}function _P(t,e,n,i){var r=i.isWebGL2,a;function s(f){a=f}var o,l;function c(f){o=f.type,l=f.bytesPerElement}function h(f,d){t.drawElements(a,d,o,f*l),n.update(d,a)}function u(f,d,p,m){if(m!==0){var x,g;if(r)x=t,g="drawElementsInstanced";else if(x=e.get("ANGLE_instanced_arrays"),g="drawElementsInstancedANGLE",x===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}x[g](a,p,o,d*l,m),n.update(p,a,m)}}this.setMode=s,this.setIndex=c,this.render=h,this.renderInstances=u}function MP(t){var e={geometries:0,textures:0},n={frame:0,calls:0,triangles:0,points:0,lines:0};function i(a,s,o){switch(o=o||1,n.calls++,s){case 4:n.triangles+=o*(a/3);break;case 1:n.lines+=o*(a/2);break;case 3:n.lines+=o*(a-1);break;case 2:n.lines+=o*a;break;case 0:n.points+=o*a;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",s);break}}function r(){n.frame++,n.calls=0,n.triangles=0,n.points=0,n.lines=0}return{memory:e,render:n,programs:null,autoReset:!0,reset:r,update:i}}function wP(t,e){return Math.abs(e[1])-Math.abs(t[1])}function bP(t){var e={},n=new Float32Array(8);function i(r,a,s,o){var l=r.morphTargetInfluences,c=l===void 0?0:l.length,h=e[a.id];if(h===void 0){h=[];for(var u=0;u<c;u++)h[u]=[u,0];e[a.id]=h}for(var f=s.morphTargets&&a.morphAttributes.position,d=s.morphNormals&&a.morphAttributes.normal,u=0;u<c;u++){var p=h[u];p[1]!==0&&(f&&a.deleteAttribute("morphTarget"+u),d&&a.deleteAttribute("morphNormal"+u))}for(var u=0;u<c;u++){var p=h[u];p[0]=u,p[1]=l[u]}h.sort(wP);for(var m=0,u=0;u<8;u++){var p=h[u];if(p){var x=p[0],g=p[1];if(g){f&&a.setAttribute("morphTarget"+u,f[x]),d&&a.setAttribute("morphNormal"+u,d[x]),n[u]=g,m+=g;continue}}n[u]=0}var v=a.morphTargetsRelative?1:1-m;o.getUniforms().setValue(t,"morphTargetBaseInfluence",v),o.getUniforms().setValue(t,"morphTargetInfluences",n)}return{update:i}}function SP(t,e,n,i){var r=new WeakMap;function a(o){var l=i.render.frame,c=o.geometry,h=e.get(o,c);return r.get(h)!==l&&(c.isGeometry&&h.updateFromObject(o),e.update(h),r.set(h,l)),o.isInstancedMesh&&n.update(o.instanceMatrix,34962),h}function s(){r=new WeakMap}return{update:a,dispose:s}}function pr(t,e,n,i,r,a,s,o,l,c){t=t!==void 0?t:[],e=e!==void 0?e:Bu,s=s!==void 0?s:sr,St.call(this,t,e,n,i,r,a,s,o,l,c),this.flipY=!1}pr.prototype=Object.create(St.prototype);pr.prototype.constructor=pr;pr.prototype.isCubeTexture=!0;Object.defineProperty(pr.prototype,"images",{get:function(){return this.image},set:function(t){this.image=t}});function Do(t,e,n,i){St.call(this,null),this.image={data:t||null,width:e||1,height:n||1,depth:i||1},this.magFilter=$t,this.minFilter=$t,this.wrapR=Rn,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}Do.prototype=Object.create(St.prototype);Do.prototype.constructor=Do;Do.prototype.isDataTexture2DArray=!0;function Io(t,e,n,i){St.call(this,null),this.image={data:t||null,width:e||1,height:n||1,depth:i||1},this.magFilter=$t,this.minFilter=$t,this.wrapR=Rn,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}Io.prototype=Object.create(St.prototype);Io.prototype.constructor=Io;Io.prototype.isDataTexture3D=!0;var _M=new St,EP=new Do,TP=new Io,MM=new pr,wM=[],bM=[],SM=new Float32Array(16),EM=new Float32Array(9),TM=new Float32Array(4);function Fo(t,e,n){var i=t[0];if(i<=0||i>0)return t;var r=e*n,a=wM[r];if(a===void 0&&(a=new Float32Array(r),wM[r]=a),e!==0){i.toArray(a,0);for(var s=1,o=0;s!==e;++s)o+=n,t[s].toArray(a,o)}return a}function ai(t,e){if(t.length!==e.length)return!1;for(var n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}function jn(t,e){for(var n=0,i=e.length;n<i;n++)t[n]=e[n]}function AM(t,e){var n=bM[e];n===void 0&&(n=new Int32Array(e),bM[e]=n);for(var i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function AP(t,e){var n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function LP(t,e){var n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y)&&(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(ai(n,e))return;t.uniform2fv(this.addr,e),jn(n,e)}}function CP(t,e){var n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(e.r!==void 0)(n[0]!==e.r||n[1]!==e.g||n[2]!==e.b)&&(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(ai(n,e))return;t.uniform3fv(this.addr,e),jn(n,e)}}function RP(t,e){var n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(ai(n,e))return;t.uniform4fv(this.addr,e),jn(n,e)}}function PP(t,e){var n=this.cache,i=e.elements;if(i===void 0){if(ai(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),jn(n,e)}else{if(ai(n,i))return;TM.set(i),t.uniformMatrix2fv(this.addr,!1,TM),jn(n,i)}}function DP(t,e){var n=this.cache,i=e.elements;if(i===void 0){if(ai(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),jn(n,e)}else{if(ai(n,i))return;EM.set(i),t.uniformMatrix3fv(this.addr,!1,EM),jn(n,i)}}function IP(t,e){var n=this.cache,i=e.elements;if(i===void 0){if(ai(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),jn(n,e)}else{if(ai(n,i))return;SM.set(i),t.uniformMatrix4fv(this.addr,!1,SM),jn(n,i)}}function FP(t,e,n){var i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.safeSetTexture2D(e||_M,r)}function BP(t,e,n){var i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(e||EP,r)}function OP(t,e,n){var i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(e||TP,r)}function NP(t,e,n){var i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.safeSetTextureCube(e||MM,r)}function zP(t,e){var n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function UP(t,e){var n=this.cache;ai(n,e)||(t.uniform2iv(this.addr,e),jn(n,e))}function GP(t,e){var n=this.cache;ai(n,e)||(t.uniform3iv(this.addr,e),jn(n,e))}function HP(t,e){var n=this.cache;ai(n,e)||(t.uniform4iv(this.addr,e),jn(n,e))}function VP(t,e){var n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function kP(t){switch(t){case 5126:return AP;case 35664:return LP;case 35665:return CP;case 35666:return RP;case 35674:return PP;case 35675:return DP;case 35676:return IP;case 5124:case 35670:return zP;case 35667:case 35671:return UP;case 35668:case 35672:return GP;case 35669:case 35673:return HP;case 5125:return VP;case 35678:case 36198:case 36298:case 36306:case 35682:return FP;case 35679:case 36299:case 36307:return OP;case 35680:case 36300:case 36308:case 36293:return NP;case 36289:case 36303:case 36311:case 36292:return BP}}function WP(t,e){t.uniform1fv(this.addr,e)}function $P(t,e){t.uniform1iv(this.addr,e)}function jP(t,e){t.uniform2iv(this.addr,e)}function XP(t,e){t.uniform3iv(this.addr,e)}function qP(t,e){t.uniform4iv(this.addr,e)}function YP(t,e){var n=Fo(e,this.size,2);t.uniform2fv(this.addr,n)}function ZP(t,e){var n=Fo(e,this.size,3);t.uniform3fv(this.addr,n)}function JP(t,e){var n=Fo(e,this.size,4);t.uniform4fv(this.addr,n)}function KP(t,e){var n=Fo(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function QP(t,e){var n=Fo(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function eD(t,e){var n=Fo(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function tD(t,e,n){var i=e.length,r=AM(n,i);t.uniform1iv(this.addr,r);for(var a=0;a!==i;++a)n.safeSetTexture2D(e[a]||_M,r[a])}function nD(t,e,n){var i=e.length,r=AM(n,i);t.uniform1iv(this.addr,r);for(var a=0;a!==i;++a)n.safeSetTextureCube(e[a]||MM,r[a])}function iD(t){switch(t){case 5126:return WP;case 35664:return YP;case 35665:return ZP;case 35666:return JP;case 35674:return KP;case 35675:return QP;case 35676:return eD;case 5124:case 35670:return $P;case 35667:case 35671:return jP;case 35668:case 35672:return XP;case 35669:case 35673:return qP;case 35678:case 36198:case 36298:case 36306:case 35682:return tD;case 35680:case 36300:case 36308:case 36293:return nD}}function rD(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=kP(e.type)}function LM(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=iD(e.type)}LM.prototype.updateCache=function(t){var e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),jn(e,t)};function CM(t){this.id=t,this.seq=[],this.map={}}CM.prototype.setValue=function(t,e,n){for(var i=this.seq,r=0,a=i.length;r!==a;++r){var s=i[r];s.setValue(t,e[s.id],n)}};var eg=/([\w\d_]+)(\])?(\[|\.)?/g;function RM(t,e){t.seq.push(e),t.map[e.id]=e}function aD(t,e,n){var i=t.name,r=i.length;for(eg.lastIndex=0;;){var a=eg.exec(i),s=eg.lastIndex,o=a[1],l=a[2]==="]",c=a[3];if(l&&(o=o|0),c===void 0||c==="["&&s+2===r){RM(n,c===void 0?new rD(o,t,e):new LM(o,t,e));break}else{var h=n.map,u=h[o];u===void 0&&(u=new CM(o),RM(n,u)),n=u}}}function Jr(t,e){this.seq=[],this.map={};for(var n=t.getProgramParameter(e,35718),i=0;i<n;++i){var r=t.getActiveUniform(e,i),a=t.getUniformLocation(e,r.name);aD(r,a,this)}}Jr.prototype.setValue=function(t,e,n,i){var r=this.map[e];r!==void 0&&r.setValue(t,n,i)};Jr.prototype.setOptional=function(t,e,n){var i=e[n];i!==void 0&&this.setValue(t,n,i)};Jr.upload=function(t,e,n,i){for(var r=0,a=e.length;r!==a;++r){var s=e[r],o=n[s.id];o.needsUpdate!==!1&&s.setValue(t,o.value,i)}};Jr.seqWithValue=function(t,e){for(var n=[],i=0,r=t.length;i!==r;++i){var a=t[i];a.id in e&&n.push(a)}return n};function PM(t,e,n){var i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),i}var sD=0;function oD(t){for(var e=t.split(`
`),n=0;n<e.length;n++)e[n]=n+1+": "+e[n];return e.join(`
`)}function DM(t){switch(t){case On:return["Linear","( value )"];case Vu:return["sRGB","( value )"];case ku:return["RGBE","( value )"];case Cm:return["RGBM","( value, 7.0 )"];case Rm:return["RGBM","( value, 16.0 )"];case Pm:return["RGBD","( value, 256.0 )"];case Lm:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case eM:return["LogLuv","( value )"];default:throw new Error("unsupported encoding: "+t)}}function IM(t,e,n){var i=t.getShaderParameter(e,35713),r=t.getShaderInfoLog(e).trim();if(i&&r==="")return"";var a=t.getShaderSource(e);return"THREE.WebGLShader: gl.getShaderInfoLog() "+n+`
`+r+oD(a)}function Pc(t,e){var n=DM(e);return"vec4 "+t+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function lD(t,e){var n=DM(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function cD(t,e){var n;switch(e){case Iu:n="Linear";break;case e_:n="Reinhard";break;case t_:n="Uncharted2";break;case n_:n="OptimizedCineon";break;case i_:n="ACESFilmic";break;default:throw new Error("unsupported toneMapping: "+e)}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function hD(t){var e=[t.extensionDerivatives||t.envMapCubeUV||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||t.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return e.filter(Dc).join(`
`)}function uD(t){var e=[];for(var n in t){var i=t[n];i!==!1&&e.push("#define "+n+" "+i)}return e.join(`
`)}function fD(t,e){for(var n={},i=t.getProgramParameter(e,35721),r=0;r<i;r++){var a=t.getActiveAttrib(e,r),s=a.name;n[s]=t.getAttribLocation(e,s)}return n}function Dc(t){return t!==""}function FM(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function BM(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}var dD=/^[ \t]*#include +<([\w\d./]+)>/gm;function tg(t){return t.replace(dD,pD)}function pD(t,e){var n=ht[e];if(n===void 0)throw new Error("Can not resolve #include <"+e+">");return tg(n)}var mD=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,gD=/#pragma unroll_loop_start[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}[\s]+?#pragma unroll_loop_end/g;function OM(t){return t.replace(gD,NM).replace(mD,vD)}function vD(t,e,n,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),NM(t,e,n,i)}function NM(t,e,n,i){for(var r="",a=parseInt(e);a<parseInt(n);a++)r+=i.replace(/\[ i \]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return r}function zM(t){var e="precision "+t.precision+` float;
precision `+t.precision+" int;";return t.precision==="highp"?e+=`
#define HIGH_PRECISION`:t.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:t.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function yD(t){var e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===sm?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===D0?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===so&&(e="SHADOWMAP_TYPE_VSM"),e}function xD(t){var e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case Bu:case Ou:e="ENVMAP_TYPE_CUBE";break;case co:case zu:e="ENVMAP_TYPE_CUBE_UV";break;case mm:case Nu:e="ENVMAP_TYPE_EQUIREC";break;case gm:e="ENVMAP_TYPE_SPHERE";break}return e}function _D(t){var e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case Ou:case Nu:e="ENVMAP_MODE_REFRACTION";break}return e}function MD(t){var e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case rc:e="ENVMAP_BLENDING_MULTIPLY";break;case K0:e="ENVMAP_BLENDING_MIX";break;case Q0:e="ENVMAP_BLENDING_ADD";break}return e}function wD(t,e,n){var i=t.getContext(),r=n.defines,a=n.vertexShader,s=n.fragmentShader,o=yD(n),l=xD(n),c=_D(n),h=MD(n),u=t.gammaFactor>0?t.gammaFactor:1,f=n.isWebGL2?"":hD(n),d=uD(r),p=i.createProgram(),m,x;if(n.isRawShaderMaterial?(m=[d].filter(Dc).join(`
`),m.length>0&&(m+=`
`),x=[f,d].filter(Dc).join(`
`),x.length>0&&(x+=`
`)):(m=[zM(n),"#define SHADER_NAME "+n.shaderName,d,n.instancing?"#define USE_INSTANCING":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+u,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&n.flatShading===!1?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+o:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING"," attribute mat4 instanceMatrix;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#ifdef USE_COLOR","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Dc).join(`
`),x=[f,zM(n),"#define SHADER_NAME "+n.shaderName,d,n.alphaTest?"#define ALPHATEST "+n.alphaTest+(n.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+u,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+l:"",n.envMap?"#define "+c:"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.sheen?"#define USE_SHEEN":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+o:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==ac?"#define TONE_MAPPING":"",n.toneMapping!==ac?ht.tonemapping_pars_fragment:"",n.toneMapping!==ac?cD("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.outputEncoding||n.mapEncoding||n.matcapEncoding||n.envMapEncoding||n.emissiveMapEncoding||n.lightMapEncoding?ht.encodings_pars_fragment:"",n.mapEncoding?Pc("mapTexelToLinear",n.mapEncoding):"",n.matcapEncoding?Pc("matcapTexelToLinear",n.matcapEncoding):"",n.envMapEncoding?Pc("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMapEncoding?Pc("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.lightMapEncoding?Pc("lightMapTexelToLinear",n.lightMapEncoding):"",n.outputEncoding?lD("linearToOutputTexel",n.outputEncoding):"",n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"",`
`].filter(Dc).join(`
`)),a=tg(a),a=FM(a,n),a=BM(a,n),s=tg(s),s=FM(s,n),s=BM(s,n),a=OM(a),s=OM(s),n.isWebGL2&&!n.isRawShaderMaterial){var g=!1,v=/^\s*#version\s+300\s+es\s*\n/;n.isShaderMaterial&&a.match(v)!==null&&s.match(v)!==null&&(g=!0,a=a.replace(v,""),s=s.replace(v,"")),m=[`#version 300 es
`,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,x=[`#version 300 es
`,"#define varying in",g?"":"out highp vec4 pc_fragColor;",g?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+x}var b=m+a,_=x+s,M=PM(i,35633,b),y=PM(i,35632,_);if(i.attachShader(p,M),i.attachShader(p,y),n.index0AttributeName!==void 0?i.bindAttribLocation(p,0,n.index0AttributeName):n.morphTargets===!0&&i.bindAttribLocation(p,0,"position"),i.linkProgram(p),t.debug.checkShaderErrors){var w=i.getProgramInfoLog(p).trim(),E=i.getShaderInfoLog(M).trim(),A=i.getShaderInfoLog(y).trim(),L=!0,S=!0;if(i.getProgramParameter(p,35714)===!1){L=!1;var R=IM(i,M,"vertex"),D=IM(i,y,"fragment");console.error("THREE.WebGLProgram: shader error: ",i.getError(),"35715",i.getProgramParameter(p,35715),"gl.getProgramInfoLog",w,R,D)}else w!==""?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",w):(E===""||A==="")&&(S=!1);S&&(this.diagnostics={runnable:L,programLog:w,vertexShader:{log:E,prefix:m},fragmentShader:{log:A,prefix:x}})}i.detachShader(p,M),i.detachShader(p,y),i.deleteShader(M),i.deleteShader(y);var I;this.getUniforms=function(){return I===void 0&&(I=new Jr(i,p)),I};var F;return this.getAttributes=function(){return F===void 0&&(F=fD(i,p)),F},this.destroy=function(){i.deleteProgram(p),this.program=void 0},this.name=n.shaderName,this.id=sD++,this.cacheKey=e,this.usedTimes=1,this.program=p,this.vertexShader=M,this.fragmentShader=y,this}function bD(t,e,n){var i=[],r=n.isWebGL2,a=n.logarithmicDepthBuffer,s=n.floatVertexTextures,o=n.precision,l=n.maxVertexUniforms,c=n.vertexTextures,h={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},u=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen"];function f(m,x){var g;if(x){var v=zi[x];g={name:m.type,uniforms:yM.clone(v.uniforms),vertexShader:v.vertexShader,fragmentShader:v.fragmentShader}}else g={name:m.type,uniforms:m.uniforms,vertexShader:m.vertexShader,fragmentShader:m.fragmentShader};return g}function d(m){var x=m.skeleton,g=x.bones;if(s)return 1024;var v=l,b=Math.floor((v-20)/4),_=Math.min(b,g.length);return _<g.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+g.length+" bones. This GPU supports "+_+"."),0):_}function p(m){var x;return m?m.isTexture?x=m.encoding:m.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),x=m.texture.encoding):x=On,x}this.getParameters=function(m,x,g,v,b,_,M){var y=v.fog,w=m.isMeshStandardMaterial?v.environment:null,E=m.envMap||w,A=h[m.type],L=M.isSkinnedMesh?d(M):0;m.precision!==null&&(o=n.getMaxPrecision(m.precision),o!==m.precision&&console.warn("THREE.WebGLProgram.getParameters:",m.precision,"not supported, using",o,"instead."));var S=f(m,A);m.onBeforeCompile(S,t);var R=t.getRenderTarget(),D={isWebGL2:r,shaderID:A,shaderName:S.name,uniforms:S.uniforms,vertexShader:S.vertexShader,fragmentShader:S.fragmentShader,defines:m.defines,isRawShaderMaterial:m.isRawShaderMaterial,isShaderMaterial:m.isShaderMaterial,precision:o,instancing:M.isInstancedMesh===!0,supportsVertexTextures:c,outputEncoding:R!==null?p(R.texture):t.outputEncoding,map:!!m.map,mapEncoding:p(m.map),matcap:!!m.matcap,matcapEncoding:p(m.matcap),envMap:!!E,envMapMode:E&&E.mapping,envMapEncoding:p(E),envMapCubeUV:!!E&&(E.mapping===co||E.mapping===zu),lightMap:!!m.lightMap,lightMapEncoding:p(m.lightMap),aoMap:!!m.aoMap,emissiveMap:!!m.emissiveMap,emissiveMapEncoding:p(m.emissiveMap),bumpMap:!!m.bumpMap,normalMap:!!m.normalMap,objectSpaceNormalMap:m.normalMapType===iM,tangentSpaceNormalMap:m.normalMapType===_a,clearcoatMap:!!m.clearcoatMap,clearcoatRoughnessMap:!!m.clearcoatRoughnessMap,clearcoatNormalMap:!!m.clearcoatNormalMap,displacementMap:!!m.displacementMap,roughnessMap:!!m.roughnessMap,metalnessMap:!!m.metalnessMap,specularMap:!!m.specularMap,alphaMap:!!m.alphaMap,gradientMap:!!m.gradientMap,sheen:!!m.sheen,combine:m.combine,vertexTangents:m.normalMap&&m.vertexTangents,vertexColors:m.vertexColors,vertexUvs:!!m.map||!!m.bumpMap||!!m.normalMap||!!m.specularMap||!!m.alphaMap||!!m.emissiveMap||!!m.roughnessMap||!!m.metalnessMap||!!m.clearcoatMap||!!m.clearcoatRoughnessMap||!!m.clearcoatNormalMap||!!m.displacementMap,uvsVertexOnly:!(!!m.map||!!m.bumpMap||!!m.normalMap||!!m.specularMap||!!m.alphaMap||!!m.emissiveMap||!!m.roughnessMap||!!m.metalnessMap||!!m.clearcoatNormalMap)&&!!m.displacementMap,fog:!!y,useFog:m.fog,fogExp2:y&&y.isFogExp2,flatShading:m.flatShading,sizeAttenuation:m.sizeAttenuation,logarithmicDepthBuffer:a,skinning:m.skinning&&L>0,maxBones:L,useVertexTexture:s,morphTargets:m.morphTargets,morphNormals:m.morphNormals,maxMorphTargets:t.maxMorphTargets,maxMorphNormals:t.maxMorphNormals,numDirLights:x.directional.length,numPointLights:x.point.length,numSpotLights:x.spot.length,numRectAreaLights:x.rectArea.length,numHemiLights:x.hemi.length,numDirLightShadows:x.directionalShadowMap.length,numPointLightShadows:x.pointShadowMap.length,numSpotLightShadows:x.spotShadowMap.length,numClippingPlanes:b,numClipIntersection:_,dithering:m.dithering,shadowMapEnabled:t.shadowMap.enabled&&g.length>0,shadowMapType:t.shadowMap.type,toneMapping:m.toneMapped?t.toneMapping:ac,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:m.premultipliedAlpha,alphaTest:m.alphaTest,doubleSided:m.side===ic,flipSided:m.side===nn,depthPacking:m.depthPacking!==void 0?m.depthPacking:!1,index0AttributeName:m.index0AttributeName,extensionDerivatives:m.extensions&&m.extensions.derivatives,extensionFragDepth:m.extensions&&m.extensions.fragDepth,extensionDrawBuffers:m.extensions&&m.extensions.drawBuffers,extensionShaderTextureLOD:m.extensions&&m.extensions.shaderTextureLOD,rendererExtensionFragDepth:r||e.get("EXT_frag_depth")!==null,rendererExtensionDrawBuffers:r||e.get("WEBGL_draw_buffers")!==null,rendererExtensionShaderTextureLod:r||e.get("EXT_shader_texture_lod")!==null,onBeforeCompile:m.onBeforeCompile};return D},this.getProgramCacheKey=function(m){var x=[];if(m.shaderID?x.push(m.shaderID):(x.push(m.fragmentShader),x.push(m.vertexShader)),m.defines!==void 0)for(var g in m.defines)x.push(g),x.push(m.defines[g]);if(m.isRawShaderMaterial===void 0){for(var v=0;v<u.length;v++)x.push(m[u[v]]);x.push(t.outputEncoding),x.push(t.gammaFactor)}return x.push(m.onBeforeCompile.toString()),x.join()},this.acquireProgram=function(m,x){for(var g,v=0,b=i.length;v<b;v++){var _=i[v];if(_.cacheKey===x){g=_,++g.usedTimes;break}}return g===void 0&&(g=new wD(t,x,m),i.push(g)),g},this.releaseProgram=function(m){if(--m.usedTimes==0){var x=i.indexOf(m);i[x]=i[i.length-1],i.pop(),m.destroy()}},this.programs=i}function SD(){var t=new WeakMap;function e(a){var s=t.get(a);return s===void 0&&(s={},t.set(a,s)),s}function n(a){t.delete(a)}function i(a,s,o){t.get(a)[s]=o}function r(){t=new WeakMap}return{get:e,remove:n,update:i,dispose:r}}function ED(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function TD(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function UM(){var t=[],e=0,n=[],i=[],r={id:-1};function a(){e=0,n.length=0,i.length=0}function s(u,f,d,p,m,x){var g=t[e];return g===void 0?(g={id:u.id,object:u,geometry:f,material:d,program:d.program||r,groupOrder:p,renderOrder:u.renderOrder,z:m,group:x},t[e]=g):(g.id=u.id,g.object=u,g.geometry=f,g.material=d,g.program=d.program||r,g.groupOrder=p,g.renderOrder=u.renderOrder,g.z=m,g.group=x),e++,g}function o(u,f,d,p,m,x){var g=s(u,f,d,p,m,x);(d.transparent===!0?i:n).push(g)}function l(u,f,d,p,m,x){var g=s(u,f,d,p,m,x);(d.transparent===!0?i:n).unshift(g)}function c(u,f){n.length>1&&n.sort(u||ED),i.length>1&&i.sort(f||TD)}function h(){for(var u=e,f=t.length;u<f;u++){var d=t[u];if(d.id===null)break;d.id=null,d.object=null,d.geometry=null,d.material=null,d.program=null,d.group=null}}return{opaque:n,transparent:i,init:a,push:o,unshift:l,finish:h,sort:c}}function AD(){var t=new WeakMap;function e(r){var a=r.target;a.removeEventListener("dispose",e),t.delete(a)}function n(r,a){var s=t.get(r),o;return s===void 0?(o=new UM,t.set(r,new WeakMap),t.get(r).set(a,o),r.addEventListener("dispose",e)):(o=s.get(a),o===void 0&&(o=new UM,s.set(a,o))),o}function i(){t=new WeakMap}return{get:n,dispose:i}}function LD(){var t={};return{get:function(e){if(t[e.id]!==void 0)return t[e.id];var n;switch(e.type){case"DirectionalLight":n={direction:new z,color:new Ve};break;case"SpotLight":n={position:new z,direction:new z,color:new Ve,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new z,color:new Ve,distance:0,decay:0};break;case"HemisphereLight":n={direction:new z,skyColor:new Ve,groundColor:new Ve};break;case"RectAreaLight":n={color:new Ve,position:new z,halfWidth:new z,halfHeight:new z};break}return t[e.id]=n,n}}}function CD(){var t={};return{get:function(e){if(t[e.id]!==void 0)return t[e.id];var n;switch(e.type){case"DirectionalLight":n={shadowBias:0,shadowRadius:1,shadowMapSize:new Me};break;case"SpotLight":n={shadowBias:0,shadowRadius:1,shadowMapSize:new Me};break;case"PointLight":n={shadowBias:0,shadowRadius:1,shadowMapSize:new Me,shadowCameraNear:1,shadowCameraFar:1e3};break}return t[e.id]=n,n}}}var RD=0;function PD(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function DD(){for(var t=new LD,e=CD(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]},i=0;i<9;i++)n.probe.push(new z);var r=new z,a=new ct,s=new ct;function o(l,c,h){for(var u=0,f=0,d=0,p=0;p<9;p++)n.probe[p].set(0,0,0);var m=0,x=0,g=0,v=0,b=0,_=0,M=0,y=0,w=h.matrixWorldInverse;l.sort(PD);for(var p=0,E=l.length;p<E;p++){var A=l[p],L=A.color,S=A.intensity,R=A.distance,D=A.shadow&&A.shadow.map?A.shadow.map.texture:null;if(A.isAmbientLight)u+=L.r*S,f+=L.g*S,d+=L.b*S;else if(A.isLightProbe)for(var I=0;I<9;I++)n.probe[I].addScaledVector(A.sh.coefficients[I],S);else if(A.isDirectionalLight){var F=t.get(A);if(F.color.copy(A.color).multiplyScalar(A.intensity),F.direction.setFromMatrixPosition(A.matrixWorld),r.setFromMatrixPosition(A.target.matrixWorld),F.direction.sub(r),F.direction.transformDirection(w),A.castShadow){var U=A.shadow,j=e.get(A);j.shadowBias=U.bias,j.shadowRadius=U.radius,j.shadowMapSize=U.mapSize,n.directionalShadow[m]=j,n.directionalShadowMap[m]=D,n.directionalShadowMatrix[m]=A.shadow.matrix,_++}n.directional[m]=F,m++}else if(A.isSpotLight){var F=t.get(A);if(F.position.setFromMatrixPosition(A.matrixWorld),F.position.applyMatrix4(w),F.color.copy(L).multiplyScalar(S),F.distance=R,F.direction.setFromMatrixPosition(A.matrixWorld),r.setFromMatrixPosition(A.target.matrixWorld),F.direction.sub(r),F.direction.transformDirection(w),F.coneCos=Math.cos(A.angle),F.penumbraCos=Math.cos(A.angle*(1-A.penumbra)),F.decay=A.decay,A.castShadow){var U=A.shadow,j=e.get(A);j.shadowBias=U.bias,j.shadowRadius=U.radius,j.shadowMapSize=U.mapSize,n.spotShadow[g]=j,n.spotShadowMap[g]=D,n.spotShadowMatrix[g]=A.shadow.matrix,y++}n.spot[g]=F,g++}else if(A.isRectAreaLight){var F=t.get(A);F.color.copy(L).multiplyScalar(S),F.position.setFromMatrixPosition(A.matrixWorld),F.position.applyMatrix4(w),s.identity(),a.copy(A.matrixWorld),a.premultiply(w),s.extractRotation(a),F.halfWidth.set(A.width*.5,0,0),F.halfHeight.set(0,A.height*.5,0),F.halfWidth.applyMatrix4(s),F.halfHeight.applyMatrix4(s),n.rectArea[v]=F,v++}else if(A.isPointLight){var F=t.get(A);if(F.position.setFromMatrixPosition(A.matrixWorld),F.position.applyMatrix4(w),F.color.copy(A.color).multiplyScalar(A.intensity),F.distance=A.distance,F.decay=A.decay,A.castShadow){var U=A.shadow,j=e.get(A);j.shadowBias=U.bias,j.shadowRadius=U.radius,j.shadowMapSize=U.mapSize,j.shadowCameraNear=U.camera.near,j.shadowCameraFar=U.camera.far,n.pointShadow[x]=j,n.pointShadowMap[x]=D,n.pointShadowMatrix[x]=A.shadow.matrix,M++}n.point[x]=F,x++}else if(A.isHemisphereLight){var F=t.get(A);F.direction.setFromMatrixPosition(A.matrixWorld),F.direction.transformDirection(w),F.direction.normalize(),F.skyColor.copy(A.color).multiplyScalar(S),F.groundColor.copy(A.groundColor).multiplyScalar(S),n.hemi[b]=F,b++}}n.ambient[0]=u,n.ambient[1]=f,n.ambient[2]=d;var Y=n.hash;(Y.directionalLength!==m||Y.pointLength!==x||Y.spotLength!==g||Y.rectAreaLength!==v||Y.hemiLength!==b||Y.numDirectionalShadows!==_||Y.numPointShadows!==M||Y.numSpotShadows!==y)&&(n.directional.length=m,n.spot.length=g,n.rectArea.length=v,n.point.length=x,n.hemi.length=b,n.directionalShadow.length=_,n.directionalShadowMap.length=_,n.pointShadow.length=M,n.pointShadowMap.length=M,n.spotShadow.length=y,n.spotShadowMap.length=y,n.directionalShadowMatrix.length=_,n.pointShadowMatrix.length=M,n.spotShadowMatrix.length=y,Y.directionalLength=m,Y.pointLength=x,Y.spotLength=g,Y.rectAreaLength=v,Y.hemiLength=b,Y.numDirectionalShadows=_,Y.numPointShadows=M,Y.numSpotShadows=y,n.version=RD++)}return{setup:o,state:n}}function GM(){var t=new DD,e=[],n=[];function i(){e.length=0,n.length=0}function r(l){e.push(l)}function a(l){n.push(l)}function s(l){t.setup(e,n,l)}var o={lightsArray:e,shadowsArray:n,lights:t};return{init:i,state:o,setupLights:s,pushLight:r,pushShadow:a}}function ID(){var t=new WeakMap;function e(r){var a=r.target;a.removeEventListener("dispose",e),t.delete(a)}function n(r,a){var s;return t.has(r)===!1?(s=new GM,t.set(r,new WeakMap),t.get(r).set(a,s),r.addEventListener("dispose",e)):t.get(r).has(a)===!1?(s=new GM,t.get(r).set(a,s)):s=t.get(r).get(a),s}function i(){t=new WeakMap}return{get:n,dispose:i}}function Kr(t){Je.call(this),this.type="MeshDepthMaterial",this.depthPacking=tM,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}Kr.prototype=Object.create(Je.prototype);Kr.prototype.constructor=Kr;Kr.prototype.isMeshDepthMaterial=!0;Kr.prototype.copy=function(t){return Je.prototype.copy.call(this,t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this};function Qr(t){Je.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new z,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}Qr.prototype=Object.create(Je.prototype);Qr.prototype.constructor=Qr;Qr.prototype.isMeshDistanceMaterial=!0;Qr.prototype.copy=function(t){return Je.prototype.copy.call(this,t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this};var FD=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
  float mean = 0.0;
  float squared_mean = 0.0;
	float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );
  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {
    #ifdef HORIZONAL_PASS
      vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );
      mean += distribution.x;
      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
    #else
      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );
      mean += depth;
      squared_mean += depth * depth;
    #endif
  }
  mean = mean * HALF_SAMPLE_RATE;
  squared_mean = squared_mean * HALF_SAMPLE_RATE;
  float std_dev = sqrt( squared_mean - mean * mean );
  gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`,BD=`void main() {
	gl_Position = vec4( position, 1.0 );
}`;function HM(t,e,n){var i=new Po,r=new Me,a=new Me,s=new Et,o=[],l=[],c={},h={0:nn,1:oo,2:ic},u=new Dn({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new Me},radius:{value:4}},vertexShader:BD,fragmentShader:FD}),f=u.clone();f.defines.HORIZONAL_PASS=1;var d=new ke;d.setAttribute("position",new Ke(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));var p=new Ft(d,u),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=sm,this.render=function(M,y,w){if(m.enabled!==!1&&!(m.autoUpdate===!1&&m.needsUpdate===!1)&&M.length!==0){var E=t.getRenderTarget(),A=t.getActiveCubeFace(),L=t.getActiveMipmapLevel(),S=t.state;S.setBlending(rr),S.buffers.color.setClear(1,1,1,1),S.buffers.depth.setTest(!0),S.setScissorTest(!1);for(var R=0,D=M.length;R<D;R++){var I=M[R],F=I.shadow;if(F===void 0){console.warn("THREE.WebGLShadowMap:",I,"has no shadow.");continue}r.copy(F.mapSize);var U=F.getFrameExtents();if(r.multiply(U),a.copy(F.mapSize),(r.x>n||r.y>n)&&(console.warn("THREE.WebGLShadowMap:",I,"has shadow exceeding max texture size, reducing"),r.x>n&&(a.x=Math.floor(n/U.x),r.x=a.x*U.x,F.mapSize.x=a.x),r.y>n&&(a.y=Math.floor(n/U.y),r.y=a.y*U.y,F.mapSize.y=a.y)),F.map===null&&!F.isPointLightShadow&&this.type===so){var j={minFilter:rn,magFilter:rn,format:ii};F.map=new kn(r.x,r.y,j),F.map.texture.name=I.name+".shadowMap",F.mapPass=new kn(r.x,r.y,j),F.camera.updateProjectionMatrix()}if(F.map===null){var j={minFilter:$t,magFilter:$t,format:ii};F.map=new kn(r.x,r.y,j),F.map.texture.name=I.name+".shadowMap",F.camera.updateProjectionMatrix()}t.setRenderTarget(F.map),t.clear();for(var Y=F.getViewportCount(),K=0;K<Y;K++){var X=F.getViewport(K);s.set(a.x*X.x,a.y*X.y,a.x*X.z,a.y*X.w),S.viewport(s),F.updateMatrices(I,K),i=F.getFrustum(),_(y,w,F.camera,I,this.type)}!F.isPointLightShadow&&this.type===so&&x(F,w)}m.needsUpdate=!1,t.setRenderTarget(E,A,L)}};function x(M,y){var w=e.update(p);u.uniforms.shadow_pass.value=M.map.texture,u.uniforms.resolution.value=M.mapSize,u.uniforms.radius.value=M.radius,t.setRenderTarget(M.mapPass),t.clear(),t.renderBufferDirect(y,null,w,u,p,null),f.uniforms.shadow_pass.value=M.mapPass.texture,f.uniforms.resolution.value=M.mapSize,f.uniforms.radius.value=M.radius,t.setRenderTarget(M.map),t.clear(),t.renderBufferDirect(y,null,w,f,p,null)}function g(M,y,w){var E=M<<0|y<<1|w<<2,A=o[E];return A===void 0&&(A=new Kr({depthPacking:nM,morphTargets:M,skinning:y}),o[E]=A),A}function v(M,y,w){var E=M<<0|y<<1|w<<2,A=l[E];return A===void 0&&(A=new Qr({morphTargets:M,skinning:y}),l[E]=A),A}function b(M,y,w,E,A,L){var S=M.geometry,R=null,D=g,I=M.customDepthMaterial;if(w.isPointLight===!0&&(D=v,I=M.customDistanceMaterial),I===void 0){var F=!1;y.morphTargets===!0&&(S.isBufferGeometry===!0?F=S.morphAttributes&&S.morphAttributes.position&&S.morphAttributes.position.length>0:S.isGeometry===!0&&(F=S.morphTargets&&S.morphTargets.length>0));var U=!1;M.isSkinnedMesh===!0&&(y.skinning===!0?U=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",M));var j=M.isInstancedMesh===!0;R=D(F,U,j)}else R=I;if(t.localClippingEnabled&&y.clipShadows===!0&&y.clippingPlanes.length!==0){var Y=R.uuid,K=y.uuid,X=c[Y];X===void 0&&(X={},c[Y]=X);var q=X[K];q===void 0&&(q=R.clone(),X[K]=q),R=q}return R.visible=y.visible,R.wireframe=y.wireframe,L===so?R.side=y.shadowSide!==null?y.shadowSide:y.side:R.side=y.shadowSide!==null?y.shadowSide:h[y.side],R.clipShadows=y.clipShadows,R.clippingPlanes=y.clippingPlanes,R.clipIntersection=y.clipIntersection,R.wireframeLinewidth=y.wireframeLinewidth,R.linewidth=y.linewidth,w.isPointLight===!0&&R.isMeshDistanceMaterial===!0&&(R.referencePosition.setFromMatrixPosition(w.matrixWorld),R.nearDistance=E,R.farDistance=A),R}function _(M,y,w,E,A){if(M.visible!==!1){var L=M.layers.test(y.layers);if(L&&(M.isMesh||M.isLine||M.isPoints)&&(M.castShadow||M.receiveShadow&&A===so)&&(!M.frustumCulled||i.intersectsObject(M))){M.modelViewMatrix.multiplyMatrices(w.matrixWorldInverse,M.matrixWorld);var S=e.update(M),R=M.material;if(Array.isArray(R))for(var D=S.groups,I=0,F=D.length;I<F;I++){var U=D[I],j=R[U.materialIndex];if(j&&j.visible){var Y=b(M,j,E,w.near,w.far,A);t.renderBufferDirect(w,null,S,Y,M,U)}}else if(R.visible){var Y=b(M,R,E,w.near,w.far,A);t.renderBufferDirect(w,null,S,Y,M,null)}}for(var K=M.children,X=0,q=K.length;X<q;X++)_(K[X],y,w,E,A)}}}function OD(t,e,n){var i=n.isWebGL2;function r(){var B=!1,Q=new Et,ue=null,W=new Et(0,0,0,0);return{setMask:function(ce){ue!==ce&&!B&&(t.colorMask(ce,ce,ce,ce),ue=ce)},setLocked:function(ce){B=ce},setClear:function(ce,be,Ie,se,Be){Be===!0&&(ce*=se,be*=se,Ie*=se),Q.set(ce,be,Ie,se),W.equals(Q)===!1&&(t.clearColor(ce,be,Ie,se),W.copy(Q))},reset:function(){B=!1,ue=null,W.set(-1,0,0,0)}}}function a(){var B=!1,Q=null,ue=null,W=null;return{setTest:function(ce){ce?Ee(2929):we(2929)},setMask:function(ce){Q!==ce&&!B&&(t.depthMask(ce),Q=ce)},setFunc:function(ce){if(ue!==ce){if(ce)switch(ce){case $0:t.depthFunc(512);break;case j0:t.depthFunc(519);break;case X0:t.depthFunc(513);break;case Du:t.depthFunc(515);break;case q0:t.depthFunc(514);break;case Y0:t.depthFunc(518);break;case Z0:t.depthFunc(516);break;case J0:t.depthFunc(517);break;default:t.depthFunc(515)}else t.depthFunc(515);ue=ce}},setLocked:function(ce){B=ce},setClear:function(ce){W!==ce&&(t.clearDepth(ce),W=ce)},reset:function(){B=!1,Q=null,ue=null,W=null}}}function s(){var B=!1,Q=null,ue=null,W=null,ce=null,be=null,Ie=null,se=null,Be=null;return{setTest:function(je){B||(je?Ee(2960):we(2960))},setMask:function(je){Q!==je&&!B&&(t.stencilMask(je),Q=je)},setFunc:function(je,ot,At){(ue!==je||W!==ot||ce!==At)&&(t.stencilFunc(je,ot,At),ue=je,W=ot,ce=At)},setOp:function(je,ot,At){(be!==je||Ie!==ot||se!==At)&&(t.stencilOp(je,ot,At),be=je,Ie=ot,se=At)},setLocked:function(je){B=je},setClear:function(je){Be!==je&&(t.clearStencil(je),Be=je)},reset:function(){B=!1,Q=null,ue=null,W=null,ce=null,be=null,Ie=null,se=null,Be=null}}}var o=new r,l=new a,c=new s,h=t.getParameter(34921),u=new Uint8Array(h),f=new Uint8Array(h),d=new Uint8Array(h),p={},m=null,x=null,g=null,v=null,b=null,_=null,M=null,y=null,w=null,E=!1,A=null,L=null,S=null,R=null,D=null,I=t.getParameter(35661),F=!1,U=0,j=t.getParameter(7938);j.indexOf("WebGL")!==-1?(U=parseFloat(/^WebGL\ ([0-9])/.exec(j)[1]),F=U>=1):j.indexOf("OpenGL ES")!==-1&&(U=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(j)[1]),F=U>=2);var Y=null,K={},X=new Et,q=new Et;function he(B,Q,ue){var W=new Uint8Array(4),ce=t.createTexture();t.bindTexture(B,ce),t.texParameteri(B,10241,9728),t.texParameteri(B,10240,9728);for(var be=0;be<ue;be++)t.texImage2D(Q+be,0,6408,1,1,0,6408,5121,W);return ce}var Se={};Se[3553]=he(3553,3553,1),Se[34067]=he(34067,34069,6),o.setClear(0,0,0,1),l.setClear(1),c.setClear(0),Ee(2929),l.setFunc(Du),Ce(!1),O(am),Ee(2884),pe(rr);function _e(){for(var B=0,Q=u.length;B<Q;B++)u[B]=0}function Z(B){ie(B,0)}function ie(B,Q){if(u[B]=1,f[B]===0&&(t.enableVertexAttribArray(B),f[B]=1),d[B]!==Q){var ue=i?t:e.get("ANGLE_instanced_arrays");ue[i?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](B,Q),d[B]=Q}}function Le(){for(var B=0,Q=f.length;B!==Q;++B)f[B]!==u[B]&&(t.disableVertexAttribArray(B),f[B]=0)}function Ee(B){p[B]!==!0&&(t.enable(B),p[B]=!0)}function we(B){p[B]!==!1&&(t.disable(B),p[B]=!1)}function Ae(B){return m!==B?(t.useProgram(B),m=B,!0):!1}var ae={[ga]:32774,[F0]:32778,[B0]:32779};if(i)ae[um]=32775,ae[fm]=32776;else{var ee=e.get("EXT_blend_minmax");ee!==null&&(ae[um]=ee.MIN_EXT,ae[fm]=ee.MAX_EXT)}var ve={[O0]:0,[N0]:1,[z0]:768,[dm]:770,[W0]:776,[V0]:774,[G0]:772,[U0]:769,[pm]:771,[k0]:775,[H0]:773};function pe(B,Q,ue,W,ce,be,Ie,se){if(B===rr){x&&(we(3042),x=!1);return}if(x||(Ee(3042),x=!0),B!==I0){if(B!==g||se!==E){if((v!==ga||M!==ga)&&(t.blendEquation(32774),v=ga,M=ga),se)switch(B){case lo:t.blendFuncSeparate(1,771,1,771);break;case lm:t.blendFunc(1,1);break;case cm:t.blendFuncSeparate(0,0,769,771);break;case hm:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",B);break}else switch(B){case lo:t.blendFuncSeparate(770,771,1,771);break;case lm:t.blendFunc(770,1);break;case cm:t.blendFunc(0,769);break;case hm:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",B);break}b=null,_=null,y=null,w=null,g=B,E=se}return}ce=ce||Q,be=be||ue,Ie=Ie||W,(Q!==v||ce!==M)&&(t.blendEquationSeparate(ae[Q],ae[ce]),v=Q,M=ce),(ue!==b||W!==_||be!==y||Ie!==w)&&(t.blendFuncSeparate(ve[ue],ve[W],ve[be],ve[Ie]),b=ue,_=W,y=be,w=Ie),g=B,E=null}function De(B,Q){B.side===ic?we(2884):Ee(2884);var ue=B.side===nn;Q&&(ue=!ue),Ce(ue),B.blending===lo&&B.transparent===!1?pe(rr):pe(B.blending,B.blendEquation,B.blendSrc,B.blendDst,B.blendEquationAlpha,B.blendSrcAlpha,B.blendDstAlpha,B.premultipliedAlpha),l.setFunc(B.depthFunc),l.setTest(B.depthTest),l.setMask(B.depthWrite),o.setMask(B.colorWrite);var W=B.stencilWrite;c.setTest(W),W&&(c.setMask(B.stencilWriteMask),c.setFunc(B.stencilFunc,B.stencilRef,B.stencilFuncMask),c.setOp(B.stencilFail,B.stencilZFail,B.stencilZPass)),ye(B.polygonOffset,B.polygonOffsetFactor,B.polygonOffsetUnits)}function Ce(B){A!==B&&(B?t.frontFace(2304):t.frontFace(2305),A=B)}function O(B){B!==R0?(Ee(2884),B!==L&&(B===am?t.cullFace(1029):B===P0?t.cullFace(1028):t.cullFace(1032))):we(2884),L=B}function G(B){B!==S&&(F&&t.lineWidth(B),S=B)}function ye(B,Q,ue){B?(Ee(32823),(R!==Q||D!==ue)&&(t.polygonOffset(Q,ue),R=Q,D=ue)):we(32823)}function de(B){B?Ee(3089):we(3089)}function He(B){B===void 0&&(B=33984+I-1),Y!==B&&(t.activeTexture(B),Y=B)}function N(B,Q){Y===null&&He();var ue=K[Y];ue===void 0&&(ue={type:void 0,texture:void 0},K[Y]=ue),(ue.type!==B||ue.texture!==Q)&&(t.bindTexture(B,Q||Se[B]),ue.type=B,ue.texture=Q)}function P(){var B=K[Y];B!==void 0&&B.type!==void 0&&(t.bindTexture(B.type,null),B.type=void 0,B.texture=void 0)}function te(){try{t.compressedTexImage2D.apply(t,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function fe(){try{t.texImage2D.apply(t,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function me(){try{t.texImage3D.apply(t,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function J(B){X.equals(B)===!1&&(t.scissor(B.x,B.y,B.z,B.w),X.copy(B))}function xe(B){q.equals(B)===!1&&(t.viewport(B.x,B.y,B.z,B.w),q.copy(B))}function V(){for(var B=0;B<f.length;B++)f[B]===1&&(t.disableVertexAttribArray(B),f[B]=0);p={},Y=null,K={},m=null,g=null,A=null,L=null,o.reset(),l.reset(),c.reset()}return{buffers:{color:o,depth:l,stencil:c},initAttributes:_e,enableAttribute:Z,enableAttributeAndDivisor:ie,disableUnusedAttributes:Le,enable:Ee,disable:we,useProgram:Ae,setBlending:pe,setMaterial:De,setFlipSided:Ce,setCullFace:O,setLineWidth:G,setPolygonOffset:ye,setScissorTest:de,activeTexture:He,bindTexture:N,unbindTexture:P,compressedTexImage2D:te,texImage2D:fe,texImage3D:me,scissor:J,viewport:xe,reset:V}}function ND(t,e,n,i,r,a,s){var o=r.isWebGL2,l=r.maxTextures,c=r.maxCubemapSize,h=r.maxTextureSize,u=r.maxSamples,f=new WeakMap,d,p=!1;try{p=typeof OffscreenCanvas!="undefined"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function m(O,G){return p?new OffscreenCanvas(O,G):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function x(O,G,ye,de){var He=1;if((O.width>de||O.height>de)&&(He=de/Math.max(O.width,O.height)),He<1||G===!0)if(typeof HTMLImageElement!="undefined"&&O instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&O instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&O instanceof ImageBitmap){var N=G?it.floorPowerOfTwo:Math.floor,P=N(He*O.width),te=N(He*O.height);d===void 0&&(d=m(P,te));var fe=ye?m(P,te):d;fe.width=P,fe.height=te;var me=fe.getContext("2d");return me.drawImage(O,0,0,P,te),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+O.width+"x"+O.height+") to ("+P+"x"+te+")."),fe}else return"data"in O&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+O.width+"x"+O.height+")."),O;return O}function g(O){return it.isPowerOfTwo(O.width)&&it.isPowerOfTwo(O.height)}function v(O){return o?!1:O.wrapS!==Rn||O.wrapT!==Rn||O.minFilter!==$t&&O.minFilter!==rn}function b(O,G){return O.generateMipmaps&&G&&O.minFilter!==$t&&O.minFilter!==rn}function _(O,G,ye,de){t.generateMipmap(O);var He=i.get(G);He.__maxMipLevel=Math.log(Math.max(ye,de))*Math.LOG2E}function M(O,G,ye){if(o===!1)return G;if(O!==null){if(t[O]!==void 0)return t[O];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+O+"'")}var de=G;return G===6403&&(ye===5126&&(de=33326),ye===5131&&(de=33325),ye===5121&&(de=33321)),G===6407&&(ye===5126&&(de=34837),ye===5131&&(de=34843),ye===5121&&(de=32849)),G===6408&&(ye===5126&&(de=34836),ye===5131&&(de=34842),ye===5121&&(de=32856)),(de===33325||de===33326||de===34842||de===34836)&&e.get("EXT_color_buffer_float"),de}function y(O){return O===$t||O===Uu||O===Gu?9728:9729}function w(O){var G=O.target;G.removeEventListener("dispose",w),A(G),G.isVideoTexture&&f.delete(G),s.memory.textures--}function E(O){var G=O.target;G.removeEventListener("dispose",E),L(G),s.memory.textures--}function A(O){var G=i.get(O);G.__webglInit!==void 0&&(t.deleteTexture(G.__webglTexture),i.remove(O))}function L(O){var G=i.get(O),ye=i.get(O.texture);if(!!O){if(ye.__webglTexture!==void 0&&t.deleteTexture(ye.__webglTexture),O.depthTexture&&O.depthTexture.dispose(),O.isWebGLCubeRenderTarget)for(var de=0;de<6;de++)t.deleteFramebuffer(G.__webglFramebuffer[de]),G.__webglDepthbuffer&&t.deleteRenderbuffer(G.__webglDepthbuffer[de]);else t.deleteFramebuffer(G.__webglFramebuffer),G.__webglDepthbuffer&&t.deleteRenderbuffer(G.__webglDepthbuffer),G.__webglMultisampledFramebuffer&&t.deleteFramebuffer(G.__webglMultisampledFramebuffer),G.__webglColorRenderbuffer&&t.deleteRenderbuffer(G.__webglColorRenderbuffer),G.__webglDepthRenderbuffer&&t.deleteRenderbuffer(G.__webglDepthRenderbuffer);i.remove(O.texture),i.remove(O)}}var S=0;function R(){S=0}function D(){var O=S;return O>=l&&console.warn("THREE.WebGLTextures: Trying to use "+O+" texture units while this GPU supports only "+l),S+=1,O}function I(O,G){var ye=i.get(O);if(O.isVideoTexture&&ee(O),O.version>0&&ye.__version!==O.version){var de=O.image;if(de===void 0)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(de.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Se(ye,O,G);return}}n.activeTexture(33984+G),n.bindTexture(3553,ye.__webglTexture)}function F(O,G){var ye=i.get(O);if(O.version>0&&ye.__version!==O.version){Se(ye,O,G);return}n.activeTexture(33984+G),n.bindTexture(35866,ye.__webglTexture)}function U(O,G){var ye=i.get(O);if(O.version>0&&ye.__version!==O.version){Se(ye,O,G);return}n.activeTexture(33984+G),n.bindTexture(32879,ye.__webglTexture)}function j(O,G){if(O.image.length===6){var ye=i.get(O);if(O.version>0&&ye.__version!==O.version){he(ye,O),n.activeTexture(33984+G),n.bindTexture(34067,ye.__webglTexture),t.pixelStorei(37440,O.flipY);for(var de=O&&(O.isCompressedTexture||O.image[0].isCompressedTexture),He=O.image[0]&&O.image[0].isDataTexture,N=[],P=0;P<6;P++)!de&&!He?N[P]=x(O.image[P],!1,!0,c):N[P]=He?O.image[P].image:O.image[P];var te=N[0],fe=g(te)||o,me=a.convert(O.format),J=a.convert(O.type),xe=M(O.internalFormat,me,J);q(34067,O,fe);var V;if(de){for(var P=0;P<6;P++){V=N[P].mipmaps;for(var B=0;B<V.length;B++){var Q=V[B];O.format!==ii&&O.format!==sr?me!==null?n.compressedTexImage2D(34069+P,B,xe,Q.width,Q.height,0,Q.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+P,B,xe,Q.width,Q.height,0,me,J,Q.data)}}ye.__maxMipLevel=V.length-1}else{V=O.mipmaps;for(var P=0;P<6;P++)if(He){n.texImage2D(34069+P,0,xe,N[P].width,N[P].height,0,me,J,N[P].data);for(var B=0;B<V.length;B++){var Q=V[B],ue=Q.image[P].image;n.texImage2D(34069+P,B+1,xe,ue.width,ue.height,0,me,J,ue.data)}}else{n.texImage2D(34069+P,0,xe,me,J,N[P]);for(var B=0;B<V.length;B++){var Q=V[B];n.texImage2D(34069+P,B+1,xe,me,J,Q.image[P])}}ye.__maxMipLevel=V.length}b(O,fe)&&_(34067,O,te.width,te.height),ye.__version=O.version,O.onUpdate&&O.onUpdate(O)}else n.activeTexture(33984+G),n.bindTexture(34067,ye.__webglTexture)}}function Y(O,G){n.activeTexture(33984+G),n.bindTexture(34067,i.get(O).__webglTexture)}var K={[sc]:10497,[Rn]:33071,[oc]:33648},X={[$t]:9728,[Uu]:9984,[Gu]:9986,[rn]:9729,[vm]:9985,[lc]:9987};function q(O,G,ye){ye?(t.texParameteri(O,10242,K[G.wrapS]),t.texParameteri(O,10243,K[G.wrapT]),(O===32879||O===35866)&&t.texParameteri(O,32882,K[G.wrapR]),t.texParameteri(O,10240,X[G.magFilter]),t.texParameteri(O,10241,X[G.minFilter])):(t.texParameteri(O,10242,33071),t.texParameteri(O,10243,33071),(O===32879||O===35866)&&t.texParameteri(O,32882,33071),(G.wrapS!==Rn||G.wrapT!==Rn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(O,10240,y(G.magFilter)),t.texParameteri(O,10241,y(G.minFilter)),G.minFilter!==$t&&G.minFilter!==rn&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));var de=e.get("EXT_texture_filter_anisotropic");if(de){if(G.type===ar&&e.get("OES_texture_float_linear")===null||G.type===fc&&(o||e.get("OES_texture_half_float_linear"))===null)return;(G.anisotropy>1||i.get(G).__currentAnisotropy)&&(t.texParameterf(O,de.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(G.anisotropy,r.getMaxAnisotropy())),i.get(G).__currentAnisotropy=G.anisotropy)}}function he(O,G){O.__webglInit===void 0&&(O.__webglInit=!0,G.addEventListener("dispose",w),O.__webglTexture=t.createTexture(),s.memory.textures++)}function Se(O,G,ye){var de=3553;G.isDataTexture2DArray&&(de=35866),G.isDataTexture3D&&(de=32879),he(O,G),n.activeTexture(33984+ye),n.bindTexture(de,O.__webglTexture),t.pixelStorei(37440,G.flipY),t.pixelStorei(37441,G.premultiplyAlpha),t.pixelStorei(3317,G.unpackAlignment);var He=v(G)&&g(G.image)===!1,N=x(G.image,He,!1,h),P=g(N)||o,te=a.convert(G.format),fe=a.convert(G.type),me=M(G.internalFormat,te,fe);q(de,G,P);var J,xe=G.mipmaps;if(G.isDepthTexture)me=6402,o?G.type===ar?me=36012:G.type===uc?me=33190:G.type===ho?me=35056:me=33189:G.type===ar&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),G.format===va&&me===6402&&G.type!==hc&&G.type!==uc&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),G.type=hc,fe=a.convert(G.type)),G.format===uo&&me===6402&&(me=34041,G.type!==ho&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),G.type=ho,fe=a.convert(G.type))),n.texImage2D(3553,0,me,N.width,N.height,0,te,fe,null);else if(G.isDataTexture)if(xe.length>0&&P){for(var V=0,B=xe.length;V<B;V++)J=xe[V],n.texImage2D(3553,V,me,J.width,J.height,0,te,fe,J.data);G.generateMipmaps=!1,O.__maxMipLevel=xe.length-1}else n.texImage2D(3553,0,me,N.width,N.height,0,te,fe,N.data),O.__maxMipLevel=0;else if(G.isCompressedTexture){for(var V=0,B=xe.length;V<B;V++)J=xe[V],G.format!==ii&&G.format!==sr?te!==null?n.compressedTexImage2D(3553,V,me,J.width,J.height,0,J.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,V,me,J.width,J.height,0,te,fe,J.data);O.__maxMipLevel=xe.length-1}else if(G.isDataTexture2DArray)n.texImage3D(35866,0,me,N.width,N.height,N.depth,0,te,fe,N.data),O.__maxMipLevel=0;else if(G.isDataTexture3D)n.texImage3D(32879,0,me,N.width,N.height,N.depth,0,te,fe,N.data),O.__maxMipLevel=0;else if(xe.length>0&&P){for(var V=0,B=xe.length;V<B;V++)J=xe[V],n.texImage2D(3553,V,me,te,fe,J);G.generateMipmaps=!1,O.__maxMipLevel=xe.length-1}else n.texImage2D(3553,0,me,te,fe,N),O.__maxMipLevel=0;b(G,P)&&_(de,G,N.width,N.height),O.__version=G.version,G.onUpdate&&G.onUpdate(G)}function _e(O,G,ye,de){var He=a.convert(G.texture.format),N=a.convert(G.texture.type),P=M(G.texture.internalFormat,He,N);n.texImage2D(de,0,P,G.width,G.height,0,He,N,null),t.bindFramebuffer(36160,O),t.framebufferTexture2D(36160,ye,de,i.get(G.texture).__webglTexture,0),t.bindFramebuffer(36160,null)}function Z(O,G,ye){if(t.bindRenderbuffer(36161,O),G.depthBuffer&&!G.stencilBuffer){var de=33189;if(ye){var He=G.depthTexture;He&&He.isDepthTexture&&(He.type===ar?de=36012:He.type===uc&&(de=33190));var N=ae(G);t.renderbufferStorageMultisample(36161,N,de,G.width,G.height)}else t.renderbufferStorage(36161,de,G.width,G.height);t.framebufferRenderbuffer(36160,36096,36161,O)}else if(G.depthBuffer&&G.stencilBuffer){if(ye){var N=ae(G);t.renderbufferStorageMultisample(36161,N,35056,G.width,G.height)}else t.renderbufferStorage(36161,34041,G.width,G.height);t.framebufferRenderbuffer(36160,33306,36161,O)}else{var P=a.convert(G.texture.format),te=a.convert(G.texture.type),de=M(G.texture.internalFormat,P,te);if(ye){var N=ae(G);t.renderbufferStorageMultisample(36161,N,de,G.width,G.height)}else t.renderbufferStorage(36161,de,G.width,G.height)}t.bindRenderbuffer(36161,null)}function ie(O,G){var ye=G&&G.isWebGLCubeRenderTarget;if(ye)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,O),!(G.depthTexture&&G.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(G.depthTexture).__webglTexture||G.depthTexture.image.width!==G.width||G.depthTexture.image.height!==G.height)&&(G.depthTexture.image.width=G.width,G.depthTexture.image.height=G.height,G.depthTexture.needsUpdate=!0),I(G.depthTexture,0);var de=i.get(G.depthTexture).__webglTexture;if(G.depthTexture.format===va)t.framebufferTexture2D(36160,36096,3553,de,0);else if(G.depthTexture.format===uo)t.framebufferTexture2D(36160,33306,3553,de,0);else throw new Error("Unknown depthTexture format")}function Le(O){var G=i.get(O),ye=O.isWebGLCubeRenderTarget===!0;if(O.depthTexture){if(ye)throw new Error("target.depthTexture not supported in Cube render targets");ie(G.__webglFramebuffer,O)}else if(ye){G.__webglDepthbuffer=[];for(var de=0;de<6;de++)t.bindFramebuffer(36160,G.__webglFramebuffer[de]),G.__webglDepthbuffer[de]=t.createRenderbuffer(),Z(G.__webglDepthbuffer[de],O,!1)}else t.bindFramebuffer(36160,G.__webglFramebuffer),G.__webglDepthbuffer=t.createRenderbuffer(),Z(G.__webglDepthbuffer,O,!1);t.bindFramebuffer(36160,null)}function Ee(O){var G=i.get(O),ye=i.get(O.texture);O.addEventListener("dispose",E),ye.__webglTexture=t.createTexture(),s.memory.textures++;var de=O.isWebGLCubeRenderTarget===!0,He=O.isWebGLMultisampleRenderTarget===!0,N=g(O)||o;if(o&&O.texture.format===sr&&(O.texture.type===ar||O.texture.type===fc)&&(O.texture.format=ii,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),de){G.__webglFramebuffer=[];for(var P=0;P<6;P++)G.__webglFramebuffer[P]=t.createFramebuffer()}else if(G.__webglFramebuffer=t.createFramebuffer(),He)if(o){G.__webglMultisampledFramebuffer=t.createFramebuffer(),G.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(36161,G.__webglColorRenderbuffer);var te=a.convert(O.texture.format),fe=a.convert(O.texture.type),me=M(O.texture.internalFormat,te,fe),J=ae(O);t.renderbufferStorageMultisample(36161,J,me,O.width,O.height),t.bindFramebuffer(36160,G.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064,36161,G.__webglColorRenderbuffer),t.bindRenderbuffer(36161,null),O.depthBuffer&&(G.__webglDepthRenderbuffer=t.createRenderbuffer(),Z(G.__webglDepthRenderbuffer,O,!0)),t.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(de){n.bindTexture(34067,ye.__webglTexture),q(34067,O.texture,N);for(var P=0;P<6;P++)_e(G.__webglFramebuffer[P],O,36064,34069+P);b(O.texture,N)&&_(34067,O.texture,O.width,O.height),n.bindTexture(34067,null)}else n.bindTexture(3553,ye.__webglTexture),q(3553,O.texture,N),_e(G.__webglFramebuffer,O,36064,3553),b(O.texture,N)&&_(3553,O.texture,O.width,O.height),n.bindTexture(3553,null);O.depthBuffer&&Le(O)}function we(O){var G=O.texture,ye=g(O)||o;if(b(G,ye)){var de=O.isWebGLCubeRenderTarget?34067:3553,He=i.get(G).__webglTexture;n.bindTexture(de,He),_(de,G,O.width,O.height),n.bindTexture(de,null)}}function Ae(O){if(O.isWebGLMultisampleRenderTarget)if(o){var G=i.get(O);t.bindFramebuffer(36008,G.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,G.__webglFramebuffer);var ye=O.width,de=O.height,He=16384;O.depthBuffer&&(He|=256),O.stencilBuffer&&(He|=1024),t.blitFramebuffer(0,0,ye,de,0,0,ye,de,He,9728),t.bindFramebuffer(36160,G.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}function ae(O){return o&&O.isWebGLMultisampleRenderTarget?Math.min(u,O.samples):0}function ee(O){var G=s.render.frame;f.get(O)!==G&&(f.set(O,G),O.update())}var ve=!1,pe=!1;function De(O,G){O&&O.isWebGLRenderTarget&&(ve===!1&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),ve=!0),O=O.texture),I(O,G)}function Ce(O,G){O&&O.isWebGLCubeRenderTarget&&(pe===!1&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),pe=!0),O=O.texture),O&&O.isCubeTexture||Array.isArray(O.image)&&O.image.length===6?j(O,G):Y(O,G)}this.allocateTextureUnit=D,this.resetTextureUnits=R,this.setTexture2D=I,this.setTexture2DArray=F,this.setTexture3D=U,this.setTextureCube=j,this.setTextureCubeDynamic=Y,this.setupRenderTarget=Ee,this.updateRenderTargetMipmap=we,this.updateMultisampleRenderTarget=Ae,this.safeSetTexture2D=De,this.safeSetTextureCube=Ce}function VM(t,e,n){var i=n.isWebGL2;function r(a){var s;if(a===cc)return 5121;if(a===o_)return 32819;if(a===l_)return 32820;if(a===c_)return 33635;if(a===r_)return 5120;if(a===a_)return 5122;if(a===hc)return 5123;if(a===s_)return 5124;if(a===uc)return 5125;if(a===ar)return 5126;if(a===fc)return i?5131:(s=e.get("OES_texture_half_float"),s!==null?s.HALF_FLOAT_OES:null);if(a===h_)return 6406;if(a===sr)return 6407;if(a===ii)return 6408;if(a===u_)return 6409;if(a===f_)return 6410;if(a===va)return 6402;if(a===uo)return 34041;if(a===p_)return 6403;if(a===m_)return 36244;if(a===g_)return 33319;if(a===v_)return 33320;if(a===y_)return 36248;if(a===x_)return 36249;if(a===ym||a===xm||a===_m||a===Mm)if(s=e.get("WEBGL_compressed_texture_s3tc"),s!==null){if(a===ym)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===xm)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===_m)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===Mm)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(a===wm||a===bm||a===Sm||a===Em)if(s=e.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(a===wm)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(a===bm)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(a===Sm)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(a===Em)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(a===__)return s=e.get("WEBGL_compressed_texture_etc1"),s!==null?s.COMPRESSED_RGB_ETC1_WEBGL:null;if((a===Tm||a===Am)&&(s=e.get("WEBGL_compressed_texture_etc"),s!==null)){if(a===Tm)return s.COMPRESSED_RGB8_ETC2;if(a===Am)return s.COMPRESSED_RGBA8_ETC2_EAC}if(a===M_||a===w_||a===b_||a===S_||a===E_||a===T_||a===A_||a===L_||a===C_||a===R_||a===P_||a===D_||a===I_||a===F_||a===O_||a===N_||a===z_||a===U_||a===G_||a===H_||a===V_||a===k_||a===W_||a===$_||a===j_||a===X_||a===q_||a===Y_)return s=e.get("WEBGL_compressed_texture_astc"),s!==null?a:null;if(a===B_)return s=e.get("EXT_texture_compression_bptc"),s!==null?a:null;if(a===ho)return i?34042:(s=e.get("WEBGL_depth_texture"),s!==null?s.UNSIGNED_INT_24_8_WEBGL:null)}return{convert:r}}function of(t){Jt.call(this),this.cameras=t||[]}of.prototype=Object.assign(Object.create(Jt.prototype),{constructor:of,isArrayCamera:!0});function Bo(){Ge.call(this),this.type="Group"}Bo.prototype=Object.assign(Object.create(Ge.prototype),{constructor:Bo,isGroup:!0});function kM(t,e){var n=this,i=null,r=1,a=null,s="local-floor",o=null,l=[],c=new Map,h=new Jt;h.layers.enable(1),h.viewport=new Et;var u=new Jt;u.layers.enable(2),u.viewport=new Et;var f=new of([h,u]);f.layers.enable(1),f.layers.enable(2);var d=null,p=null;this.enabled=!1,this.isPresenting=!1,this.getController=function(L){var S=l[L];return S===void 0&&(S={},l[L]=S),S.targetRay===void 0&&(S.targetRay=new Bo,S.targetRay.matrixAutoUpdate=!1,S.targetRay.visible=!1),S.targetRay},this.getControllerGrip=function(L){var S=l[L];return S===void 0&&(S={},l[L]=S),S.grip===void 0&&(S.grip=new Bo,S.grip.matrixAutoUpdate=!1,S.grip.visible=!1),S.grip};function m(L){var S=c.get(L.inputSource);S&&(S.targetRay&&S.targetRay.dispatchEvent({type:L.type}),S.grip&&S.grip.dispatchEvent({type:L.type}))}function x(){c.forEach(function(L,S){L.targetRay&&(L.targetRay.dispatchEvent({type:"disconnected",data:S}),L.targetRay.visible=!1),L.grip&&(L.grip.dispatchEvent({type:"disconnected",data:S}),L.grip.visible=!1)}),c.clear(),t.setFramebuffer(null),t.setRenderTarget(t.getRenderTarget()),A.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function g(L){a=L,A.setContext(i),A.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}this.setFramebufferScaleFactor=function(L){r=L,n.isPresenting==!0&&console.warn("WebXRManager: Cannot change framebuffer scale while presenting VR content")},this.setReferenceSpaceType=function(L){s=L},this.getReferenceSpace=function(){return a},this.getSession=function(){return i},this.setSession=function(L){if(i=L,i!==null){i.addEventListener("select",m),i.addEventListener("selectstart",m),i.addEventListener("selectend",m),i.addEventListener("squeeze",m),i.addEventListener("squeezestart",m),i.addEventListener("squeezeend",m),i.addEventListener("end",x);var S=e.getContextAttributes(),R={antialias:S.antialias,alpha:S.alpha,depth:S.depth,stencil:S.stencil,framebufferScaleFactor:r},D=new XRWebGLLayer(i,e,R);i.updateRenderState({baseLayer:D}),i.requestReferenceSpace(s).then(g),i.addEventListener("inputsourceschange",v)}};function v(L){for(var S=i.inputSources,R=0;R<l.length;R++)c.set(S[R],l[R]);for(var R=0;R<L.removed.length;R++){var D=L.removed[R],I=c.get(D);I&&(I.targetRay&&I.targetRay.dispatchEvent({type:"disconnected",data:D}),I.grip&&I.grip.dispatchEvent({type:"disconnected",data:D}),c.delete(D))}for(var R=0;R<L.added.length;R++){var D=L.added[R],I=c.get(D);I&&(I.targetRay&&I.targetRay.dispatchEvent({type:"connected",data:D}),I.grip&&I.grip.dispatchEvent({type:"connected",data:D}))}}var b=new z,_=new z;function M(L,S,R){b.setFromMatrixPosition(S.matrixWorld),_.setFromMatrixPosition(R.matrixWorld);var D=b.distanceTo(_),I=S.projectionMatrix.elements,F=R.projectionMatrix.elements,U=I[14]/(I[10]-1),j=I[14]/(I[10]+1),Y=(I[9]+1)/I[5],K=(I[9]-1)/I[5],X=(I[8]-1)/I[0],q=(F[8]+1)/F[0],he=U*X,Se=U*q,_e=D/(-X+q),Z=_e*-X;S.matrixWorld.decompose(L.position,L.quaternion,L.scale),L.translateX(Z),L.translateZ(_e),L.matrixWorld.compose(L.position,L.quaternion,L.scale),L.matrixWorldInverse.getInverse(L.matrixWorld);var ie=U+_e,Le=j+_e,Ee=he-Z,we=Se+(D-Z),Ae=Y*j/Le*ie,ae=K*j/Le*ie;L.projectionMatrix.makePerspective(Ee,we,Ae,ae,ie,Le)}function y(L,S){S===null?L.matrixWorld.copy(L.matrix):L.matrixWorld.multiplyMatrices(S.matrixWorld,L.matrix),L.matrixWorldInverse.getInverse(L.matrixWorld)}this.getCamera=function(L){f.near=u.near=h.near=L.near,f.far=u.far=h.far=L.far,(d!==f.near||p!==f.far)&&(i.updateRenderState({depthNear:f.near,depthFar:f.far}),d=f.near,p=f.far);var S=L.parent,R=f.cameras;y(f,S);for(var D=0;D<R.length;D++)y(R[D],S);L.matrixWorld.copy(f.matrixWorld);for(var I=L.children,D=0,F=I.length;D<F;D++)I[D].updateMatrixWorld(!0);return M(f,h,u),f};var w=null;function E(L,S){if(o=S.getViewerPose(a),o!==null){var R=o.views,D=i.renderState.baseLayer;t.setFramebuffer(D.framebuffer);for(var I=0;I<R.length;I++){var F=R[I],U=D.getViewport(F),j=f.cameras[I];j.matrix.fromArray(F.transform.matrix),j.projectionMatrix.fromArray(F.projectionMatrix),j.viewport.set(U.x,U.y,U.width,U.height),I===0&&f.matrix.copy(j.matrix)}}for(var Y=i.inputSources,I=0;I<l.length;I++){var K=l[I],X=Y[I],q=null,he=null;X&&(K.targetRay&&(q=S.getPose(X.targetRaySpace,a),q!==null&&(K.targetRay.matrix.fromArray(q.transform.matrix),K.targetRay.matrix.decompose(K.targetRay.position,K.targetRay.rotation,K.targetRay.scale))),K.grip&&X.gripSpace&&(he=S.getPose(X.gripSpace,a),he!==null&&(K.grip.matrix.fromArray(he.transform.matrix),K.grip.matrix.decompose(K.grip.position,K.grip.rotation,K.grip.scale)))),K.targetRay&&(K.targetRay.visible=q!==null),K.grip&&(K.grip.visible=he!==null)}w&&w(L,S)}var A=new xM;A.setAnimationLoop(E),this.setAnimationLoop=function(L){w=L},this.dispose=function(){}}Object.assign(kM.prototype,Fi.prototype);function ng(t){t=t||{};var e=t.canvas!==void 0?t.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),n=t.context!==void 0?t.context:null,i=t.alpha!==void 0?t.alpha:!1,r=t.depth!==void 0?t.depth:!0,a=t.stencil!==void 0?t.stencil:!0,s=t.antialias!==void 0?t.antialias:!1,o=t.premultipliedAlpha!==void 0?t.premultipliedAlpha:!0,l=t.preserveDrawingBuffer!==void 0?t.preserveDrawingBuffer:!1,c=t.powerPreference!==void 0?t.powerPreference:"default",h=t.failIfMajorPerformanceCaveat!==void 0?t.failIfMajorPerformanceCaveat:!1,u=null,f=null;this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=On,this.physicallyCorrectLights=!1,this.toneMapping=Iu,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,this.maxMorphTargets=8,this.maxMorphNormals=4;var d=this,p=!1,m=null,x=0,g=0,v=null,b=null,_=-1,M={geometry:null,program:null,wireframe:!1},y=null,w=null,E=new Et,A=new Et,L=null,S=e.width,R=e.height,D=1,I=null,F=null,U=new Et(0,0,S,R),j=new Et(0,0,S,R),Y=!1,K=new Po,X=new vP,q=!1,he=!1,Se=new ct,_e=new z;function Z(){return v===null?D:1}var ie;try{var Le={alpha:i,depth:r,stencil:a,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:h,xrCompatible:!0};if(e.addEventListener("webglcontextlost",xe,!1),e.addEventListener("webglcontextrestored",V,!1),ie=n||e.getContext("webgl",Le)||e.getContext("experimental-webgl",Le),ie===null)throw e.getContext("webgl")!==null?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.");ie.getShaderPrecisionFormat===void 0&&(ie.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(T){throw console.error("THREE.WebGLRenderer: "+T.message),T}var Ee,we,Ae,ae,ee,ve,pe,De,Ce,O,G,ye,de,He,N,P,te;function fe(){Ee=new yP(ie),we=new gP(ie,Ee,t),we.isWebGL2===!1&&(Ee.get("WEBGL_depth_texture"),Ee.get("OES_texture_float"),Ee.get("OES_texture_half_float"),Ee.get("OES_texture_half_float_linear"),Ee.get("OES_standard_derivatives"),Ee.get("OES_element_index_uint"),Ee.get("ANGLE_instanced_arrays")),Ee.get("OES_texture_float_linear"),te=new VM(ie,Ee,we),Ae=new OD(ie,Ee,we),Ae.scissor(A.copy(j).multiplyScalar(D).floor()),Ae.viewport(E.copy(U).multiplyScalar(D).floor()),ae=new MP(ie),ee=new SD,ve=new ND(ie,Ee,Ae,ee,we,te,ae),pe=new q2(ie,we),De=new xP(ie,pe,ae),Ce=new SP(ie,De,pe,ae),He=new bP(ie),O=new bD(d,Ee,we),G=new AD,ye=new ID,de=new pP(d,Ae,Ce,o),N=new mP(ie,Ee,ae,we),P=new _P(ie,Ee,ae,we),ae.programs=O.programs,d.capabilities=we,d.extensions=Ee,d.properties=ee,d.renderLists=G,d.state=Ae,d.info=ae}fe();var me=new kM(d,ie);this.xr=me;var J=new HM(d,Ce,we.maxTextureSize);this.shadowMap=J,this.getContext=function(){return ie},this.getContextAttributes=function(){return ie.getContextAttributes()},this.forceContextLoss=function(){var T=Ee.get("WEBGL_lose_context");T&&T.loseContext()},this.forceContextRestore=function(){var T=Ee.get("WEBGL_lose_context");T&&T.restoreContext()},this.getPixelRatio=function(){return D},this.setPixelRatio=function(T){T!==void 0&&(D=T,this.setSize(S,R,!1))},this.getSize=function(T){return T===void 0&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),T=new Me),T.set(S,R)},this.setSize=function(T,C,$){if(me.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}S=T,R=C,e.width=Math.floor(T*D),e.height=Math.floor(C*D),$!==!1&&(e.style.width=T+"px",e.style.height=C+"px"),this.setViewport(0,0,T,C)},this.getDrawingBufferSize=function(T){return T===void 0&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),T=new Me),T.set(S*D,R*D).floor()},this.setDrawingBufferSize=function(T,C,$){S=T,R=C,D=$,e.width=Math.floor(T*$),e.height=Math.floor(C*$),this.setViewport(0,0,T,C)},this.getCurrentViewport=function(T){return T===void 0&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),T=new Et),T.copy(E)},this.getViewport=function(T){return T.copy(U)},this.setViewport=function(T,C,$,re){T.isVector4?U.set(T.x,T.y,T.z,T.w):U.set(T,C,$,re),Ae.viewport(E.copy(U).multiplyScalar(D).floor())},this.getScissor=function(T){return T.copy(j)},this.setScissor=function(T,C,$,re){T.isVector4?j.set(T.x,T.y,T.z,T.w):j.set(T,C,$,re),Ae.scissor(A.copy(j).multiplyScalar(D).floor())},this.getScissorTest=function(){return Y},this.setScissorTest=function(T){Ae.setScissorTest(Y=T)},this.setOpaqueSort=function(T){I=T},this.setTransparentSort=function(T){F=T},this.getClearColor=function(){return de.getClearColor()},this.setClearColor=function(){de.setClearColor.apply(de,arguments)},this.getClearAlpha=function(){return de.getClearAlpha()},this.setClearAlpha=function(){de.setClearAlpha.apply(de,arguments)},this.clear=function(T,C,$){var re=0;(T===void 0||T)&&(re|=16384),(C===void 0||C)&&(re|=256),($===void 0||$)&&(re|=1024),ie.clear(re)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",xe,!1),e.removeEventListener("webglcontextrestored",V,!1),G.dispose(),ye.dispose(),ee.dispose(),Ce.dispose(),me.dispose(),Be.stop(),this.forceContextLoss()};function xe(T){T.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),p=!0}function V(){console.log("THREE.WebGLRenderer: Context Restored."),p=!1,fe()}function B(T){var C=T.target;C.removeEventListener("dispose",B),Q(C)}function Q(T){ue(T),ee.remove(T)}function ue(T){var C=ee.get(T).program;T.program=void 0,C!==void 0&&O.releaseProgram(C)}function W(T,C){T.render(function($){d.renderBufferImmediate($,C)})}this.renderBufferImmediate=function(T,C){Ae.initAttributes();var $=ee.get(T);T.hasPositions&&!$.position&&($.position=ie.createBuffer()),T.hasNormals&&!$.normal&&($.normal=ie.createBuffer()),T.hasUvs&&!$.uv&&($.uv=ie.createBuffer()),T.hasColors&&!$.color&&($.color=ie.createBuffer());var re=C.getAttributes();T.hasPositions&&(ie.bindBuffer(34962,$.position),ie.bufferData(34962,T.positionArray,35048),Ae.enableAttribute(re.position),ie.vertexAttribPointer(re.position,3,5126,!1,0,0)),T.hasNormals&&(ie.bindBuffer(34962,$.normal),ie.bufferData(34962,T.normalArray,35048),Ae.enableAttribute(re.normal),ie.vertexAttribPointer(re.normal,3,5126,!1,0,0)),T.hasUvs&&(ie.bindBuffer(34962,$.uv),ie.bufferData(34962,T.uvArray,35048),Ae.enableAttribute(re.uv),ie.vertexAttribPointer(re.uv,2,5126,!1,0,0)),T.hasColors&&(ie.bindBuffer(34962,$.color),ie.bufferData(34962,T.colorArray,35048),Ae.enableAttribute(re.color),ie.vertexAttribPointer(re.color,3,5126,!1,0,0)),Ae.disableUnusedAttributes(),ie.drawArrays(4,0,T.count),T.count=0};var ce=new lr;this.renderBufferDirect=function(T,C,$,re,Re,Xe){C===null&&(C=ce);var Pe=Re.isMesh&&Re.matrixWorld.determinant()<0,tt=wn(T,C,re,Re);Ae.setMaterial(re,Pe);var $e=!1;(M.geometry!==$.id||M.program!==tt.id||M.wireframe!==(re.wireframe===!0))&&(M.geometry=$.id,M.program=tt.id,M.wireframe=re.wireframe===!0,$e=!0),(re.morphTargets||re.morphNormals)&&(He.update(Re,$,re,tt),$e=!0);var Ze=$.index,vt=$.attributes.position;if(Ze===null){if(vt===void 0||vt.count===0)return}else if(Ze.count===0)return;var lt=1;re.wireframe===!0&&(Ze=De.getWireframeAttribute($),lt=2);var at,Ne=N;Ze!==null&&(at=pe.get(Ze),Ne=P,Ne.setIndex(at)),$e&&(be(Re,$,re,tt),Ze!==null&&ie.bindBuffer(34963,at.buffer));var qe=Ze!==null?Ze.count:vt.count,zt=$.drawRange.start*lt,Kt=$.drawRange.count*lt,rs=Xe!==null?Xe.start*lt:0,Un=Xe!==null?Xe.count*lt:1/0,bn=Math.max(zt,rs),ud=Math.min(qe,zt+Kt,rs+Un)-1,xh=Math.max(0,ud-bn+1);if(xh!==0){if(Re.isMesh)re.wireframe===!0?(Ae.setLineWidth(re.wireframeLinewidth*Z()),Ne.setMode(1)):Ne.setMode(4);else if(Re.isLine){var fd=re.linewidth;fd===void 0&&(fd=1),Ae.setLineWidth(fd*Z()),Re.isLineSegments?Ne.setMode(1):Re.isLineLoop?Ne.setMode(2):Ne.setMode(3)}else Re.isPoints?Ne.setMode(0):Re.isSprite&&Ne.setMode(4);Re.isInstancedMesh?Ne.renderInstances($,bn,xh,Re.count):$.isInstancedBufferGeometry?Ne.renderInstances($,bn,xh,$.maxInstancedCount):Ne.render(bn,xh)}};function be(T,C,$,re){if(!(we.isWebGL2===!1&&(T.isInstancedMesh||C.isInstancedBufferGeometry)&&Ee.get("ANGLE_instanced_arrays")===null)){Ae.initAttributes();var Re=C.attributes,Xe=re.getAttributes(),Pe=$.defaultAttributeValues;for(var tt in Xe){var $e=Xe[tt];if($e>=0){var Ze=Re[tt];if(Ze!==void 0){var vt=Ze.normalized,lt=Ze.itemSize,at=pe.get(Ze);if(at===void 0)continue;var Ne=at.buffer,qe=at.type,zt=at.bytesPerElement;if(Ze.isInterleavedBufferAttribute){var Kt=Ze.data,rs=Kt.stride,Un=Ze.offset;Kt&&Kt.isInstancedInterleavedBuffer?(Ae.enableAttributeAndDivisor($e,Kt.meshPerAttribute),C.maxInstancedCount===void 0&&(C.maxInstancedCount=Kt.meshPerAttribute*Kt.count)):Ae.enableAttribute($e),ie.bindBuffer(34962,Ne),ie.vertexAttribPointer($e,lt,qe,vt,rs*zt,Un*zt)}else Ze.isInstancedBufferAttribute?(Ae.enableAttributeAndDivisor($e,Ze.meshPerAttribute),C.maxInstancedCount===void 0&&(C.maxInstancedCount=Ze.meshPerAttribute*Ze.count)):Ae.enableAttribute($e),ie.bindBuffer(34962,Ne),ie.vertexAttribPointer($e,lt,qe,vt,0,0)}else if(tt==="instanceMatrix"){var at=pe.get(T.instanceMatrix);if(at===void 0)continue;var Ne=at.buffer,qe=at.type;Ae.enableAttributeAndDivisor($e+0,1),Ae.enableAttributeAndDivisor($e+1,1),Ae.enableAttributeAndDivisor($e+2,1),Ae.enableAttributeAndDivisor($e+3,1),ie.bindBuffer(34962,Ne),ie.vertexAttribPointer($e+0,4,qe,!1,64,0),ie.vertexAttribPointer($e+1,4,qe,!1,64,16),ie.vertexAttribPointer($e+2,4,qe,!1,64,32),ie.vertexAttribPointer($e+3,4,qe,!1,64,48)}else if(Pe!==void 0){var bn=Pe[tt];if(bn!==void 0)switch(bn.length){case 2:ie.vertexAttrib2fv($e,bn);break;case 3:ie.vertexAttrib3fv($e,bn);break;case 4:ie.vertexAttrib4fv($e,bn);break;default:ie.vertexAttrib1fv($e,bn)}}}}Ae.disableUnusedAttributes()}}this.compile=function(T,C){f=ye.get(T,C),f.init(),T.traverse(function(re){re.isLight&&(f.pushLight(re),re.castShadow&&f.pushShadow(re))}),f.setupLights(C);var $={};T.traverse(function(re){if(re.material)if(Array.isArray(re.material))for(var Re=0;Re<re.material.length;Re++)re.material[Re].uuid in $||(pt(re.material[Re],T,re),$[re.material[Re].uuid]=!0);else re.material.uuid in $||(pt(re.material,T,re),$[re.material.uuid]=!0)})};var Ie=null;function se(T){me.isPresenting||Ie&&Ie(T)}var Be=new xM;Be.setAnimationLoop(se),typeof window!="undefined"&&Be.setContext(window),this.setAnimationLoop=function(T){Ie=T,me.setAnimationLoop(T),Be.start()},this.render=function(T,C){var $,re;if(arguments[2]!==void 0&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),$=arguments[2]),arguments[3]!==void 0&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),re=arguments[3]),!(C&&C.isCamera)){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(!p){M.geometry=null,M.program=null,M.wireframe=!1,_=-1,y=null,T.autoUpdate===!0&&T.updateMatrixWorld(),C.parent===null&&C.updateMatrixWorld(),me.enabled&&me.isPresenting&&(C=me.getCamera(C)),f=ye.get(T,C),f.init(),T.onBeforeRender(d,T,C,$||v),Se.multiplyMatrices(C.projectionMatrix,C.matrixWorldInverse),K.setFromProjectionMatrix(Se),he=this.localClippingEnabled,q=X.init(this.clippingPlanes,he,C),u=G.get(T,C),u.init(),je(T,C,0,d.sortObjects),u.finish(),d.sortObjects===!0&&u.sort(I,F),q&&X.beginShadows();var Re=f.state.shadowsArray;J.render(Re,T,C),f.setupLights(C),q&&X.endShadows(),this.info.autoReset&&this.info.reset(),$!==void 0&&this.setRenderTarget($),de.render(u,T,C,re);var Xe=u.opaque,Pe=u.transparent;if(T.overrideMaterial){var tt=T.overrideMaterial;Xe.length&&ot(Xe,T,C,tt),Pe.length&&ot(Pe,T,C,tt)}else Xe.length&&ot(Xe,T,C),Pe.length&&ot(Pe,T,C);T.onAfterRender(d,T,C),v!==null&&(ve.updateRenderTargetMipmap(v),ve.updateMultisampleRenderTarget(v)),Ae.buffers.depth.setTest(!0),Ae.buffers.depth.setMask(!0),Ae.buffers.color.setMask(!0),Ae.setPolygonOffset(!1),u=null,f=null}};function je(T,C,$,re){if(T.visible!==!1){var Re=T.layers.test(C.layers);if(Re){if(T.isGroup)$=T.renderOrder;else if(T.isLOD)T.autoUpdate===!0&&T.update(C);else if(T.isLight)f.pushLight(T),T.castShadow&&f.pushShadow(T);else if(T.isSprite){if(!T.frustumCulled||K.intersectsSprite(T)){re&&_e.setFromMatrixPosition(T.matrixWorld).applyMatrix4(Se);var Xe=Ce.update(T),Pe=T.material;Pe.visible&&u.push(T,Xe,Pe,$,_e.z,null)}}else if(T.isImmediateRenderObject)re&&_e.setFromMatrixPosition(T.matrixWorld).applyMatrix4(Se),u.push(T,null,T.material,$,_e.z,null);else if((T.isMesh||T.isLine||T.isPoints)&&(T.isSkinnedMesh&&T.skeleton.frame!==ae.render.frame&&(T.skeleton.update(),T.skeleton.frame=ae.render.frame),!T.frustumCulled||K.intersectsObject(T))){re&&_e.setFromMatrixPosition(T.matrixWorld).applyMatrix4(Se);var Xe=Ce.update(T),Pe=T.material;if(Array.isArray(Pe))for(var tt=Xe.groups,$e=0,Ze=tt.length;$e<Ze;$e++){var vt=tt[$e],lt=Pe[vt.materialIndex];lt&&lt.visible&&u.push(T,Xe,lt,$,_e.z,vt)}else Pe.visible&&u.push(T,Xe,Pe,$,_e.z,null)}}for(var at=T.children,$e=0,Ze=at.length;$e<Ze;$e++)je(at[$e],C,$,re)}}function ot(T,C,$,re){for(var Re=0,Xe=T.length;Re<Xe;Re++){var Pe=T[Re],tt=Pe.object,$e=Pe.geometry,Ze=re===void 0?Pe.material:re,vt=Pe.group;if($.isArrayCamera){w=$;for(var lt=$.cameras,at=0,Ne=lt.length;at<Ne;at++){var qe=lt[at];tt.layers.test(qe.layers)&&(Ae.viewport(E.copy(qe.viewport)),f.setupLights(qe),At(tt,C,qe,$e,Ze,vt))}}else w=null,At(tt,C,$,$e,Ze,vt)}}function At(T,C,$,re,Re,Xe){if(T.onBeforeRender(d,C,$,re,Re,Xe),f=ye.get(C,w||$),T.modelViewMatrix.multiplyMatrices($.matrixWorldInverse,T.matrixWorld),T.normalMatrix.getNormalMatrix(T.modelViewMatrix),T.isImmediateRenderObject){var Pe=wn($,C,Re,T);Ae.setMaterial(Re),M.geometry=null,M.program=null,M.wireframe=!1,W(T,Pe)}else d.renderBufferDirect($,C,re,Re,T,Xe);T.onAfterRender(d,C,$,re,Re,Xe),f=ye.get(C,w||$)}function pt(T,C,$){var re=ee.get(T),Re=f.state.lights,Xe=f.state.shadowsArray,Pe=Re.state.version,tt=O.getParameters(T,Re.state,Xe,C,X.numPlanes,X.numIntersection,$),$e=O.getProgramCacheKey(tt),Ze=re.program,vt=!0;if(Ze===void 0)T.addEventListener("dispose",B);else if(Ze.cacheKey!==$e)ue(T);else if(re.lightsStateVersion!==Pe)re.lightsStateVersion=Pe,vt=!1;else{if(tt.shaderID!==void 0)return;vt=!1}vt&&(Ze=O.acquireProgram(tt,$e),re.program=Ze,re.uniforms=tt.uniforms,re.environment=T.isMeshStandardMaterial?C.environment:null,re.outputEncoding=d.outputEncoding,T.program=Ze);var lt=Ze.getAttributes();if(T.morphTargets){T.numSupportedMorphTargets=0;for(var at=0;at<d.maxMorphTargets;at++)lt["morphTarget"+at]>=0&&T.numSupportedMorphTargets++}if(T.morphNormals){T.numSupportedMorphNormals=0;for(var at=0;at<d.maxMorphNormals;at++)lt["morphNormal"+at]>=0&&T.numSupportedMorphNormals++}var Ne=re.uniforms;(!T.isShaderMaterial&&!T.isRawShaderMaterial||T.clipping===!0)&&(re.numClippingPlanes=X.numPlanes,re.numIntersection=X.numIntersection,Ne.clippingPlanes=X.uniform),re.fog=C.fog,re.needsLights=rt(T),re.lightsStateVersion=Pe,re.needsLights&&(Ne.ambientLightColor.value=Re.state.ambient,Ne.lightProbe.value=Re.state.probe,Ne.directionalLights.value=Re.state.directional,Ne.directionalLightShadows.value=Re.state.directionalShadow,Ne.spotLights.value=Re.state.spot,Ne.spotLightShadows.value=Re.state.spotShadow,Ne.rectAreaLights.value=Re.state.rectArea,Ne.pointLights.value=Re.state.point,Ne.pointLightShadows.value=Re.state.pointShadow,Ne.hemisphereLights.value=Re.state.hemi,Ne.directionalShadowMap.value=Re.state.directionalShadowMap,Ne.directionalShadowMatrix.value=Re.state.directionalShadowMatrix,Ne.spotShadowMap.value=Re.state.spotShadowMap,Ne.spotShadowMatrix.value=Re.state.spotShadowMatrix,Ne.pointShadowMap.value=Re.state.pointShadowMap,Ne.pointShadowMatrix.value=Re.state.pointShadowMatrix);var qe=re.program.getUniforms(),zt=Jr.seqWithValue(qe.seq,Ne);re.uniformsList=zt}function wn(T,C,$,re){ve.resetTextureUnits();var Re=C.fog,Xe=$.isMeshStandardMaterial?C.environment:null,Pe=ee.get($),tt=f.state.lights;if(q&&(he||T!==y)){var $e=T===y&&$.id===_;X.setState($.clippingPlanes,$.clipIntersection,$.clipShadows,T,Pe,$e)}$.version===Pe.__version?(Pe.program===void 0||$.fog&&Pe.fog!==Re||Pe.environment!==Xe||Pe.needsLights&&Pe.lightsStateVersion!==tt.state.version||Pe.numClippingPlanes!==void 0&&(Pe.numClippingPlanes!==X.numPlanes||Pe.numIntersection!==X.numIntersection)||Pe.outputEncoding!==d.outputEncoding)&&pt($,C,re):(pt($,C,re),Pe.__version=$.version);var Ze=!1,vt=!1,lt=!1,at=Pe.program,Ne=at.getUniforms(),qe=Pe.uniforms;if(Ae.useProgram(at.program)&&(Ze=!0,vt=!0,lt=!0),$.id!==_&&(_=$.id,vt=!0),Ze||y!==T){if(Ne.setValue(ie,"projectionMatrix",T.projectionMatrix),we.logarithmicDepthBuffer&&Ne.setValue(ie,"logDepthBufFC",2/(Math.log(T.far+1)/Math.LN2)),y!==T&&(y=T,vt=!0,lt=!0),$.isShaderMaterial||$.isMeshPhongMaterial||$.isMeshToonMaterial||$.isMeshStandardMaterial||$.envMap){var zt=Ne.map.cameraPosition;zt!==void 0&&zt.setValue(ie,_e.setFromMatrixPosition(T.matrixWorld))}($.isMeshPhongMaterial||$.isMeshToonMaterial||$.isMeshLambertMaterial||$.isMeshBasicMaterial||$.isMeshStandardMaterial||$.isShaderMaterial)&&Ne.setValue(ie,"isOrthographic",T.isOrthographicCamera===!0),($.isMeshPhongMaterial||$.isMeshToonMaterial||$.isMeshLambertMaterial||$.isMeshBasicMaterial||$.isMeshStandardMaterial||$.isShaderMaterial||$.skinning)&&Ne.setValue(ie,"viewMatrix",T.matrixWorldInverse)}if($.skinning){Ne.setOptional(ie,re,"bindMatrix"),Ne.setOptional(ie,re,"bindMatrixInverse");var Kt=re.skeleton;if(Kt){var rs=Kt.bones;if(we.floatVertexTextures){if(Kt.boneTexture===void 0){var Un=Math.sqrt(rs.length*4);Un=it.ceilPowerOfTwo(Un),Un=Math.max(Un,4);var bn=new Float32Array(Un*Un*4);bn.set(Kt.boneMatrices);var ud=new Da(bn,Un,Un,ii,ar);Kt.boneMatrices=bn,Kt.boneTexture=ud,Kt.boneTextureSize=Un}Ne.setValue(ie,"boneTexture",Kt.boneTexture,ve),Ne.setValue(ie,"boneTextureSize",Kt.boneTextureSize)}else Ne.setOptional(ie,Kt,"boneMatrices")}}return(vt||Pe.receiveShadow!==re.receiveShadow)&&(Pe.receiveShadow=re.receiveShadow,Ne.setValue(ie,"receiveShadow",re.receiveShadow)),vt&&(Ne.setValue(ie,"toneMappingExposure",d.toneMappingExposure),Ne.setValue(ie,"toneMappingWhitePoint",d.toneMappingWhitePoint),Pe.needsLights&&st(qe,lt),Re&&$.fog&&ld(qe,Re),$.isMeshBasicMaterial?Ht(qe,$):$.isMeshLambertMaterial?(Ht(qe,$),cd(qe,$)):$.isMeshToonMaterial?(Ht(qe,$),H(qe,$)):$.isMeshPhongMaterial?(Ht(qe,$),hd(qe,$)):$.isMeshStandardMaterial?(Ht(qe,$,Xe),$.isMeshPhysicalMaterial?le(qe,$,Xe):ne(qe,$,Xe)):$.isMeshMatcapMaterial?(Ht(qe,$),oe(qe,$)):$.isMeshDepthMaterial?(Ht(qe,$),ge(qe,$)):$.isMeshDistanceMaterial?(Ht(qe,$),et(qe,$)):$.isMeshNormalMaterial?(Ht(qe,$),nt(qe,$)):$.isLineBasicMaterial?(ji(qe,$),$.isLineDashedMaterial&&is(qe,$)):$.isPointsMaterial?Ti(qe,$):$.isSpriteMaterial?yh(qe,$):$.isShadowMaterial&&(qe.color.value.copy($.color),qe.opacity.value=$.opacity),qe.ltc_1!==void 0&&(qe.ltc_1.value=Ue.LTC_1),qe.ltc_2!==void 0&&(qe.ltc_2.value=Ue.LTC_2),Jr.upload(ie,Pe.uniformsList,qe,ve),$.isShaderMaterial&&($.uniformsNeedUpdate=!1)),$.isShaderMaterial&&$.uniformsNeedUpdate===!0&&(Jr.upload(ie,Pe.uniformsList,qe,ve),$.uniformsNeedUpdate=!1),$.isSpriteMaterial&&Ne.setValue(ie,"center",re.center),Ne.setValue(ie,"modelViewMatrix",re.modelViewMatrix),Ne.setValue(ie,"normalMatrix",re.normalMatrix),Ne.setValue(ie,"modelMatrix",re.matrixWorld),at}function Ht(T,C,$){T.opacity.value=C.opacity,C.color&&T.diffuse.value.copy(C.color),C.emissive&&T.emissive.value.copy(C.emissive).multiplyScalar(C.emissiveIntensity),C.map&&(T.map.value=C.map),C.alphaMap&&(T.alphaMap.value=C.alphaMap),C.specularMap&&(T.specularMap.value=C.specularMap);var re=C.envMap||$;re&&(T.envMap.value=re,T.flipEnvMap.value=re.isCubeTexture?-1:1,T.reflectivity.value=C.reflectivity,T.refractionRatio.value=C.refractionRatio,T.maxMipLevel.value=ee.get(re).__maxMipLevel),C.lightMap&&(T.lightMap.value=C.lightMap,T.lightMapIntensity.value=C.lightMapIntensity),C.aoMap&&(T.aoMap.value=C.aoMap,T.aoMapIntensity.value=C.aoMapIntensity);var Re;C.map?Re=C.map:C.specularMap?Re=C.specularMap:C.displacementMap?Re=C.displacementMap:C.normalMap?Re=C.normalMap:C.bumpMap?Re=C.bumpMap:C.roughnessMap?Re=C.roughnessMap:C.metalnessMap?Re=C.metalnessMap:C.alphaMap?Re=C.alphaMap:C.emissiveMap&&(Re=C.emissiveMap),Re!==void 0&&(Re.isWebGLRenderTarget&&(Re=Re.texture),Re.matrixAutoUpdate===!0&&Re.updateMatrix(),T.uvTransform.value.copy(Re.matrix));var Xe;C.aoMap?Xe=C.aoMap:C.lightMap&&(Xe=C.lightMap),Xe!==void 0&&(Xe.isWebGLRenderTarget&&(Xe=Xe.texture),Xe.matrixAutoUpdate===!0&&Xe.updateMatrix(),T.uv2Transform.value.copy(Xe.matrix))}function ji(T,C){T.diffuse.value.copy(C.color),T.opacity.value=C.opacity}function is(T,C){T.dashSize.value=C.dashSize,T.totalSize.value=C.dashSize+C.gapSize,T.scale.value=C.scale}function Ti(T,C){T.diffuse.value.copy(C.color),T.opacity.value=C.opacity,T.size.value=C.size*D,T.scale.value=R*.5,C.map&&(T.map.value=C.map),C.alphaMap&&(T.alphaMap.value=C.alphaMap);var $;C.map?$=C.map:C.alphaMap&&($=C.alphaMap),$!==void 0&&($.matrixAutoUpdate===!0&&$.updateMatrix(),T.uvTransform.value.copy($.matrix))}function yh(T,C){T.diffuse.value.copy(C.color),T.opacity.value=C.opacity,T.rotation.value=C.rotation,C.map&&(T.map.value=C.map),C.alphaMap&&(T.alphaMap.value=C.alphaMap);var $;C.map?$=C.map:C.alphaMap&&($=C.alphaMap),$!==void 0&&($.matrixAutoUpdate===!0&&$.updateMatrix(),T.uvTransform.value.copy($.matrix))}function ld(T,C){T.fogColor.value.copy(C.color),C.isFog?(T.fogNear.value=C.near,T.fogFar.value=C.far):C.isFogExp2&&(T.fogDensity.value=C.density)}function cd(T,C){C.emissiveMap&&(T.emissiveMap.value=C.emissiveMap)}function hd(T,C){T.specular.value.copy(C.specular),T.shininess.value=Math.max(C.shininess,1e-4),C.emissiveMap&&(T.emissiveMap.value=C.emissiveMap),C.bumpMap&&(T.bumpMap.value=C.bumpMap,T.bumpScale.value=C.bumpScale,C.side===nn&&(T.bumpScale.value*=-1)),C.normalMap&&(T.normalMap.value=C.normalMap,T.normalScale.value.copy(C.normalScale),C.side===nn&&T.normalScale.value.negate()),C.displacementMap&&(T.displacementMap.value=C.displacementMap,T.displacementScale.value=C.displacementScale,T.displacementBias.value=C.displacementBias)}function H(T,C){T.specular.value.copy(C.specular),T.shininess.value=Math.max(C.shininess,1e-4),C.gradientMap&&(T.gradientMap.value=C.gradientMap),C.emissiveMap&&(T.emissiveMap.value=C.emissiveMap),C.bumpMap&&(T.bumpMap.value=C.bumpMap,T.bumpScale.value=C.bumpScale,C.side===nn&&(T.bumpScale.value*=-1)),C.normalMap&&(T.normalMap.value=C.normalMap,T.normalScale.value.copy(C.normalScale),C.side===nn&&T.normalScale.value.negate()),C.displacementMap&&(T.displacementMap.value=C.displacementMap,T.displacementScale.value=C.displacementScale,T.displacementBias.value=C.displacementBias)}function ne(T,C,$){T.roughness.value=C.roughness,T.metalness.value=C.metalness,C.roughnessMap&&(T.roughnessMap.value=C.roughnessMap),C.metalnessMap&&(T.metalnessMap.value=C.metalnessMap),C.emissiveMap&&(T.emissiveMap.value=C.emissiveMap),C.bumpMap&&(T.bumpMap.value=C.bumpMap,T.bumpScale.value=C.bumpScale,C.side===nn&&(T.bumpScale.value*=-1)),C.normalMap&&(T.normalMap.value=C.normalMap,T.normalScale.value.copy(C.normalScale),C.side===nn&&T.normalScale.value.negate()),C.displacementMap&&(T.displacementMap.value=C.displacementMap,T.displacementScale.value=C.displacementScale,T.displacementBias.value=C.displacementBias),(C.envMap||$)&&(T.envMapIntensity.value=C.envMapIntensity)}function le(T,C,$){ne(T,C,$),T.reflectivity.value=C.reflectivity,T.clearcoat.value=C.clearcoat,T.clearcoatRoughness.value=C.clearcoatRoughness,C.sheen&&T.sheen.value.copy(C.sheen),C.clearcoatMap&&(T.clearcoatMap.value=C.clearcoatMap),C.clearcoatRoughnessMap&&(T.clearcoatRoughnessMap.value=C.clearcoatRoughnessMap),C.clearcoatNormalMap&&(T.clearcoatNormalScale.value.copy(C.clearcoatNormalScale),T.clearcoatNormalMap.value=C.clearcoatNormalMap,C.side===nn&&T.clearcoatNormalScale.value.negate()),T.transparency.value=C.transparency}function oe(T,C){C.matcap&&(T.matcap.value=C.matcap),C.bumpMap&&(T.bumpMap.value=C.bumpMap,T.bumpScale.value=C.bumpScale,C.side===nn&&(T.bumpScale.value*=-1)),C.normalMap&&(T.normalMap.value=C.normalMap,T.normalScale.value.copy(C.normalScale),C.side===nn&&T.normalScale.value.negate()),C.displacementMap&&(T.displacementMap.value=C.displacementMap,T.displacementScale.value=C.displacementScale,T.displacementBias.value=C.displacementBias)}function ge(T,C){C.displacementMap&&(T.displacementMap.value=C.displacementMap,T.displacementScale.value=C.displacementScale,T.displacementBias.value=C.displacementBias)}function et(T,C){C.displacementMap&&(T.displacementMap.value=C.displacementMap,T.displacementScale.value=C.displacementScale,T.displacementBias.value=C.displacementBias),T.referencePosition.value.copy(C.referencePosition),T.nearDistance.value=C.nearDistance,T.farDistance.value=C.farDistance}function nt(T,C){C.bumpMap&&(T.bumpMap.value=C.bumpMap,T.bumpScale.value=C.bumpScale,C.side===nn&&(T.bumpScale.value*=-1)),C.normalMap&&(T.normalMap.value=C.normalMap,T.normalScale.value.copy(C.normalScale),C.side===nn&&T.normalScale.value.negate()),C.displacementMap&&(T.displacementMap.value=C.displacementMap,T.displacementScale.value=C.displacementScale,T.displacementBias.value=C.displacementBias)}function st(T,C){T.ambientLightColor.needsUpdate=C,T.lightProbe.needsUpdate=C,T.directionalLights.needsUpdate=C,T.directionalLightShadows.needsUpdate=C,T.pointLights.needsUpdate=C,T.pointLightShadows.needsUpdate=C,T.spotLights.needsUpdate=C,T.spotLightShadows.needsUpdate=C,T.rectAreaLights.needsUpdate=C,T.hemisphereLights.needsUpdate=C}function rt(T){return T.isMeshLambertMaterial||T.isMeshToonMaterial||T.isMeshPhongMaterial||T.isMeshStandardMaterial||T.isShadowMaterial||T.isShaderMaterial&&T.lights===!0}this.setFramebuffer=function(T){m!==T&&v===null&&ie.bindFramebuffer(36160,T),m=T},this.getActiveCubeFace=function(){return x},this.getActiveMipmapLevel=function(){return g},this.getRenderTarget=function(){return v},this.setRenderTarget=function(T,C,$){v=T,x=C,g=$,T&&ee.get(T).__webglFramebuffer===void 0&&ve.setupRenderTarget(T);var re=m,Re=!1;if(T){var Xe=ee.get(T).__webglFramebuffer;T.isWebGLCubeRenderTarget?(re=Xe[C||0],Re=!0):T.isWebGLMultisampleRenderTarget?re=ee.get(T).__webglMultisampledFramebuffer:re=Xe,E.copy(T.viewport),A.copy(T.scissor),L=T.scissorTest}else E.copy(U).multiplyScalar(D).floor(),A.copy(j).multiplyScalar(D).floor(),L=Y;if(b!==re&&(ie.bindFramebuffer(36160,re),b=re),Ae.viewport(E),Ae.scissor(A),Ae.setScissorTest(L),Re){var Pe=ee.get(T.texture);ie.framebufferTexture2D(36160,36064,34069+(C||0),Pe.__webglTexture,$||0)}},this.readRenderTargetPixels=function(T,C,$,re,Re,Xe,Pe){if(!(T&&T.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}var tt=ee.get(T).__webglFramebuffer;if(T.isWebGLCubeRenderTarget&&Pe!==void 0&&(tt=tt[Pe]),tt){var $e=!1;tt!==b&&(ie.bindFramebuffer(36160,tt),$e=!0);try{var Ze=T.texture,vt=Ze.format,lt=Ze.type;if(vt!==ii&&te.convert(vt)!==ie.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(lt!==cc&&te.convert(lt)!==ie.getParameter(35738)&&!(lt===ar&&(we.isWebGL2||Ee.get("OES_texture_float")||Ee.get("WEBGL_color_buffer_float")))&&!(lt===fc&&(we.isWebGL2?Ee.get("EXT_color_buffer_float"):Ee.get("EXT_color_buffer_half_float")))){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}ie.checkFramebufferStatus(36160)===36053?C>=0&&C<=T.width-re&&$>=0&&$<=T.height-Re&&ie.readPixels(C,$,re,Re,te.convert(vt),te.convert(lt),Xe):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{$e&&ie.bindFramebuffer(36160,b)}}},this.copyFramebufferToTexture=function(T,C,$){$===void 0&&($=0);var re=Math.pow(2,-$),Re=Math.floor(C.image.width*re),Xe=Math.floor(C.image.height*re),Pe=te.convert(C.format);ve.setTexture2D(C,0),ie.copyTexImage2D(3553,$,Pe,T.x,T.y,Re,Xe,0),Ae.unbindTexture()},this.copyTextureToTexture=function(T,C,$,re){var Re=C.image.width,Xe=C.image.height,Pe=te.convert($.format),tt=te.convert($.type);ve.setTexture2D($,0),C.isDataTexture?ie.texSubImage2D(3553,re||0,T.x,T.y,Re,Xe,Pe,tt,C.image.data):ie.texSubImage2D(3553,re||0,T.x,T.y,Pe,tt,C.image),Ae.unbindTexture()},this.initTexture=function(T){ve.setTexture2D(T,0),Ae.unbindTexture()},typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function lf(t,e){this.name="",this.color=new Ve(t),this.density=e!==void 0?e:25e-5}Object.assign(lf.prototype,{isFogExp2:!0,clone:function(){return new lf(this.color,this.density)},toJSON:function(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}});function cf(t,e,n){this.name="",this.color=new Ve(t),this.near=e!==void 0?e:1,this.far=n!==void 0?n:1e3}Object.assign(cf.prototype,{isFog:!0,clone:function(){return new cf(this.color,this.near,this.far)},toJSON:function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}});function mr(t,e){this.array=t,this.stride=e,this.count=t!==void 0?t.length/e:0,this.usage=gc,this.updateRange={offset:0,count:-1},this.version=0}Object.defineProperty(mr.prototype,"needsUpdate",{set:function(t){t===!0&&this.version++}});Object.assign(mr.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this},copyAt:function(t,e,n){t*=this.stride,n*=e.stride;for(var i=0,r=this.stride;i<r;i++)this.array[t+i]=e.array[n+i];return this},set:function(t,e){return e===void 0&&(e=0),this.array.set(t,e),this},clone:function(){return new this.constructor().copy(this)},onUpload:function(t){return this.onUploadCallback=t,this}});var Fa=new z;function Ic(t,e,n,i){this.data=t,this.itemSize=e,this.offset=n,this.normalized=i===!0}Object.defineProperties(Ic.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}});Object.assign(Ic.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(t){for(var e=0,n=this.data.count;e<n;e++)Fa.x=this.getX(e),Fa.y=this.getY(e),Fa.z=this.getZ(e),Fa.applyMatrix4(t),this.setXYZ(e,Fa.x,Fa.y,Fa.z);return this},setX:function(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this},setY:function(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this},setZ:function(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this},setW:function(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this},setXYZW:function(t,e,n,i,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=r,this}});function ea(t){Je.call(this),this.type="SpriteMaterial",this.color=new Ve(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}ea.prototype=Object.create(Je.prototype);ea.prototype.constructor=ea;ea.prototype.isSpriteMaterial=!0;ea.prototype.copy=function(t){return Je.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this};var Oo,Fc=new z,No=new z,zo=new z,Uo=new Me,Bc=new Me,WM=new ct,hf=new z,Oc=new z,uf=new z,$M=new Me,ig=new Me,jM=new Me;function Nc(t){if(Ge.call(this),this.type="Sprite",Oo===void 0){Oo=new ke;var e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new mr(e,5);Oo.setIndex([0,1,2,0,2,3]),Oo.setAttribute("position",new Ic(n,3,0,!1)),Oo.setAttribute("uv",new Ic(n,2,3,!1))}this.geometry=Oo,this.material=t!==void 0?t:new ea,this.center=new Me(.5,.5)}Nc.prototype=Object.assign(Object.create(Ge.prototype),{constructor:Nc,isSprite:!0,raycast:function(t,e){t.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),No.setFromMatrixScale(this.matrixWorld),WM.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),zo.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&No.multiplyScalar(-zo.z);var n=this.material.rotation,i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));var a=this.center;ff(hf.set(-.5,-.5,0),zo,a,No,i,r),ff(Oc.set(.5,-.5,0),zo,a,No,i,r),ff(uf.set(.5,.5,0),zo,a,No,i,r),$M.set(0,0),ig.set(1,0),jM.set(1,1);var s=t.ray.intersectTriangle(hf,Oc,uf,!1,Fc);if(!(s===null&&(ff(Oc.set(-.5,.5,0),zo,a,No,i,r),ig.set(0,1),s=t.ray.intersectTriangle(hf,uf,Oc,!1,Fc),s===null))){var o=t.ray.origin.distanceTo(Fc);o<t.near||o>t.far||e.push({distance:o,point:Fc.clone(),uv:ln.getUV(Fc,hf,Oc,uf,$M,ig,jM,new Me),face:null,object:this})}},clone:function(){return new this.constructor(this.material).copy(this)},copy:function(t){return Ge.prototype.copy.call(this,t),t.center!==void 0&&this.center.copy(t.center),this}});function ff(t,e,n,i,r,a){Uo.subVectors(t,n).addScalar(.5).multiply(i),r!==void 0?(Bc.x=a*Uo.x-r*Uo.y,Bc.y=r*Uo.x+a*Uo.y):Bc.copy(Uo),t.copy(e),t.x+=Bc.x,t.y+=Bc.y,t.applyMatrix4(WM)}var df=new z,XM=new z;function zc(){Ge.call(this),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}zc.prototype=Object.assign(Object.create(Ge.prototype),{constructor:zc,isLOD:!0,copy:function(t){Ge.prototype.copy.call(this,t,!1);for(var e=t.levels,n=0,i=e.length;n<i;n++){var r=e[n];this.addLevel(r.object.clone(),r.distance)}return this.autoUpdate=t.autoUpdate,this},addLevel:function(t,e){e===void 0&&(e=0),e=Math.abs(e);for(var n=this.levels,i=0;i<n.length&&!(e<n[i].distance);i++);return n.splice(i,0,{distance:e,object:t}),this.add(t),this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(t){var e=this.levels;if(e.length>0){for(var n=1,i=e.length;n<i&&!(t<e[n].distance);n++);return e[n-1].object}return null},raycast:function(t,e){var n=this.levels;if(n.length>0){df.setFromMatrixPosition(this.matrixWorld);var i=t.ray.origin.distanceTo(df);this.getObjectForDistance(i).raycast(t,e)}},update:function(t){var e=this.levels;if(e.length>1){df.setFromMatrixPosition(t.matrixWorld),XM.setFromMatrixPosition(this.matrixWorld);var n=df.distanceTo(XM)/t.zoom;e[0].object.visible=!0;for(var i=1,r=e.length;i<r&&n>=e[i].distance;i++)e[i-1].object.visible=!1,e[i].object.visible=!0;for(this._currentLevel=i-1;i<r;i++)e[i].object.visible=!1}},toJSON:function(t){var e=Ge.prototype.toJSON.call(this,t);this.autoUpdate===!1&&(e.object.autoUpdate=!1),e.object.levels=[];for(var n=this.levels,i=0,r=n.length;i<r;i++){var a=n[i];e.object.levels.push({object:a.object.uuid,distance:a.distance})}return e}});function pf(t,e){t&&t.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),Ft.call(this,t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new ct,this.bindMatrixInverse=new ct}pf.prototype=Object.assign(Object.create(Ft.prototype),{constructor:pf,isSkinnedMesh:!0,bind:function(t,e){this.skeleton=t,e===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.getInverse(e)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){for(var t=new Et,e=this.geometry.attributes.skinWeight,n=0,i=e.count;n<i;n++){t.x=e.getX(n),t.y=e.getY(n),t.z=e.getZ(n),t.w=e.getW(n);var r=1/t.manhattanLength();r!==1/0?t.multiplyScalar(r):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}},updateMatrixWorld:function(t){Ft.prototype.updateMatrixWorld.call(this,t),this.bindMode==="attached"?this.bindMatrixInverse.getInverse(this.matrixWorld):this.bindMode==="detached"?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});var qM=new ct,zD=new ct;function mf(t,e){if(t=t||[],this.bones=t.slice(0),this.boneMatrices=new Float32Array(this.bones.length*16),this.frame=-1,e===void 0)this.calculateInverses();else if(this.bones.length===e.length)this.boneInverses=e.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(var n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new ct)}}Object.assign(mf.prototype,{calculateInverses:function(){this.boneInverses=[];for(var t=0,e=this.bones.length;t<e;t++){var n=new ct;this.bones[t]&&n.getInverse(this.bones[t].matrixWorld),this.boneInverses.push(n)}},pose:function(){var t,e,n;for(e=0,n=this.bones.length;e<n;e++)t=this.bones[e],t&&t.matrixWorld.getInverse(this.boneInverses[e]);for(e=0,n=this.bones.length;e<n;e++)t=this.bones[e],t&&(t.parent&&t.parent.isBone?(t.matrix.getInverse(t.parent.matrixWorld),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))},update:function(){for(var t=this.bones,e=this.boneInverses,n=this.boneMatrices,i=this.boneTexture,r=0,a=t.length;r<a;r++){var s=t[r]?t[r].matrixWorld:zD;qM.multiplyMatrices(s,e[r]),qM.toArray(n,r*16)}i!==void 0&&(i.needsUpdate=!0)},clone:function(){return new mf(this.bones,this.boneInverses)},getBoneByName:function(t){for(var e=0,n=this.bones.length;e<n;e++){var i=this.bones[e];if(i.name===t)return i}},dispose:function(){this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=void 0)}});function rg(){Ge.call(this),this.type="Bone"}rg.prototype=Object.assign(Object.create(Ge.prototype),{constructor:rg,isBone:!0});var YM=new ct,ZM=new ct,Go=[],Uc=new Ft;function gf(t,e,n){Ft.call(this,t,e),this.instanceMatrix=new Ke(new Float32Array(n*16),16),this.count=n,this.frustumCulled=!1}gf.prototype=Object.assign(Object.create(Ft.prototype),{constructor:gf,isInstancedMesh:!0,getMatrixAt:function(t,e){e.fromArray(this.instanceMatrix.array,t*16)},raycast:function(t,e){var n=this.matrixWorld,i=this.count;if(Uc.geometry=this.geometry,Uc.material=this.material,Uc.material!==void 0)for(var r=0;r<i;r++)this.getMatrixAt(r,YM),ZM.multiplyMatrices(n,YM),Uc.matrixWorld=ZM,Uc.raycast(t,Go),Go.length>0&&(Go[0].instanceId=r,Go[0].object=this,e.push(Go[0]),Go.length=0)},setMatrixAt:function(t,e){e.toArray(this.instanceMatrix.array,t*16)},updateMorphTargets:function(){}});function Bt(t){Je.call(this),this.type="LineBasicMaterial",this.color=new Ve(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(t)}Bt.prototype=Object.create(Je.prototype);Bt.prototype.constructor=Bt;Bt.prototype.isLineBasicMaterial=!0;Bt.prototype.copy=function(t){return Je.prototype.copy.call(this,t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this};var JM=new z,KM=new z,QM=new ct,vf=new Ea,yf=new hr;function Xn(t,e,n){n===1&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),Ge.call(this),this.type="Line",this.geometry=t!==void 0?t:new ke,this.material=e!==void 0?e:new Bt}Xn.prototype=Object.assign(Object.create(Ge.prototype),{constructor:Xn,isLine:!0,computeLineDistances:function(){var t=this.geometry;if(t.isBufferGeometry)if(t.index===null){for(var e=t.attributes.position,n=[0],i=1,r=e.count;i<r;i++)JM.fromBufferAttribute(e,i-1),KM.fromBufferAttribute(e,i),n[i]=n[i-1],n[i]+=JM.distanceTo(KM);t.setAttribute("lineDistance",new ze(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(t.isGeometry){var a=t.vertices,n=t.lineDistances;n[0]=0;for(var i=1,r=a.length;i<r;i++)n[i]=n[i-1],n[i]+=a[i-1].distanceTo(a[i])}return this},raycast:function(t,e){var n=this.geometry,i=this.matrixWorld,r=t.params.Line.threshold;if(n.boundingSphere===null&&n.computeBoundingSphere(),yf.copy(n.boundingSphere),yf.applyMatrix4(i),yf.radius+=r,t.ray.intersectsSphere(yf)!==!1){QM.getInverse(i),vf.copy(t.ray).applyMatrix4(QM);var a=r/((this.scale.x+this.scale.y+this.scale.z)/3),s=a*a,o=new z,l=new z,c=new z,h=new z,u=this&&this.isLineSegments?2:1;if(n.isBufferGeometry){var f=n.index,d=n.attributes,p=d.position.array;if(f!==null)for(var m=f.array,x=0,g=m.length-1;x<g;x+=u){var v=m[x],b=m[x+1];o.fromArray(p,v*3),l.fromArray(p,b*3);var _=vf.distanceSqToSegment(o,l,h,c);if(!(_>s)){h.applyMatrix4(this.matrixWorld);var M=t.ray.origin.distanceTo(h);M<t.near||M>t.far||e.push({distance:M,point:c.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}else for(var x=0,g=p.length/3-1;x<g;x+=u){o.fromArray(p,3*x),l.fromArray(p,3*x+3);var _=vf.distanceSqToSegment(o,l,h,c);if(!(_>s)){h.applyMatrix4(this.matrixWorld);var M=t.ray.origin.distanceTo(h);M<t.near||M>t.far||e.push({distance:M,point:c.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}}else if(n.isGeometry)for(var y=n.vertices,w=y.length,x=0;x<w-1;x+=u){var _=vf.distanceSqToSegment(y[x],y[x+1],h,c);if(!(_>s)){h.applyMatrix4(this.matrixWorld);var M=t.ray.origin.distanceTo(h);M<t.near||M>t.far||e.push({distance:M,point:c.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});var xf=new z,_f=new z;function Nt(t,e){Xn.call(this,t,e),this.type="LineSegments"}Nt.prototype=Object.assign(Object.create(Xn.prototype),{constructor:Nt,isLineSegments:!0,computeLineDistances:function(){var t=this.geometry;if(t.isBufferGeometry)if(t.index===null){for(var e=t.attributes.position,n=[],i=0,r=e.count;i<r;i+=2)xf.fromBufferAttribute(e,i),_f.fromBufferAttribute(e,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+xf.distanceTo(_f);t.setAttribute("lineDistance",new ze(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(t.isGeometry)for(var a=t.vertices,n=t.lineDistances,i=0,r=a.length;i<r;i+=2)xf.copy(a[i]),_f.copy(a[i+1]),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+xf.distanceTo(_f);return this}});function Mf(t,e){Xn.call(this,t,e),this.type="LineLoop"}Mf.prototype=Object.assign(Object.create(Xn.prototype),{constructor:Mf,isLineLoop:!0});function yi(t){Je.call(this),this.type="PointsMaterial",this.color=new Ve(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(t)}yi.prototype=Object.create(Je.prototype);yi.prototype.constructor=yi;yi.prototype.isPointsMaterial=!0;yi.prototype.copy=function(t){return Je.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.morphTargets=t.morphTargets,this};var ew=new ct,ag=new Ea,wf=new hr,bf=new z;function Ho(t,e){Ge.call(this),this.type="Points",this.geometry=t!==void 0?t:new ke,this.material=e!==void 0?e:new yi,this.updateMorphTargets()}Ho.prototype=Object.assign(Object.create(Ge.prototype),{constructor:Ho,isPoints:!0,raycast:function(t,e){var n=this.geometry,i=this.matrixWorld,r=t.params.Points.threshold;if(n.boundingSphere===null&&n.computeBoundingSphere(),wf.copy(n.boundingSphere),wf.applyMatrix4(i),wf.radius+=r,t.ray.intersectsSphere(wf)!==!1){ew.getInverse(i),ag.copy(t.ray).applyMatrix4(ew);var a=r/((this.scale.x+this.scale.y+this.scale.z)/3),s=a*a;if(n.isBufferGeometry){var o=n.index,l=n.attributes,c=l.position.array;if(o!==null)for(var h=o.array,u=0,f=h.length;u<f;u++){var d=h[u];bf.fromArray(c,d*3),sg(bf,d,s,i,t,e,this)}else for(var u=0,p=c.length/3;u<p;u++)bf.fromArray(c,u*3),sg(bf,u,s,i,t,e,this)}else for(var m=n.vertices,u=0,p=m.length;u<p;u++)sg(m[u],u,s,i,t,e,this)}},updateMorphTargets:function(){var t=this.geometry,e,n,i;if(t.isBufferGeometry){var r=t.morphAttributes,a=Object.keys(r);if(a.length>0){var s=r[a[0]];if(s!==void 0)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},e=0,n=s.length;e<n;e++)i=s[e].name||String(e),this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=e}}else{var o=t.morphTargets;o!==void 0&&o.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});function sg(t,e,n,i,r,a,s){var o=ag.distanceSqToPoint(t);if(o<n){var l=new z;ag.closestPointToPoint(t,l),l.applyMatrix4(i);var c=r.ray.origin.distanceTo(l);if(c<r.near||c>r.far)return;a.push({distance:c,distanceToRay:Math.sqrt(o),point:l,index:e,face:null,object:s})}}function og(t,e,n,i,r,a,s,o,l){St.call(this,t,e,n,i,r,a,s,o,l),this.format=s!==void 0?s:sr,this.minFilter=a!==void 0?a:rn,this.magFilter=r!==void 0?r:rn,this.generateMipmaps=!1}og.prototype=Object.assign(Object.create(St.prototype),{constructor:og,isVideoTexture:!0,update:function(){var t=this.image;t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}});function Vo(t,e,n,i,r,a,s,o,l,c,h,u){St.call(this,null,a,s,o,l,c,i,r,h,u),this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}Vo.prototype=Object.create(St.prototype);Vo.prototype.constructor=Vo;Vo.prototype.isCompressedTexture=!0;function Gc(t,e,n,i,r,a,s,o,l){St.call(this,t,e,n,i,r,a,s,o,l),this.needsUpdate=!0}Gc.prototype=Object.create(St.prototype);Gc.prototype.constructor=Gc;Gc.prototype.isCanvasTexture=!0;function Hc(t,e,n,i,r,a,s,o,l,c){if(c=c!==void 0?c:va,c!==va&&c!==uo)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&c===va&&(n=hc),n===void 0&&c===uo&&(n=ho),St.call(this,null,i,r,a,s,o,c,n,l),this.image={width:t,height:e},this.magFilter=s!==void 0?s:$t,this.minFilter=o!==void 0?o:$t,this.flipY=!1,this.generateMipmaps=!1}Hc.prototype=Object.create(St.prototype);Hc.prototype.constructor=Hc;Hc.prototype.isDepthTexture=!0;function ko(t){ke.call(this),this.type="WireframeGeometry";var e=[],n,i,r,a,s,o=[0,0],l={},c,h,u,f,d=["a","b","c"],p;if(t&&t.isGeometry){var m=t.faces;for(n=0,r=m.length;n<r;n++){var x=m[n];for(i=0;i<3;i++)h=x[d[i]],u=x[d[(i+1)%3]],o[0]=Math.min(h,u),o[1]=Math.max(h,u),f=o[0]+","+o[1],l[f]===void 0&&(l[f]={index1:o[0],index2:o[1]})}for(f in l)c=l[f],p=t.vertices[c.index1],e.push(p.x,p.y,p.z),p=t.vertices[c.index2],e.push(p.x,p.y,p.z)}else if(t&&t.isBufferGeometry){var g,v,b,_,M,y,w,E;if(p=new z,t.index!==null){for(g=t.attributes.position,v=t.index,b=t.groups,b.length===0&&(b=[{start:0,count:v.count,materialIndex:0}]),a=0,s=b.length;a<s;++a)for(_=b[a],M=_.start,y=_.count,n=M,r=M+y;n<r;n+=3)for(i=0;i<3;i++)h=v.getX(n+i),u=v.getX(n+(i+1)%3),o[0]=Math.min(h,u),o[1]=Math.max(h,u),f=o[0]+","+o[1],l[f]===void 0&&(l[f]={index1:o[0],index2:o[1]});for(f in l)c=l[f],p.fromBufferAttribute(g,c.index1),e.push(p.x,p.y,p.z),p.fromBufferAttribute(g,c.index2),e.push(p.x,p.y,p.z)}else for(g=t.attributes.position,n=0,r=g.count/3;n<r;n++)for(i=0;i<3;i++)w=3*n+i,p.fromBufferAttribute(g,w),e.push(p.x,p.y,p.z),E=3*n+(i+1)%3,p.fromBufferAttribute(g,E),e.push(p.x,p.y,p.z)}this.setAttribute("position",new ze(e,3))}ko.prototype=Object.create(ke.prototype);ko.prototype.constructor=ko;function Vc(t,e,n){Qe.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:n},this.fromBufferGeometry(new Wo(t,e,n)),this.mergeVertices()}Vc.prototype=Object.create(Qe.prototype);Vc.prototype.constructor=Vc;function Wo(t,e,n){ke.call(this),this.type="ParametricBufferGeometry",this.parameters={func:t,slices:e,stacks:n};var i=[],r=[],a=[],s=[],o=1e-5,l=new z,c=new z,h=new z,u=new z,f=new z,d,p;t.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");var m=e+1;for(d=0;d<=n;d++){var x=d/n;for(p=0;p<=e;p++){var g=p/e;t(g,x,c),r.push(c.x,c.y,c.z),g-o>=0?(t(g-o,x,h),u.subVectors(c,h)):(t(g+o,x,h),u.subVectors(h,c)),x-o>=0?(t(g,x-o,h),f.subVectors(c,h)):(t(g,x+o,h),f.subVectors(h,c)),l.crossVectors(u,f).normalize(),a.push(l.x,l.y,l.z),s.push(g,x)}}for(d=0;d<n;d++)for(p=0;p<e;p++){var v=d*m+p,b=d*m+p+1,_=(d+1)*m+p+1,M=(d+1)*m+p;i.push(v,b,M),i.push(b,_,M)}this.setIndex(i),this.setAttribute("position",new ze(r,3)),this.setAttribute("normal",new ze(a,3)),this.setAttribute("uv",new ze(s,2))}Wo.prototype=Object.create(ke.prototype);Wo.prototype.constructor=Wo;function kc(t,e,n,i){Qe.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:i},this.fromBufferGeometry(new Nn(t,e,n,i)),this.mergeVertices()}kc.prototype=Object.create(Qe.prototype);kc.prototype.constructor=kc;function Nn(t,e,n,i){ke.call(this),this.type="PolyhedronBufferGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:i},n=n||1,i=i||0;var r=[],a=[];s(i),l(n),c(),this.setAttribute("position",new ze(r,3)),this.setAttribute("normal",new ze(r.slice(),3)),this.setAttribute("uv",new ze(a,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function s(g){for(var v=new z,b=new z,_=new z,M=0;M<e.length;M+=3)f(e[M+0],v),f(e[M+1],b),f(e[M+2],_),o(v,b,_,g)}function o(g,v,b,_){var M=Math.pow(2,_),y=[],w,E;for(w=0;w<=M;w++){y[w]=[];var A=g.clone().lerp(b,w/M),L=v.clone().lerp(b,w/M),S=M-w;for(E=0;E<=S;E++)E===0&&w===M?y[w][E]=A:y[w][E]=A.clone().lerp(L,E/S)}for(w=0;w<M;w++)for(E=0;E<2*(M-w)-1;E++){var R=Math.floor(E/2);E%2==0?(u(y[w][R+1]),u(y[w+1][R]),u(y[w][R])):(u(y[w][R+1]),u(y[w+1][R+1]),u(y[w+1][R]))}}function l(g){for(var v=new z,b=0;b<r.length;b+=3)v.x=r[b+0],v.y=r[b+1],v.z=r[b+2],v.normalize().multiplyScalar(g),r[b+0]=v.x,r[b+1]=v.y,r[b+2]=v.z}function c(){for(var g=new z,v=0;v<r.length;v+=3){g.x=r[v+0],g.y=r[v+1],g.z=r[v+2];var b=m(g)/2/Math.PI+.5,_=x(g)/Math.PI+.5;a.push(b,1-_)}d(),h()}function h(){for(var g=0;g<a.length;g+=6){var v=a[g+0],b=a[g+2],_=a[g+4],M=Math.max(v,b,_),y=Math.min(v,b,_);M>.9&&y<.1&&(v<.2&&(a[g+0]+=1),b<.2&&(a[g+2]+=1),_<.2&&(a[g+4]+=1))}}function u(g){r.push(g.x,g.y,g.z)}function f(g,v){var b=g*3;v.x=t[b+0],v.y=t[b+1],v.z=t[b+2]}function d(){for(var g=new z,v=new z,b=new z,_=new z,M=new Me,y=new Me,w=new Me,E=0,A=0;E<r.length;E+=9,A+=6){g.set(r[E+0],r[E+1],r[E+2]),v.set(r[E+3],r[E+4],r[E+5]),b.set(r[E+6],r[E+7],r[E+8]),M.set(a[A+0],a[A+1]),y.set(a[A+2],a[A+3]),w.set(a[A+4],a[A+5]),_.copy(g).add(v).add(b).divideScalar(3);var L=m(_);p(M,A+0,g,L),p(y,A+2,v,L),p(w,A+4,b,L)}}function p(g,v,b,_){_<0&&g.x===1&&(a[v]=g.x-1),b.x===0&&b.z===0&&(a[v]=_/2/Math.PI+.5)}function m(g){return Math.atan2(g.z,-g.x)}function x(g){return Math.atan2(-g.y,Math.sqrt(g.x*g.x+g.z*g.z))}}Nn.prototype=Object.create(ke.prototype);Nn.prototype.constructor=Nn;function Wc(t,e){Qe.call(this),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new $o(t,e)),this.mergeVertices()}Wc.prototype=Object.create(Qe.prototype);Wc.prototype.constructor=Wc;function $o(t,e){var n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];Nn.call(this,n,i,t,e),this.type="TetrahedronBufferGeometry",this.parameters={radius:t,detail:e}}$o.prototype=Object.create(Nn.prototype);$o.prototype.constructor=$o;function $c(t,e){Qe.call(this),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Ba(t,e)),this.mergeVertices()}$c.prototype=Object.create(Qe.prototype);$c.prototype.constructor=$c;function Ba(t,e){var n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];Nn.call(this,n,i,t,e),this.type="OctahedronBufferGeometry",this.parameters={radius:t,detail:e}}Ba.prototype=Object.create(Nn.prototype);Ba.prototype.constructor=Ba;function jc(t,e){Qe.call(this),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new jo(t,e)),this.mergeVertices()}jc.prototype=Object.create(Qe.prototype);jc.prototype.constructor=jc;function jo(t,e){var n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];Nn.call(this,i,r,t,e),this.type="IcosahedronBufferGeometry",this.parameters={radius:t,detail:e}}jo.prototype=Object.create(Nn.prototype);jo.prototype.constructor=jo;function Xc(t,e){Qe.call(this),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Xo(t,e)),this.mergeVertices()}Xc.prototype=Object.create(Qe.prototype);Xc.prototype.constructor=Xc;function Xo(t,e){var n=(1+Math.sqrt(5))/2,i=1/n,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];Nn.call(this,r,a,t,e),this.type="DodecahedronBufferGeometry",this.parameters={radius:t,detail:e}}Xo.prototype=Object.create(Nn.prototype);Xo.prototype.constructor=Xo;function qc(t,e,n,i,r,a){Qe.call(this),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:i,closed:r},a!==void 0&&console.warn("THREE.TubeGeometry: taper has been removed.");var s=new Oa(t,e,n,i,r);this.tangents=s.tangents,this.normals=s.normals,this.binormals=s.binormals,this.fromBufferGeometry(s),this.mergeVertices()}qc.prototype=Object.create(Qe.prototype);qc.prototype.constructor=qc;function Oa(t,e,n,i,r){ke.call(this),this.type="TubeBufferGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:i,closed:r},e=e||64,n=n||1,i=i||8,r=r||!1;var a=t.computeFrenetFrames(e,r);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;var s=new z,o=new z,l=new Me,c=new z,h,u,f=[],d=[],p=[],m=[];x(),this.setIndex(m),this.setAttribute("position",new ze(f,3)),this.setAttribute("normal",new ze(d,3)),this.setAttribute("uv",new ze(p,2));function x(){for(h=0;h<e;h++)g(h);g(r===!1?e:0),b(),v()}function g(_){c=t.getPointAt(_/e,c);var M=a.normals[_],y=a.binormals[_];for(u=0;u<=i;u++){var w=u/i*Math.PI*2,E=Math.sin(w),A=-Math.cos(w);o.x=A*M.x+E*y.x,o.y=A*M.y+E*y.y,o.z=A*M.z+E*y.z,o.normalize(),d.push(o.x,o.y,o.z),s.x=c.x+n*o.x,s.y=c.y+n*o.y,s.z=c.z+n*o.z,f.push(s.x,s.y,s.z)}}function v(){for(u=1;u<=e;u++)for(h=1;h<=i;h++){var _=(i+1)*(u-1)+(h-1),M=(i+1)*u+(h-1),y=(i+1)*u+h,w=(i+1)*(u-1)+h;m.push(_,M,w),m.push(M,y,w)}}function b(){for(h=0;h<=e;h++)for(u=0;u<=i;u++)l.x=h/e,l.y=u/i,p.push(l.x,l.y)}}Oa.prototype=Object.create(ke.prototype);Oa.prototype.constructor=Oa;Oa.prototype.toJSON=function(){var t=ke.prototype.toJSON.call(this);return t.path=this.parameters.path.toJSON(),t};function Yc(t,e,n,i,r,a,s){Qe.call(this),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:i,p:r,q:a},s!==void 0&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new qo(t,e,n,i,r,a)),this.mergeVertices()}Yc.prototype=Object.create(Qe.prototype);Yc.prototype.constructor=Yc;function qo(t,e,n,i,r,a){ke.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:i,p:r,q:a},t=t||1,e=e||.4,n=Math.floor(n)||64,i=Math.floor(i)||8,r=r||2,a=a||3;var s=[],o=[],l=[],c=[],h,u,f=new z,d=new z,p=new z,m=new z,x=new z,g=new z,v=new z;for(h=0;h<=n;++h){var b=h/n*r*Math.PI*2;for(S(b,r,a,t,p),S(b+.01,r,a,t,m),g.subVectors(m,p),v.addVectors(m,p),x.crossVectors(g,v),v.crossVectors(x,g),x.normalize(),v.normalize(),u=0;u<=i;++u){var _=u/i*Math.PI*2,M=-e*Math.cos(_),y=e*Math.sin(_);f.x=p.x+(M*v.x+y*x.x),f.y=p.y+(M*v.y+y*x.y),f.z=p.z+(M*v.z+y*x.z),o.push(f.x,f.y,f.z),d.subVectors(f,p).normalize(),l.push(d.x,d.y,d.z),c.push(h/n),c.push(u/i)}}for(u=1;u<=n;u++)for(h=1;h<=i;h++){var w=(i+1)*(u-1)+(h-1),E=(i+1)*u+(h-1),A=(i+1)*u+h,L=(i+1)*(u-1)+h;s.push(w,E,L),s.push(E,A,L)}this.setIndex(s),this.setAttribute("position",new ze(o,3)),this.setAttribute("normal",new ze(l,3)),this.setAttribute("uv",new ze(c,2));function S(R,D,I,F,U){var j=Math.cos(R),Y=Math.sin(R),K=I/D*R,X=Math.cos(K);U.x=F*(2+X)*.5*j,U.y=F*(2+X)*Y*.5,U.z=F*Math.sin(K)*.5}}qo.prototype=Object.create(ke.prototype);qo.prototype.constructor=qo;function Zc(t,e,n,i,r){Qe.call(this),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:i,arc:r},this.fromBufferGeometry(new Yo(t,e,n,i,r)),this.mergeVertices()}Zc.prototype=Object.create(Qe.prototype);Zc.prototype.constructor=Zc;function Yo(t,e,n,i,r){ke.call(this),this.type="TorusBufferGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:i,arc:r},t=t||1,e=e||.4,n=Math.floor(n)||8,i=Math.floor(i)||6,r=r||Math.PI*2;var a=[],s=[],o=[],l=[],c=new z,h=new z,u=new z,f,d;for(f=0;f<=n;f++)for(d=0;d<=i;d++){var p=d/i*r,m=f/n*Math.PI*2;h.x=(t+e*Math.cos(m))*Math.cos(p),h.y=(t+e*Math.cos(m))*Math.sin(p),h.z=e*Math.sin(m),s.push(h.x,h.y,h.z),c.x=t*Math.cos(p),c.y=t*Math.sin(p),u.subVectors(h,c).normalize(),o.push(u.x,u.y,u.z),l.push(d/i),l.push(f/n)}for(f=1;f<=n;f++)for(d=1;d<=i;d++){var x=(i+1)*f+d-1,g=(i+1)*(f-1)+d-1,v=(i+1)*(f-1)+d,b=(i+1)*f+d;a.push(x,g,b),a.push(g,v,b)}this.setIndex(a),this.setAttribute("position",new ze(s,3)),this.setAttribute("normal",new ze(o,3)),this.setAttribute("uv",new ze(l,2))}Yo.prototype=Object.create(ke.prototype);Yo.prototype.constructor=Yo;var UD={triangulate:function(t,e,n){n=n||2;var i=e&&e.length,r=i?e[0]*n:t.length,a=tw(t,0,r,n,!0),s=[];if(!a||a.next===a.prev)return s;var o,l,c,h,u,f,d;if(i&&(a=WD(t,e,a,n)),t.length>80*n){o=c=t[0],l=h=t[1];for(var p=n;p<r;p+=n)u=t[p],f=t[p+1],u<o&&(o=u),f<l&&(l=f),u>c&&(c=u),f>h&&(h=f);d=Math.max(c-o,h-l),d=d!==0?1/d:0}return Kc(a,s,n,o,l,d),s}};function tw(t,e,n,i,r){var a,s;if(r===eI(t,e,n,i)>0)for(a=e;a<n;a+=i)s=rw(a,t[a],t[a+1],s);else for(a=n-i;a>=e;a-=i)s=rw(a,t[a],t[a+1],s);return s&&Na(s,s.next)&&(eh(s),s=s.next),s}function Jc(t,e){if(!t)return t;e||(e=t);var n=t,i;do if(i=!1,!n.steiner&&(Na(n,n.next)||un(n.prev,n,n.next)===0)){if(eh(n),n=e=n.prev,n===n.next)break;i=!0}else n=n.next;while(i||n!==e);return e}function Kc(t,e,n,i,r,a,s){if(!!t){!s&&a&&qD(t,i,r,a);for(var o=t,l,c;t.prev!==t.next;){if(l=t.prev,c=t.next,a?HD(t,i,r,a):GD(t)){e.push(l.i/n),e.push(t.i/n),e.push(c.i/n),eh(t),t=c.next,o=c.next;continue}if(t=c,t===o){s?s===1?(t=VD(t,e,n),Kc(t,e,n,i,r,a,2)):s===2&&kD(t,e,n,i,r,a):Kc(Jc(t),e,n,i,r,a,1);break}}}}function GD(t){var e=t.prev,n=t,i=t.next;if(un(e,n,i)>=0)return!1;for(var r=t.next.next;r!==t.prev;){if(Zo(e.x,e.y,n.x,n.y,i.x,i.y,r.x,r.y)&&un(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function HD(t,e,n,i){var r=t.prev,a=t,s=t.next;if(un(r,a,s)>=0)return!1;for(var o=r.x<a.x?r.x<s.x?r.x:s.x:a.x<s.x?a.x:s.x,l=r.y<a.y?r.y<s.y?r.y:s.y:a.y<s.y?a.y:s.y,c=r.x>a.x?r.x>s.x?r.x:s.x:a.x>s.x?a.x:s.x,h=r.y>a.y?r.y>s.y?r.y:s.y:a.y>s.y?a.y:s.y,u=lg(o,l,e,n,i),f=lg(c,h,e,n,i),d=t.prevZ,p=t.nextZ;d&&d.z>=u&&p&&p.z<=f;){if(d!==t.prev&&d!==t.next&&Zo(r.x,r.y,a.x,a.y,s.x,s.y,d.x,d.y)&&un(d.prev,d,d.next)>=0||(d=d.prevZ,p!==t.prev&&p!==t.next&&Zo(r.x,r.y,a.x,a.y,s.x,s.y,p.x,p.y)&&un(p.prev,p,p.next)>=0))return!1;p=p.nextZ}for(;d&&d.z>=u;){if(d!==t.prev&&d!==t.next&&Zo(r.x,r.y,a.x,a.y,s.x,s.y,d.x,d.y)&&un(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;p&&p.z<=f;){if(p!==t.prev&&p!==t.next&&Zo(r.x,r.y,a.x,a.y,s.x,s.y,p.x,p.y)&&un(p.prev,p,p.next)>=0)return!1;p=p.nextZ}return!0}function VD(t,e,n){var i=t;do{var r=i.prev,a=i.next.next;!Na(r,a)&&nw(r,i,i.next,a)&&Qc(r,a)&&Qc(a,r)&&(e.push(r.i/n),e.push(i.i/n),e.push(a.i/n),eh(i),eh(i.next),i=t=a),i=i.next}while(i!==t);return i}function kD(t,e,n,i,r,a){var s=t;do{for(var o=s.next.next;o!==s.prev;){if(s.i!==o.i&&JD(s,o)){var l=iw(s,o);s=Jc(s,s.next),l=Jc(l,l.next),Kc(s,e,n,i,r,a),Kc(l,e,n,i,r,a);return}o=o.next}s=s.next}while(s!==t)}function WD(t,e,n,i){var r=[],a,s,o,l,c;for(a=0,s=e.length;a<s;a++)o=e[a]*i,l=a<s-1?e[a+1]*i:t.length,c=tw(t,o,l,i,!1),c===c.next&&(c.steiner=!0),r.push(ZD(c));for(r.sort($D),a=0;a<r.length;a++)jD(r[a],n),n=Jc(n,n.next);return n}function $D(t,e){return t.x-e.x}function jD(t,e){if(e=XD(t,e),e){var n=iw(e,t);Jc(n,n.next)}}function XD(t,e){var n=e,i=t.x,r=t.y,a=-1/0,s;do{if(r<=n.y&&r>=n.next.y&&n.next.y!==n.y){var o=n.x+(r-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(o<=i&&o>a){if(a=o,o===i){if(r===n.y)return n;if(r===n.next.y)return n.next}s=n.x<n.next.x?n:n.next}}n=n.next}while(n!==e);if(!s)return null;if(i===a)return s.prev;var l=s,c=s.x,h=s.y,u=1/0,f;for(n=s.next;n!==l;)i>=n.x&&n.x>=c&&i!==n.x&&Zo(r<h?i:a,r,c,h,r<h?a:i,r,n.x,n.y)&&(f=Math.abs(r-n.y)/(i-n.x),(f<u||f===u&&n.x>s.x)&&Qc(n,t)&&(s=n,u=f)),n=n.next;return s}function qD(t,e,n,i){var r=t;do r.z===null&&(r.z=lg(r.x,r.y,e,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==t);r.prevZ.nextZ=null,r.prevZ=null,YD(r)}function YD(t){var e,n,i,r,a,s,o,l,c=1;do{for(n=t,t=null,a=null,s=0;n;){for(s++,i=n,o=0,e=0;e<c&&(o++,i=i.nextZ,!!i);e++);for(l=c;o>0||l>0&&i;)o!==0&&(l===0||!i||n.z<=i.z)?(r=n,n=n.nextZ,o--):(r=i,i=i.nextZ,l--),a?a.nextZ=r:t=r,r.prevZ=a,a=r;n=i}a.nextZ=null,c*=2}while(s>1);return t}function lg(t,e,n,i,r){return t=32767*(t-n)*r,e=32767*(e-i)*r,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,t|e<<1}function ZD(t){var e=t,n=t;do(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next;while(e!==t);return n}function Zo(t,e,n,i,r,a,s,o){return(r-s)*(e-o)-(t-s)*(a-o)>=0&&(t-s)*(i-o)-(n-s)*(e-o)>=0&&(n-s)*(a-o)-(r-s)*(i-o)>=0}function JD(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!KD(t,e)&&Qc(t,e)&&Qc(e,t)&&QD(t,e)}function un(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function Na(t,e){return t.x===e.x&&t.y===e.y}function nw(t,e,n,i){return Na(t,n)&&Na(e,i)||Na(t,i)&&Na(n,e)?!0:un(t,e,n)>0!=un(t,e,i)>0&&un(n,i,t)>0!=un(n,i,e)>0}function KD(t,e){var n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&nw(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}function Qc(t,e){return un(t.prev,t,t.next)<0?un(t,e,t.next)>=0&&un(t,t.prev,e)>=0:un(t,e,t.prev)<0||un(t,t.next,e)<0}function QD(t,e){var n=t,i=!1,r=(t.x+e.x)/2,a=(t.y+e.y)/2;do n.y>a!=n.next.y>a&&n.next.y!==n.y&&r<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next;while(n!==t);return i}function iw(t,e){var n=new cg(t.i,t.x,t.y),i=new cg(e.i,e.x,e.y),r=t.next,a=e.prev;return t.next=e,e.prev=t,n.next=r,r.prev=n,i.next=n,n.prev=i,a.next=i,i.prev=a,i}function rw(t,e,n,i){var r=new cg(t,e,n);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function eh(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function cg(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function eI(t,e,n,i){for(var r=0,a=e,s=n-i;a<n;a+=i)r+=(t[s]-t[a])*(t[a+1]+t[s+1]),s=a;return r}var gr={area:function(t){for(var e=t.length,n=0,i=e-1,r=0;r<e;i=r++)n+=t[i].x*t[r].y-t[r].x*t[i].y;return n*.5},isClockWise:function(t){return gr.area(t)<0},triangulateShape:function(t,e){var n=[],i=[],r=[];aw(t),sw(n,t);var a=t.length;e.forEach(aw);for(var s=0;s<e.length;s++)i.push(a),a+=e[s].length,sw(n,e[s]);for(var o=UD.triangulate(n,i),s=0;s<o.length;s+=3)r.push(o.slice(s,s+3));return r}};function aw(t){var e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function sw(t,e){for(var n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}function za(t,e){Qe.call(this),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},this.fromBufferGeometry(new Ui(t,e)),this.mergeVertices()}za.prototype=Object.create(Qe.prototype);za.prototype.constructor=za;za.prototype.toJSON=function(){var t=Qe.prototype.toJSON.call(this),e=this.parameters.shapes,n=this.parameters.options;return ow(e,n,t)};function Ui(t,e){ke.call(this),this.type="ExtrudeBufferGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];for(var n=this,i=[],r=[],a=0,s=t.length;a<s;a++){var o=t[a];l(o)}this.setAttribute("position",new ze(i,3)),this.setAttribute("uv",new ze(r,2)),this.computeVertexNormals();function l(c){var h=[],u=e.curveSegments!==void 0?e.curveSegments:12,f=e.steps!==void 0?e.steps:1,d=e.depth!==void 0?e.depth:100,p=e.bevelEnabled!==void 0?e.bevelEnabled:!0,m=e.bevelThickness!==void 0?e.bevelThickness:6,x=e.bevelSize!==void 0?e.bevelSize:m-2,g=e.bevelOffset!==void 0?e.bevelOffset:0,v=e.bevelSegments!==void 0?e.bevelSegments:3,b=e.extrudePath,_=e.UVGenerator!==void 0?e.UVGenerator:tI;e.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),d=e.amount);var M,y=!1,w,E,A,L;b&&(M=b.getSpacedPoints(f),y=!0,p=!1,w=b.computeFrenetFrames(f,!1),E=new z,A=new z,L=new z),p||(v=0,m=0,x=0,g=0);var S,R,D,I=c.extractPoints(u),F=I.shape,U=I.holes,j=!gr.isClockWise(F);if(j)for(F=F.reverse(),R=0,D=U.length;R<D;R++)S=U[R],gr.isClockWise(S)&&(U[R]=S.reverse());var Y=gr.triangulateShape(F,U),K=F;for(R=0,D=U.length;R<D;R++)S=U[R],F=F.concat(S);function X(J,xe,V){return xe||console.error("THREE.ExtrudeGeometry: vec does not exist"),xe.clone().multiplyScalar(V).add(J)}var q,he,Se,_e,Z,ie=F.length,Le,Ee=Y.length;function we(J,xe,V){var B,Q,ue,W=J.x-xe.x,ce=J.y-xe.y,be=V.x-J.x,Ie=V.y-J.y,se=W*W+ce*ce,Be=W*Ie-ce*be;if(Math.abs(Be)>Number.EPSILON){var je=Math.sqrt(se),ot=Math.sqrt(be*be+Ie*Ie),At=xe.x-ce/je,pt=xe.y+W/je,wn=V.x-Ie/ot,Ht=V.y+be/ot,ji=((wn-At)*Ie-(Ht-pt)*be)/(W*Ie-ce*be);B=At+W*ji-J.x,Q=pt+ce*ji-J.y;var is=B*B+Q*Q;if(is<=2)return new Me(B,Q);ue=Math.sqrt(is/2)}else{var Ti=!1;W>Number.EPSILON?be>Number.EPSILON&&(Ti=!0):W<-Number.EPSILON?be<-Number.EPSILON&&(Ti=!0):Math.sign(ce)===Math.sign(Ie)&&(Ti=!0),Ti?(B=-ce,Q=W,ue=Math.sqrt(se)):(B=W,Q=ce,ue=Math.sqrt(se/2))}return new Me(B/ue,Q/ue)}for(var Ae=[],ae=0,ee=K.length,ve=ee-1,pe=ae+1;ae<ee;ae++,ve++,pe++)ve===ee&&(ve=0),pe===ee&&(pe=0),Ae[ae]=we(K[ae],K[ve],K[pe]);var De=[],Ce,O=Ae.concat();for(R=0,D=U.length;R<D;R++){for(S=U[R],Ce=[],ae=0,ee=S.length,ve=ee-1,pe=ae+1;ae<ee;ae++,ve++,pe++)ve===ee&&(ve=0),pe===ee&&(pe=0),Ce[ae]=we(S[ae],S[ve],S[pe]);De.push(Ce),O=O.concat(Ce)}for(q=0;q<v;q++){for(Se=q/v,_e=m*Math.cos(Se*Math.PI/2),he=x*Math.sin(Se*Math.PI/2)+g,ae=0,ee=K.length;ae<ee;ae++)Z=X(K[ae],Ae[ae],he),N(Z.x,Z.y,-_e);for(R=0,D=U.length;R<D;R++)for(S=U[R],Ce=De[R],ae=0,ee=S.length;ae<ee;ae++)Z=X(S[ae],Ce[ae],he),N(Z.x,Z.y,-_e)}for(he=x+g,ae=0;ae<ie;ae++)Z=p?X(F[ae],O[ae],he):F[ae],y?(A.copy(w.normals[0]).multiplyScalar(Z.x),E.copy(w.binormals[0]).multiplyScalar(Z.y),L.copy(M[0]).add(A).add(E),N(L.x,L.y,L.z)):N(Z.x,Z.y,0);var G;for(G=1;G<=f;G++)for(ae=0;ae<ie;ae++)Z=p?X(F[ae],O[ae],he):F[ae],y?(A.copy(w.normals[G]).multiplyScalar(Z.x),E.copy(w.binormals[G]).multiplyScalar(Z.y),L.copy(M[G]).add(A).add(E),N(L.x,L.y,L.z)):N(Z.x,Z.y,d/f*G);for(q=v-1;q>=0;q--){for(Se=q/v,_e=m*Math.cos(Se*Math.PI/2),he=x*Math.sin(Se*Math.PI/2)+g,ae=0,ee=K.length;ae<ee;ae++)Z=X(K[ae],Ae[ae],he),N(Z.x,Z.y,d+_e);for(R=0,D=U.length;R<D;R++)for(S=U[R],Ce=De[R],ae=0,ee=S.length;ae<ee;ae++)Z=X(S[ae],Ce[ae],he),y?N(Z.x,Z.y+M[f-1].y,M[f-1].x+_e):N(Z.x,Z.y,d+_e)}ye(),de();function ye(){var J=i.length/3;if(p){var xe=0,V=ie*xe;for(ae=0;ae<Ee;ae++)Le=Y[ae],P(Le[2]+V,Le[1]+V,Le[0]+V);for(xe=f+v*2,V=ie*xe,ae=0;ae<Ee;ae++)Le=Y[ae],P(Le[0]+V,Le[1]+V,Le[2]+V)}else{for(ae=0;ae<Ee;ae++)Le=Y[ae],P(Le[2],Le[1],Le[0]);for(ae=0;ae<Ee;ae++)Le=Y[ae],P(Le[0]+ie*f,Le[1]+ie*f,Le[2]+ie*f)}n.addGroup(J,i.length/3-J,0)}function de(){var J=i.length/3,xe=0;for(He(K,xe),xe+=K.length,R=0,D=U.length;R<D;R++)S=U[R],He(S,xe),xe+=S.length;n.addGroup(J,i.length/3-J,1)}function He(J,xe){var V,B;for(ae=J.length;--ae>=0;){V=ae,B=ae-1,B<0&&(B=J.length-1);var Q=0,ue=f+v*2;for(Q=0;Q<ue;Q++){var W=ie*Q,ce=ie*(Q+1),be=xe+V+W,Ie=xe+B+W,se=xe+B+ce,Be=xe+V+ce;te(be,Ie,se,Be)}}}function N(J,xe,V){h.push(J),h.push(xe),h.push(V)}function P(J,xe,V){fe(J),fe(xe),fe(V);var B=i.length/3,Q=_.generateTopUV(n,i,B-3,B-2,B-1);me(Q[0]),me(Q[1]),me(Q[2])}function te(J,xe,V,B){fe(J),fe(xe),fe(B),fe(xe),fe(V),fe(B);var Q=i.length/3,ue=_.generateSideWallUV(n,i,Q-6,Q-3,Q-2,Q-1);me(ue[0]),me(ue[1]),me(ue[3]),me(ue[1]),me(ue[2]),me(ue[3])}function fe(J){i.push(h[J*3+0]),i.push(h[J*3+1]),i.push(h[J*3+2])}function me(J){r.push(J.x),r.push(J.y)}}}Ui.prototype=Object.create(ke.prototype);Ui.prototype.constructor=Ui;Ui.prototype.toJSON=function(){var t=ke.prototype.toJSON.call(this),e=this.parameters.shapes,n=this.parameters.options;return ow(e,n,t)};var tI={generateTopUV:function(t,e,n,i,r){var a=e[n*3],s=e[n*3+1],o=e[i*3],l=e[i*3+1],c=e[r*3],h=e[r*3+1];return[new Me(a,s),new Me(o,l),new Me(c,h)]},generateSideWallUV:function(t,e,n,i,r,a){var s=e[n*3],o=e[n*3+1],l=e[n*3+2],c=e[i*3],h=e[i*3+1],u=e[i*3+2],f=e[r*3],d=e[r*3+1],p=e[r*3+2],m=e[a*3],x=e[a*3+1],g=e[a*3+2];return Math.abs(o-h)<.01?[new Me(s,1-l),new Me(c,1-u),new Me(f,1-p),new Me(m,1-g)]:[new Me(o,1-l),new Me(h,1-u),new Me(d,1-p),new Me(x,1-g)]}};function ow(t,e,n){if(n.shapes=[],Array.isArray(t))for(var i=0,r=t.length;i<r;i++){var a=t[i];n.shapes.push(a.uuid)}else n.shapes.push(t.uuid);return e.extrudePath!==void 0&&(n.options.extrudePath=e.extrudePath.toJSON()),n}function th(t,e){Qe.call(this),this.type="TextGeometry",this.parameters={text:t,parameters:e},this.fromBufferGeometry(new Jo(t,e)),this.mergeVertices()}th.prototype=Object.create(Qe.prototype);th.prototype.constructor=th;function Jo(t,e){e=e||{};var n=e.font;if(!(n&&n.isFont))return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new Qe;var i=n.generateShapes(t,e.size);e.depth=e.height!==void 0?e.height:50,e.bevelThickness===void 0&&(e.bevelThickness=10),e.bevelSize===void 0&&(e.bevelSize=8),e.bevelEnabled===void 0&&(e.bevelEnabled=!1),Ui.call(this,i,e),this.type="TextBufferGeometry"}Jo.prototype=Object.create(Ui.prototype);Jo.prototype.constructor=Jo;function nh(t,e,n,i,r,a,s){Qe.call(this),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:r,thetaStart:a,thetaLength:s},this.fromBufferGeometry(new Ua(t,e,n,i,r,a,s)),this.mergeVertices()}nh.prototype=Object.create(Qe.prototype);nh.prototype.constructor=nh;function Ua(t,e,n,i,r,a,s){ke.call(this),this.type="SphereBufferGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:r,thetaStart:a,thetaLength:s},t=t||1,e=Math.max(3,Math.floor(e)||8),n=Math.max(2,Math.floor(n)||6),i=i!==void 0?i:0,r=r!==void 0?r:Math.PI*2,a=a!==void 0?a:0,s=s!==void 0?s:Math.PI;var o=Math.min(a+s,Math.PI),l,c,h=0,u=[],f=new z,d=new z,p=[],m=[],x=[],g=[];for(c=0;c<=n;c++){var v=[],b=c/n,_=0;for(c==0&&a==0?_=.5/e:c==n&&o==Math.PI&&(_=-.5/e),l=0;l<=e;l++){var M=l/e;f.x=-t*Math.cos(i+M*r)*Math.sin(a+b*s),f.y=t*Math.cos(a+b*s),f.z=t*Math.sin(i+M*r)*Math.sin(a+b*s),m.push(f.x,f.y,f.z),d.copy(f).normalize(),x.push(d.x,d.y,d.z),g.push(M+_,1-b),v.push(h++)}u.push(v)}for(c=0;c<n;c++)for(l=0;l<e;l++){var y=u[c][l+1],w=u[c][l],E=u[c+1][l],A=u[c+1][l+1];(c!==0||a>0)&&p.push(y,w,A),(c!==n-1||o<Math.PI)&&p.push(w,E,A)}this.setIndex(p),this.setAttribute("position",new ze(m,3)),this.setAttribute("normal",new ze(x,3)),this.setAttribute("uv",new ze(g,2))}Ua.prototype=Object.create(ke.prototype);Ua.prototype.constructor=Ua;function ih(t,e,n,i,r,a){Qe.call(this),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:a},this.fromBufferGeometry(new Ko(t,e,n,i,r,a)),this.mergeVertices()}ih.prototype=Object.create(Qe.prototype);ih.prototype.constructor=ih;function Ko(t,e,n,i,r,a){ke.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:a},t=t||.5,e=e||1,r=r!==void 0?r:0,a=a!==void 0?a:Math.PI*2,n=n!==void 0?Math.max(3,n):8,i=i!==void 0?Math.max(1,i):1;var s=[],o=[],l=[],c=[],h,u=t,f=(e-t)/i,d=new z,p=new Me,m,x;for(m=0;m<=i;m++){for(x=0;x<=n;x++)h=r+x/n*a,d.x=u*Math.cos(h),d.y=u*Math.sin(h),o.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/e+1)/2,p.y=(d.y/e+1)/2,c.push(p.x,p.y);u+=f}for(m=0;m<i;m++){var g=m*(n+1);for(x=0;x<n;x++){h=x+g;var v=h,b=h+n+1,_=h+n+2,M=h+1;s.push(v,b,M),s.push(b,_,M)}}this.setIndex(s),this.setAttribute("position",new ze(o,3)),this.setAttribute("normal",new ze(l,3)),this.setAttribute("uv",new ze(c,2))}Ko.prototype=Object.create(ke.prototype);Ko.prototype.constructor=Ko;function rh(t,e,n,i){Qe.call(this),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:i},this.fromBufferGeometry(new Qo(t,e,n,i)),this.mergeVertices()}rh.prototype=Object.create(Qe.prototype);rh.prototype.constructor=rh;function Qo(t,e,n,i){ke.call(this),this.type="LatheBufferGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:i},e=Math.floor(e)||12,n=n||0,i=i||Math.PI*2,i=it.clamp(i,0,Math.PI*2);var r=[],a=[],s=[],o,l=1/e,c=new z,h=new Me,u,f;for(u=0;u<=e;u++){var d=n+u*l*i,p=Math.sin(d),m=Math.cos(d);for(f=0;f<=t.length-1;f++)c.x=t[f].x*p,c.y=t[f].y,c.z=t[f].x*m,a.push(c.x,c.y,c.z),h.x=u/e,h.y=f/(t.length-1),s.push(h.x,h.y)}for(u=0;u<e;u++)for(f=0;f<t.length-1;f++){o=f+u*t.length;var x=o,g=o+t.length,v=o+t.length+1,b=o+1;r.push(x,g,b),r.push(g,v,b)}if(this.setIndex(r),this.setAttribute("position",new ze(a,3)),this.setAttribute("uv",new ze(s,2)),this.computeVertexNormals(),i===Math.PI*2){var _=this.attributes.normal.array,M=new z,y=new z,w=new z;for(o=e*t.length*3,u=0,f=0;u<t.length;u++,f+=3)M.x=_[f+0],M.y=_[f+1],M.z=_[f+2],y.x=_[o+f+0],y.y=_[o+f+1],y.z=_[o+f+2],w.addVectors(M,y).normalize(),_[f+0]=_[o+f+0]=w.x,_[f+1]=_[o+f+1]=w.y,_[f+2]=_[o+f+2]=w.z}}Qo.prototype=Object.create(ke.prototype);Qo.prototype.constructor=Qo;function Ga(t,e){Qe.call(this),this.type="ShapeGeometry",typeof e=="object"&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),e=e.curveSegments),this.parameters={shapes:t,curveSegments:e},this.fromBufferGeometry(new Ha(t,e)),this.mergeVertices()}Ga.prototype=Object.create(Qe.prototype);Ga.prototype.constructor=Ga;Ga.prototype.toJSON=function(){var t=Qe.prototype.toJSON.call(this),e=this.parameters.shapes;return lw(e,t)};function Ha(t,e){ke.call(this),this.type="ShapeBufferGeometry",this.parameters={shapes:t,curveSegments:e},e=e||12;var n=[],i=[],r=[],a=[],s=0,o=0;if(Array.isArray(t)===!1)c(t);else for(var l=0;l<t.length;l++)c(t[l]),this.addGroup(s,o,l),s+=o,o=0;this.setIndex(n),this.setAttribute("position",new ze(i,3)),this.setAttribute("normal",new ze(r,3)),this.setAttribute("uv",new ze(a,2));function c(h){var u,f,d,p=i.length/3,m=h.extractPoints(e),x=m.shape,g=m.holes;for(gr.isClockWise(x)===!1&&(x=x.reverse()),u=0,f=g.length;u<f;u++)d=g[u],gr.isClockWise(d)===!0&&(g[u]=d.reverse());var v=gr.triangulateShape(x,g);for(u=0,f=g.length;u<f;u++)d=g[u],x=x.concat(d);for(u=0,f=x.length;u<f;u++){var b=x[u];i.push(b.x,b.y,0),r.push(0,0,1),a.push(b.x,b.y)}for(u=0,f=v.length;u<f;u++){var _=v[u],M=_[0]+p,y=_[1]+p,w=_[2]+p;n.push(M,y,w),o+=3}}}Ha.prototype=Object.create(ke.prototype);Ha.prototype.constructor=Ha;Ha.prototype.toJSON=function(){var t=ke.prototype.toJSON.call(this),e=this.parameters.shapes;return lw(e,t)};function lw(t,e){if(e.shapes=[],Array.isArray(t))for(var n=0,i=t.length;n<i;n++){var r=t[n];e.shapes.push(r.uuid)}else e.shapes.push(t.uuid);return e}function el(t,e){ke.call(this),this.type="EdgesGeometry",this.parameters={thresholdAngle:e},e=e!==void 0?e:1;var n=[],i=Math.cos(it.DEG2RAD*e),r=[0,0],a={},s,o,l,c=["a","b","c"],h;t.isBufferGeometry?(h=new Qe,h.fromBufferGeometry(t)):h=t.clone(),h.mergeVertices(),h.computeFaceNormals();for(var u=h.vertices,f=h.faces,d=0,p=f.length;d<p;d++)for(var m=f[d],x=0;x<3;x++)s=m[c[x]],o=m[c[(x+1)%3]],r[0]=Math.min(s,o),r[1]=Math.max(s,o),l=r[0]+","+r[1],a[l]===void 0?a[l]={index1:r[0],index2:r[1],face1:d,face2:void 0}:a[l].face2=d;for(l in a){var g=a[l];if(g.face2===void 0||f[g.face1].normal.dot(f[g.face2].normal)<=i){var v=u[g.index1];n.push(v.x,v.y,v.z),v=u[g.index2],n.push(v.x,v.y,v.z)}}this.setAttribute("position",new ze(n,3))}el.prototype=Object.create(ke.prototype);el.prototype.constructor=el;function Va(t,e,n,i,r,a,s,o){Qe.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:r,openEnded:a,thetaStart:s,thetaLength:o},this.fromBufferGeometry(new vr(t,e,n,i,r,a,s,o)),this.mergeVertices()}Va.prototype=Object.create(Qe.prototype);Va.prototype.constructor=Va;function vr(t,e,n,i,r,a,s,o){ke.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:r,openEnded:a,thetaStart:s,thetaLength:o};var l=this;t=t!==void 0?t:1,e=e!==void 0?e:1,n=n||1,i=Math.floor(i)||8,r=Math.floor(r)||1,a=a!==void 0?a:!1,s=s!==void 0?s:0,o=o!==void 0?o:Math.PI*2;var c=[],h=[],u=[],f=[],d=0,p=[],m=n/2,x=0;g(),a===!1&&(t>0&&v(!0),e>0&&v(!1)),this.setIndex(c),this.setAttribute("position",new ze(h,3)),this.setAttribute("normal",new ze(u,3)),this.setAttribute("uv",new ze(f,2));function g(){var b,_,M=new z,y=new z,w=0,E=(e-t)/n;for(_=0;_<=r;_++){var A=[],L=_/r,S=L*(e-t)+t;for(b=0;b<=i;b++){var R=b/i,D=R*o+s,I=Math.sin(D),F=Math.cos(D);y.x=S*I,y.y=-L*n+m,y.z=S*F,h.push(y.x,y.y,y.z),M.set(I,E,F).normalize(),u.push(M.x,M.y,M.z),f.push(R,1-L),A.push(d++)}p.push(A)}for(b=0;b<i;b++)for(_=0;_<r;_++){var U=p[_][b],j=p[_+1][b],Y=p[_+1][b+1],K=p[_][b+1];c.push(U,j,K),c.push(j,Y,K),w+=6}l.addGroup(x,w,0),x+=w}function v(b){var _,M,y,w=new Me,E=new z,A=0,L=b===!0?t:e,S=b===!0?1:-1;for(M=d,_=1;_<=i;_++)h.push(0,m*S,0),u.push(0,S,0),f.push(.5,.5),d++;for(y=d,_=0;_<=i;_++){var R=_/i,D=R*o+s,I=Math.cos(D),F=Math.sin(D);E.x=L*F,E.y=m*S,E.z=L*I,h.push(E.x,E.y,E.z),u.push(0,S,0),w.x=I*.5+.5,w.y=F*.5*S+.5,f.push(w.x,w.y),d++}for(_=0;_<i;_++){var U=M+_,j=y+_;b===!0?c.push(j,j+1,U):c.push(j+1,j,U),A+=3}l.addGroup(x,A,b===!0?1:2),x+=A}}vr.prototype=Object.create(ke.prototype);vr.prototype.constructor=vr;function ah(t,e,n,i,r,a,s){Va.call(this,0,t,e,n,i,r,a,s),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:a,thetaLength:s}}ah.prototype=Object.create(Va.prototype);ah.prototype.constructor=ah;function sh(t,e,n,i,r,a,s){vr.call(this,0,t,e,n,i,r,a,s),this.type="ConeBufferGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:a,thetaLength:s}}sh.prototype=Object.create(vr.prototype);sh.prototype.constructor=sh;function oh(t,e,n,i){Qe.call(this),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},this.fromBufferGeometry(new tl(t,e,n,i)),this.mergeVertices()}oh.prototype=Object.create(Qe.prototype);oh.prototype.constructor=oh;function tl(t,e,n,i){ke.call(this),this.type="CircleBufferGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},t=t||1,e=e!==void 0?Math.max(3,e):8,n=n!==void 0?n:0,i=i!==void 0?i:Math.PI*2;var r=[],a=[],s=[],o=[],l,c,h=new z,u=new Me;for(a.push(0,0,0),s.push(0,0,1),o.push(.5,.5),c=0,l=3;c<=e;c++,l+=3){var f=n+c/e*i;h.x=t*Math.cos(f),h.y=t*Math.sin(f),a.push(h.x,h.y,h.z),s.push(0,0,1),u.x=(a[l]/t+1)/2,u.y=(a[l+1]/t+1)/2,o.push(u.x,u.y)}for(l=1;l<=e;l++)r.push(l,l+1,0);this.setIndex(r),this.setAttribute("position",new ze(a,3)),this.setAttribute("normal",new ze(s,3)),this.setAttribute("uv",new ze(o,2))}tl.prototype=Object.create(ke.prototype);tl.prototype.constructor=tl;var In=Object.freeze({__proto__:null,WireframeGeometry:ko,ParametricGeometry:Vc,ParametricBufferGeometry:Wo,TetrahedronGeometry:Wc,TetrahedronBufferGeometry:$o,OctahedronGeometry:$c,OctahedronBufferGeometry:Ba,IcosahedronGeometry:jc,IcosahedronBufferGeometry:jo,DodecahedronGeometry:Xc,DodecahedronBufferGeometry:Xo,PolyhedronGeometry:kc,PolyhedronBufferGeometry:Nn,TubeGeometry:qc,TubeBufferGeometry:Oa,TorusKnotGeometry:Yc,TorusKnotBufferGeometry:qo,TorusGeometry:Zc,TorusBufferGeometry:Yo,TextGeometry:th,TextBufferGeometry:Jo,SphereGeometry:nh,SphereBufferGeometry:Ua,RingGeometry:ih,RingBufferGeometry:Ko,PlaneGeometry:Rc,PlaneBufferGeometry:Ia,LatheGeometry:rh,LatheBufferGeometry:Qo,ShapeGeometry:Ga,ShapeBufferGeometry:Ha,ExtrudeGeometry:za,ExtrudeBufferGeometry:Ui,EdgesGeometry:el,ConeGeometry:ah,ConeBufferGeometry:sh,CylinderGeometry:Va,CylinderBufferGeometry:vr,CircleGeometry:oh,CircleBufferGeometry:tl,BoxGeometry:Qm,BoxBufferGeometry:Cc});function ka(t){Je.call(this),this.type="ShadowMaterial",this.color=new Ve(0),this.transparent=!0,this.setValues(t)}ka.prototype=Object.create(Je.prototype);ka.prototype.constructor=ka;ka.prototype.isShadowMaterial=!0;ka.prototype.copy=function(t){return Je.prototype.copy.call(this,t),this.color.copy(t.color),this};function yr(t){Dn.call(this,t),this.type="RawShaderMaterial"}yr.prototype=Object.create(Dn.prototype);yr.prototype.constructor=yr;yr.prototype.isRawShaderMaterial=!0;function Gi(t){Je.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Ve(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ve(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=_a,this.normalScale=new Me(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(t)}Gi.prototype=Object.create(Je.prototype);Gi.prototype.constructor=Gi;Gi.prototype.isMeshStandardMaterial=!0;Gi.prototype.copy=function(t){return Je.prototype.copy.call(this,t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.vertexTangents=t.vertexTangents,this};function Wa(t){Gi.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Me(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,this.sheen=null,this.transparency=0,this.setValues(t)}Wa.prototype=Object.create(Gi.prototype);Wa.prototype.constructor=Wa;Wa.prototype.isMeshPhysicalMaterial=!0;Wa.prototype.copy=function(t){return Gi.prototype.copy.call(this,t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.reflectivity=t.reflectivity,t.sheen?this.sheen=(this.sheen||new Ve).copy(t.sheen):this.sheen=null,this.transparency=t.transparency,this};function ta(t){Je.call(this),this.type="MeshPhongMaterial",this.color=new Ve(16777215),this.specular=new Ve(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ve(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=_a,this.normalScale=new Me(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=rc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}ta.prototype=Object.create(Je.prototype);ta.prototype.constructor=ta;ta.prototype.isMeshPhongMaterial=!0;ta.prototype.copy=function(t){return Je.prototype.copy.call(this,t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function $a(t){Je.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Ve(16777215),this.specular=new Ve(1118481),this.shininess=30,this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ve(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=_a,this.normalScale=new Me(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}$a.prototype=Object.create(Je.prototype);$a.prototype.constructor=$a;$a.prototype.isMeshToonMaterial=!0;$a.prototype.copy=function(t){return Je.prototype.copy.call(this,t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function ja(t){Je.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=_a,this.normalScale=new Me(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}ja.prototype=Object.create(Je.prototype);ja.prototype.constructor=ja;ja.prototype.isMeshNormalMaterial=!0;ja.prototype.copy=function(t){return Je.prototype.copy.call(this,t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function Xa(t){Je.call(this),this.type="MeshLambertMaterial",this.color=new Ve(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ve(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=rc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}Xa.prototype=Object.create(Je.prototype);Xa.prototype.constructor=Xa;Xa.prototype.isMeshLambertMaterial=!0;Xa.prototype.copy=function(t){return Je.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function qa(t){Je.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Ve(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=_a,this.normalScale=new Me(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}qa.prototype=Object.create(Je.prototype);qa.prototype.constructor=qa;qa.prototype.isMeshMatcapMaterial=!0;qa.prototype.copy=function(t){return Je.prototype.copy.call(this,t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function Ya(t){Bt.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}Ya.prototype=Object.create(Bt.prototype);Ya.prototype.constructor=Ya;Ya.prototype.isLineDashedMaterial=!0;Ya.prototype.copy=function(t){return Bt.prototype.copy.call(this,t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this};var nI=Object.freeze({__proto__:null,ShadowMaterial:ka,SpriteMaterial:ea,RawShaderMaterial:yr,ShaderMaterial:Dn,PointsMaterial:yi,MeshPhysicalMaterial:Wa,MeshStandardMaterial:Gi,MeshPhongMaterial:ta,MeshToonMaterial:$a,MeshNormalMaterial:ja,MeshLambertMaterial:Xa,MeshDepthMaterial:Kr,MeshDistanceMaterial:Qr,MeshBasicMaterial:ri,MeshMatcapMaterial:qa,LineDashedMaterial:Ya,LineBasicMaterial:Bt,Material:Je}),Ut={arraySlice:function(t,e,n){return Ut.isTypedArray(t)?new t.constructor(t.subarray(e,n!==void 0?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:typeof e.BYTES_PER_ELEMENT=="number"?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){function e(a,s){return t[a]-t[s]}for(var n=t.length,i=new Array(n),r=0;r!==n;++r)i[r]=r;return i.sort(e),i},sortedArray:function(t,e,n){for(var i=t.length,r=new t.constructor(i),a=0,s=0;s!==i;++a)for(var o=n[a]*e,l=0;l!==e;++l)r[s++]=t[o+l];return r},flattenJSON:function(t,e,n,i){for(var r=1,a=t[0];a!==void 0&&a[i]===void 0;)a=t[r++];if(a!==void 0){var s=a[i];if(s!==void 0)if(Array.isArray(s))do s=a[i],s!==void 0&&(e.push(a.time),n.push.apply(n,s)),a=t[r++];while(a!==void 0);else if(s.toArray!==void 0)do s=a[i],s!==void 0&&(e.push(a.time),s.toArray(n,n.length)),a=t[r++];while(a!==void 0);else do s=a[i],s!==void 0&&(e.push(a.time),n.push(s)),a=t[r++];while(a!==void 0)}},subclip:function(t,e,n,i,r){r=r||30;var a=t.clone();a.name=e;for(var s=[],o=0;o<a.tracks.length;++o){for(var l=a.tracks[o],c=l.getValueSize(),h=[],u=[],f=0;f<l.times.length;++f){var d=l.times[f]*r;if(!(d<n||d>=i)){h.push(l.times[f]);for(var p=0;p<c;++p)u.push(l.values[f*c+p])}}h.length!==0&&(l.times=Ut.convertArray(h,l.times.constructor),l.values=Ut.convertArray(u,l.values.constructor),s.push(l))}a.tracks=s;for(var m=1/0,o=0;o<a.tracks.length;++o)m>a.tracks[o].times[0]&&(m=a.tracks[o].times[0]);for(var o=0;o<a.tracks.length;++o)a.tracks[o].shift(-1*m);return a.resetDuration(),a}};function qn(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n}Object.assign(qn.prototype,{evaluate:function(t){var e=this.parameterPositions,n=this._cachedIndex,i=e[n],r=e[n-1];e:{t:{var a;n:{i:if(!(t<i)){for(var s=n+2;;){if(i===void 0){if(t<r)break i;return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,t,r)}if(n===s)break;if(r=i,i=e[++n],t<i)break t}a=e.length;break n}if(!(t>=r)){var o=e[1];t<o&&(n=2,r=o);for(var s=n-2;;){if(r===void 0)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(n===s)break;if(i=r,r=e[--n-1],t>=r)break t}a=n,n=0;break n}break e}for(;n<a;){var l=n+a>>>1;t<e[l]?a=l:n=l+1}if(i=e[n],r=e[n-1],r===void 0)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(i===void 0)return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,r,t)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,t,i)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(t){for(var e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=t*i,a=0;a!==i;++a)e[a]=n[r+a];return e},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}});Object.assign(qn.prototype,{beforeStart_:qn.prototype.copySampleValue_,afterEnd_:qn.prototype.copySampleValue_});function Sf(t,e,n,i){qn.call(this,t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}Sf.prototype=Object.assign(Object.create(qn.prototype),{constructor:Sf,DefaultSettings_:{endingStart:ya,endingEnd:ya},intervalChanged_:function(t,e,n){var i=this.parameterPositions,r=t-2,a=t+1,s=i[r],o=i[a];if(s===void 0)switch(this.getSettings_().endingStart){case xa:r=t,s=2*e-n;break;case mc:r=i.length-2,s=e+i[r]-i[r+1];break;default:r=t,s=n}if(o===void 0)switch(this.getSettings_().endingEnd){case xa:a=t,o=2*n-e;break;case mc:a=1,o=n+i[1]-i[0];break;default:a=t-1,o=e}var l=(n-e)*.5,c=this.valueSize;this._weightPrev=l/(e-s),this._weightNext=l/(o-n),this._offsetPrev=r*c,this._offsetNext=a*c},interpolate_:function(t,e,n,i){for(var r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=t*s,l=o-s,c=this._offsetPrev,h=this._offsetNext,u=this._weightPrev,f=this._weightNext,d=(n-e)/(i-e),p=d*d,m=p*d,x=-u*m+2*u*p-u*d,g=(1+u)*m+(-1.5-2*u)*p+(-.5+u)*d+1,v=(-1-f)*m+(1.5+f)*p+.5*d,b=f*m-f*p,_=0;_!==s;++_)r[_]=x*a[c+_]+g*a[l+_]+v*a[o+_]+b*a[h+_];return r}});function lh(t,e,n,i){qn.call(this,t,e,n,i)}lh.prototype=Object.assign(Object.create(qn.prototype),{constructor:lh,interpolate_:function(t,e,n,i){for(var r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=t*s,l=o-s,c=(n-e)/(i-e),h=1-c,u=0;u!==s;++u)r[u]=a[l+u]*h+a[o+u]*c;return r}});function Ef(t,e,n,i){qn.call(this,t,e,n,i)}Ef.prototype=Object.assign(Object.create(qn.prototype),{constructor:Ef,interpolate_:function(t){return this.copySampleValue_(t-1)}});function fn(t,e,n,i){if(t===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(e===void 0||e.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=Ut.convertArray(e,this.TimeBufferType),this.values=Ut.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}Object.assign(fn,{toJSON:function(t){var e=t.constructor,n;if(e.toJSON!==void 0)n=e.toJSON(t);else{n={name:t.name,times:Ut.convertArray(t.times,Array),values:Ut.convertArray(t.values,Array)};var i=t.getInterpolation();i!==t.DefaultInterpolation&&(n.interpolation=i)}return n.type=t.ValueTypeName,n}});Object.assign(fn.prototype,{constructor:fn,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:pc,InterpolantFactoryMethodDiscrete:function(t){return new Ef(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodLinear:function(t){return new lh(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:function(t){return new Sf(this.times,this.values,this.getValueSize(),t)},setInterpolation:function(t){var e;switch(t){case dc:e=this.InterpolantFactoryMethodDiscrete;break;case pc:e=this.InterpolantFactoryMethodLinear;break;case Hu:e=this.InterpolantFactoryMethodSmooth;break}if(e===void 0){var n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(t!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=e,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return dc;case this.InterpolantFactoryMethodLinear:return pc;case this.InterpolantFactoryMethodSmooth:return Hu}},getValueSize:function(){return this.values.length/this.times.length},shift:function(t){if(t!==0)for(var e=this.times,n=0,i=e.length;n!==i;++n)e[n]+=t;return this},scale:function(t){if(t!==1)for(var e=this.times,n=0,i=e.length;n!==i;++n)e[n]*=t;return this},trim:function(t,e){for(var n=this.times,i=n.length,r=0,a=i-1;r!==i&&n[r]<t;)++r;for(;a!==-1&&n[a]>e;)--a;if(++a,r!==0||a!==i){r>=a&&(a=Math.max(a,1),r=a-1);var s=this.getValueSize();this.times=Ut.arraySlice(n,r,a),this.values=Ut.arraySlice(this.values,r*s,a*s)}return this},validate:function(){var t=!0,e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);var n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);for(var a=null,s=0;s!==r;s++){var o=n[s];if(typeof o=="number"&&isNaN(o)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,s,o),t=!1;break}if(a!==null&&a>o){console.error("THREE.KeyframeTrack: Out of order keys.",this,s,o,a),t=!1;break}a=o}if(i!==void 0&&Ut.isTypedArray(i))for(var s=0,l=i.length;s!==l;++s){var c=i[s];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,s,c),t=!1;break}}return t},optimize:function(){for(var t=Ut.arraySlice(this.times),e=Ut.arraySlice(this.values),n=this.getValueSize(),i=this.getInterpolation()===Hu,r=1,a=t.length-1,s=1;s<a;++s){var o=!1,l=t[s],c=t[s+1];if(l!==c&&(s!==1||l!==l[0]))if(i)o=!0;else for(var h=s*n,u=h-n,f=h+n,d=0;d!==n;++d){var p=e[h+d];if(p!==e[u+d]||p!==e[f+d]){o=!0;break}}if(o){if(s!==r){t[r]=t[s];for(var m=s*n,x=r*n,d=0;d!==n;++d)e[x+d]=e[m+d]}++r}}if(a>0){t[r]=t[a];for(var m=a*n,x=r*n,d=0;d!==n;++d)e[x+d]=e[m+d];++r}return r!==t.length?(this.times=Ut.arraySlice(t,0,r),this.values=Ut.arraySlice(e,0,r*n)):(this.times=t,this.values=e),this},clone:function(){var t=Ut.arraySlice(this.times,0),e=Ut.arraySlice(this.values,0),n=this.constructor,i=new n(this.name,t,e);return i.createInterpolant=this.createInterpolant,i}});function Tf(t,e,n){fn.call(this,t,e,n)}Tf.prototype=Object.assign(Object.create(fn.prototype),{constructor:Tf,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:dc,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function Af(t,e,n,i){fn.call(this,t,e,n,i)}Af.prototype=Object.assign(Object.create(fn.prototype),{constructor:Af,ValueTypeName:"color"});function nl(t,e,n,i){fn.call(this,t,e,n,i)}nl.prototype=Object.assign(Object.create(fn.prototype),{constructor:nl,ValueTypeName:"number"});function Lf(t,e,n,i){qn.call(this,t,e,n,i)}Lf.prototype=Object.assign(Object.create(qn.prototype),{constructor:Lf,interpolate_:function(t,e,n,i){for(var r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=t*s,l=(n-e)/(i-e),c=o+s;o!==c;o+=4)Pn.slerpFlat(r,0,a,o-s,a,o,l);return r}});function ch(t,e,n,i){fn.call(this,t,e,n,i)}ch.prototype=Object.assign(Object.create(fn.prototype),{constructor:ch,ValueTypeName:"quaternion",DefaultInterpolation:pc,InterpolantFactoryMethodLinear:function(t){return new Lf(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:void 0});function Cf(t,e,n,i){fn.call(this,t,e,n,i)}Cf.prototype=Object.assign(Object.create(fn.prototype),{constructor:Cf,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:dc,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function il(t,e,n,i){fn.call(this,t,e,n,i)}il.prototype=Object.assign(Object.create(fn.prototype),{constructor:il,ValueTypeName:"vector"});function si(t,e,n){this.name=t,this.tracks=n,this.duration=e!==void 0?e:-1,this.uuid=it.generateUUID(),this.duration<0&&this.resetDuration()}function iI(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return nl;case"vector":case"vector2":case"vector3":case"vector4":return il;case"color":return Af;case"quaternion":return ch;case"bool":case"boolean":return Tf;case"string":return Cf}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}function rI(t){if(t.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");var e=iI(t.type);if(t.times===void 0){var n=[],i=[];Ut.flattenJSON(t.keys,n,i,"value"),t.times=n,t.values=i}return e.parse!==void 0?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}Object.assign(si,{parse:function(t){for(var e=[],n=t.tracks,i=1/(t.fps||1),r=0,a=n.length;r!==a;++r)e.push(rI(n[r]).scale(i));return new si(t.name,t.duration,e)},toJSON:function(t){for(var e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid},r=0,a=n.length;r!==a;++r)e.push(fn.toJSON(n[r]));return i},CreateFromMorphTargetSequence:function(t,e,n,i){for(var r=e.length,a=[],s=0;s<r;s++){var o=[],l=[];o.push((s+r-1)%r,s,(s+1)%r),l.push(0,1,0);var c=Ut.getKeyframeOrder(o);o=Ut.sortedArray(o,1,c),l=Ut.sortedArray(l,1,c),!i&&o[0]===0&&(o.push(r),l.push(l[0])),a.push(new nl(".morphTargetInfluences["+e[s].name+"]",o,l).scale(1/n))}return new si(t,-1,a)},findByName:function(t,e){var n=t;if(!Array.isArray(t)){var i=t;n=i.geometry&&i.geometry.animations||i.animations}for(var r=0;r<n.length;r++)if(n[r].name===e)return n[r];return null},CreateClipsFromMorphTargetSequences:function(t,e,n){for(var i={},r=/^([\w-]*?)([\d]+)$/,a=0,s=t.length;a<s;a++){var o=t[a],l=o.name.match(r);if(l&&l.length>1){var c=l[1],h=i[c];h||(i[c]=h=[]),h.push(o)}}var u=[];for(var c in i)u.push(si.CreateFromMorphTargetSequence(c,i[c],e,n));return u},parseAnimation:function(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;for(var n=function(b,_,M,y,w){if(M.length!==0){var E=[],A=[];Ut.flattenJSON(M,E,A,y),E.length!==0&&w.push(new b(_,E,A))}},i=[],r=t.name||"default",a=t.length||-1,s=t.fps||30,o=t.hierarchy||[],l=0;l<o.length;l++){var c=o[l].keys;if(!(!c||c.length===0))if(c[0].morphTargets){for(var h={},u=0;u<c.length;u++)if(c[u].morphTargets)for(var f=0;f<c[u].morphTargets.length;f++)h[c[u].morphTargets[f]]=-1;for(var d in h){for(var p=[],m=[],f=0;f!==c[u].morphTargets.length;++f){var x=c[u];p.push(x.time),m.push(x.morphTarget===d?1:0)}i.push(new nl(".morphTargetInfluence["+d+"]",p,m))}a=h.length*(s||1)}else{var g=".bones["+e[l].name+"]";n(il,g+".position",c,"pos",i),n(ch,g+".quaternion",c,"rot",i),n(il,g+".scale",c,"scl",i)}}if(i.length===0)return null;var v=new si(r,a,i);return v}});Object.assign(si.prototype,{resetDuration:function(){for(var t=this.tracks,e=0,n=0,i=t.length;n!==i;++n){var r=this.tracks[n];e=Math.max(e,r.times[r.times.length-1])}return this.duration=e,this},trim:function(){for(var t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this},validate:function(){for(var t=!0,e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t},optimize:function(){for(var t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this},clone:function(){for(var t=[],e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new si(this.name,this.duration,t)}});var Za={enabled:!1,files:{},add:function(t,e){this.enabled!==!1&&(this.files[t]=e)},get:function(t){if(this.enabled!==!1)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};function hg(t,e,n){var i=this,r=!1,a=0,s=0,o=void 0,l=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(c){s++,r===!1&&i.onStart!==void 0&&i.onStart(c,a,s),r=!0},this.itemEnd=function(c){a++,i.onProgress!==void 0&&i.onProgress(c,a,s),a===s&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(c){i.onError!==void 0&&i.onError(c)},this.resolveURL=function(c){return o?o(c):c},this.setURLModifier=function(c){return o=c,this},this.addHandler=function(c,h){return l.push(c,h),this},this.removeHandler=function(c){var h=l.indexOf(c);return h!==-1&&l.splice(h,2),this},this.getHandler=function(c){for(var h=0,u=l.length;h<u;h+=2){var f=l[h],d=l[h+1];if(f.global&&(f.lastIndex=0),f.test(c))return d}return null}}var cw=new hg;function _t(t){this.manager=t!==void 0?t:cw,this.crossOrigin="anonymous",this.path="",this.resourcePath=""}Object.assign(_t.prototype,{load:function(){},parse:function(){},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this},setResourcePath:function(t){return this.resourcePath=t,this}});var xi={};function oi(t){_t.call(this,t)}oi.prototype=Object.assign(Object.create(_t.prototype),{constructor:oi,load:function(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);var r=this,a=Za.get(t);if(a!==void 0)return r.manager.itemStart(t),setTimeout(function(){e&&e(a),r.manager.itemEnd(t)},0),a;if(xi[t]!==void 0){xi[t].push({onLoad:e,onProgress:n,onError:i});return}var s=/^data:(.*?)(;base64)?,(.*)$/,o=t.match(s);if(o){var l=o[1],c=!!o[2],h=o[3];h=decodeURIComponent(h),c&&(h=atob(h));try{var u,f=(this.responseType||"").toLowerCase();switch(f){case"arraybuffer":case"blob":for(var d=new Uint8Array(h.length),p=0;p<h.length;p++)d[p]=h.charCodeAt(p);f==="blob"?u=new Blob([d.buffer],{type:l}):u=d.buffer;break;case"document":var m=new DOMParser;u=m.parseFromString(h,l);break;case"json":u=JSON.parse(h);break;default:u=h;break}setTimeout(function(){e&&e(u),r.manager.itemEnd(t)},0)}catch(v){setTimeout(function(){i&&i(v),r.manager.itemError(t),r.manager.itemEnd(t)},0)}}else{xi[t]=[],xi[t].push({onLoad:e,onProgress:n,onError:i});var x=new XMLHttpRequest;x.open("GET",t,!0),x.addEventListener("load",function(v){var b=this.response,_=xi[t];if(delete xi[t],this.status===200||this.status===0){this.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Za.add(t,b);for(var M=0,y=_.length;M<y;M++){var w=_[M];w.onLoad&&w.onLoad(b)}r.manager.itemEnd(t)}else{for(var M=0,y=_.length;M<y;M++){var w=_[M];w.onError&&w.onError(v)}r.manager.itemError(t),r.manager.itemEnd(t)}},!1),x.addEventListener("progress",function(v){for(var b=xi[t],_=0,M=b.length;_<M;_++){var y=b[_];y.onProgress&&y.onProgress(v)}},!1),x.addEventListener("error",function(v){var b=xi[t];delete xi[t];for(var _=0,M=b.length;_<M;_++){var y=b[_];y.onError&&y.onError(v)}r.manager.itemError(t),r.manager.itemEnd(t)},!1),x.addEventListener("abort",function(v){var b=xi[t];delete xi[t];for(var _=0,M=b.length;_<M;_++){var y=b[_];y.onError&&y.onError(v)}r.manager.itemError(t),r.manager.itemEnd(t)},!1),this.responseType!==void 0&&(x.responseType=this.responseType),this.withCredentials!==void 0&&(x.withCredentials=this.withCredentials),x.overrideMimeType&&x.overrideMimeType(this.mimeType!==void 0?this.mimeType:"text/plain");for(var g in this.requestHeader)x.setRequestHeader(g,this.requestHeader[g]);x.send(null)}return r.manager.itemStart(t),x},setResponseType:function(t){return this.responseType=t,this},setWithCredentials:function(t){return this.withCredentials=t,this},setMimeType:function(t){return this.mimeType=t,this},setRequestHeader:function(t){return this.requestHeader=t,this}});function ug(t){_t.call(this,t)}ug.prototype=Object.assign(Object.create(_t.prototype),{constructor:ug,load:function(t,e,n,i){var r=this,a=new oi(r.manager);a.setPath(r.path),a.load(t,function(s){e(r.parse(JSON.parse(s)))},n,i)},parse:function(t){for(var e=[],n=0;n<t.length;n++){var i=si.parse(t[n]);e.push(i)}return e}});function fg(t){_t.call(this,t)}fg.prototype=Object.assign(Object.create(_t.prototype),{constructor:fg,load:function(t,e,n,i){var r=this,a=[],s=new Vo;s.image=a;var o=new oi(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer");function l(f){o.load(t[f],function(d){var p=r.parse(d,!0);a[f]={width:p.width,height:p.height,format:p.format,mipmaps:p.mipmaps},c+=1,c===6&&(p.mipmapCount===1&&(s.minFilter=rn),s.format=p.format,s.needsUpdate=!0,e&&e(s))},n,i)}if(Array.isArray(t))for(var c=0,h=0,u=t.length;h<u;++h)l(h);else o.load(t,function(f){var d=r.parse(f,!0);if(d.isCubemap)for(var p=d.mipmaps.length/d.mipmapCount,m=0;m<p;m++){a[m]={mipmaps:[]};for(var x=0;x<d.mipmapCount;x++)a[m].mipmaps.push(d.mipmaps[m*d.mipmapCount+x]),a[m].format=d.format,a[m].width=d.width,a[m].height=d.height}else s.image.width=d.width,s.image.height=d.height,s.mipmaps=d.mipmaps;d.mipmapCount===1&&(s.minFilter=rn),s.format=d.format,s.needsUpdate=!0,e&&e(s)},n,i);return s}});function Rf(t){_t.call(this,t)}Rf.prototype=Object.assign(Object.create(_t.prototype),{constructor:Rf,load:function(t,e,n,i){var r=this,a=new Da,s=new oi(this.manager);return s.setResponseType("arraybuffer"),s.setPath(this.path),s.load(t,function(o){var l=r.parse(o);!l||(l.image!==void 0?a.image=l.image:l.data!==void 0&&(a.image.width=l.width,a.image.height=l.height,a.image.data=l.data),a.wrapS=l.wrapS!==void 0?l.wrapS:Rn,a.wrapT=l.wrapT!==void 0?l.wrapT:Rn,a.magFilter=l.magFilter!==void 0?l.magFilter:rn,a.minFilter=l.minFilter!==void 0?l.minFilter:rn,a.anisotropy=l.anisotropy!==void 0?l.anisotropy:1,l.format!==void 0&&(a.format=l.format),l.type!==void 0&&(a.type=l.type),l.mipmaps!==void 0&&(a.mipmaps=l.mipmaps,a.minFilter=lc),l.mipmapCount===1&&(a.minFilter=rn),a.needsUpdate=!0,e&&e(a,l))},n,i),a}});function rl(t){_t.call(this,t)}rl.prototype=Object.assign(Object.create(_t.prototype),{constructor:rl,load:function(t,e,n,i){this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);var r=this,a=Za.get(t);if(a!==void 0)return r.manager.itemStart(t),setTimeout(function(){e&&e(a),r.manager.itemEnd(t)},0),a;var s=document.createElementNS("http://www.w3.org/1999/xhtml","img");function o(){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1),Za.add(t,this),e&&e(this),r.manager.itemEnd(t)}function l(c){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1),i&&i(c),r.manager.itemError(t),r.manager.itemEnd(t)}return s.addEventListener("load",o,!1),s.addEventListener("error",l,!1),t.substr(0,5)!=="data:"&&this.crossOrigin!==void 0&&(s.crossOrigin=this.crossOrigin),r.manager.itemStart(t),s.src=t,s}});function Pf(t){_t.call(this,t)}Pf.prototype=Object.assign(Object.create(_t.prototype),{constructor:Pf,load:function(t,e,n,i){var r=new pr,a=new rl(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);var s=0;function o(c){a.load(t[c],function(h){r.images[c]=h,s++,s===6&&(r.needsUpdate=!0,e&&e(r))},void 0,i)}for(var l=0;l<t.length;++l)o(l);return r}});function Df(t){_t.call(this,t)}Df.prototype=Object.assign(Object.create(_t.prototype),{constructor:Df,load:function(t,e,n,i){var r=new St,a=new rl(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(t,function(s){r.image=s;var o=t.search(/\.jpe?g($|\?)/i)>0||t.search(/^data\:image\/jpeg/)===0;r.format=o?sr:ii,r.needsUpdate=!0,e!==void 0&&e(r)},n,i),r}});function Ye(){this.type="Curve",this.arcLengthDivisions=200}Object.assign(Ye.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(t,e){var n=this.getUtoTmapping(t);return this.getPoint(n,e)},getPoints:function(t){t===void 0&&(t=5);for(var e=[],n=0;n<=t;n++)e.push(this.getPoint(n/t));return e},getSpacedPoints:function(t){t===void 0&&(t=5);for(var e=[],n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e},getLength:function(){var t=this.getLengths();return t[t.length-1]},getLengths:function(t){if(t===void 0&&(t=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var e=[],n,i=this.getPoint(0),r,a=0;for(e.push(0),r=1;r<=t;r++)n=this.getPoint(r/t),a+=n.distanceTo(i),e.push(a),i=n;return this.cacheArcLengths=e,e},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(t,e){var n=this.getLengths(),i=0,r=n.length,a;e?a=e:a=t*n[r-1];for(var s=0,o=r-1,l;s<=o;)if(i=Math.floor(s+(o-s)/2),l=n[i]-a,l<0)s=i+1;else if(l>0)o=i-1;else{o=i;break}if(i=o,n[i]===a)return i/(r-1);var c=n[i],h=n[i+1],u=h-c,f=(a-c)/u,d=(i+f)/(r-1);return d},getTangent:function(t){var e=1e-4,n=t-e,i=t+e;n<0&&(n=0),i>1&&(i=1);var r=this.getPoint(n),a=this.getPoint(i),s=a.clone().sub(r);return s.normalize()},getTangentAt:function(t){var e=this.getUtoTmapping(t);return this.getTangent(e)},computeFrenetFrames:function(t,e){var n=new z,i=[],r=[],a=[],s=new z,o=new ct,l,c,h;for(l=0;l<=t;l++)c=l/t,i[l]=this.getTangentAt(c),i[l].normalize();r[0]=new z,a[0]=new z;var u=Number.MAX_VALUE,f=Math.abs(i[0].x),d=Math.abs(i[0].y),p=Math.abs(i[0].z);for(f<=u&&(u=f,n.set(1,0,0)),d<=u&&(u=d,n.set(0,1,0)),p<=u&&n.set(0,0,1),s.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],s),a[0].crossVectors(i[0],r[0]),l=1;l<=t;l++)r[l]=r[l-1].clone(),a[l]=a[l-1].clone(),s.crossVectors(i[l-1],i[l]),s.length()>Number.EPSILON&&(s.normalize(),h=Math.acos(it.clamp(i[l-1].dot(i[l]),-1,1)),r[l].applyMatrix4(o.makeRotationAxis(s,h))),a[l].crossVectors(i[l],r[l]);if(e===!0)for(h=Math.acos(it.clamp(r[0].dot(r[t]),-1,1)),h/=t,i[0].dot(s.crossVectors(r[0],r[t]))>0&&(h=-h),l=1;l<=t;l++)r[l].applyMatrix4(o.makeRotationAxis(i[l],h*l)),a[l].crossVectors(i[l],r[l]);return{tangents:i,normals:r,binormals:a}},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this},toJSON:function(){var t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t},fromJSON:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}});function Yn(t,e,n,i,r,a,s,o){Ye.call(this),this.type="EllipseCurve",this.aX=t||0,this.aY=e||0,this.xRadius=n||1,this.yRadius=i||1,this.aStartAngle=r||0,this.aEndAngle=a||2*Math.PI,this.aClockwise=s||!1,this.aRotation=o||0}Yn.prototype=Object.create(Ye.prototype);Yn.prototype.constructor=Yn;Yn.prototype.isEllipseCurve=!0;Yn.prototype.getPoint=function(t,e){for(var n=e||new Me,i=Math.PI*2,r=this.aEndAngle-this.aStartAngle,a=Math.abs(r)<Number.EPSILON;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(a?r=0:r=i),this.aClockwise===!0&&!a&&(r===i?r=-i:r=r-i);var s=this.aStartAngle+t*r,o=this.aX+this.xRadius*Math.cos(s),l=this.aY+this.yRadius*Math.sin(s);if(this.aRotation!==0){var c=Math.cos(this.aRotation),h=Math.sin(this.aRotation),u=o-this.aX,f=l-this.aY;o=u*c-f*h+this.aX,l=u*h+f*c+this.aY}return n.set(o,l)};Yn.prototype.copy=function(t){return Ye.prototype.copy.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this};Yn.prototype.toJSON=function(){var t=Ye.prototype.toJSON.call(this);return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t};Yn.prototype.fromJSON=function(t){return Ye.prototype.fromJSON.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this};function al(t,e,n,i,r,a){Yn.call(this,t,e,n,n,i,r,a),this.type="ArcCurve"}al.prototype=Object.create(Yn.prototype);al.prototype.constructor=al;al.prototype.isArcCurve=!0;function dg(){var t=0,e=0,n=0,i=0;function r(a,s,o,l){t=a,e=o,n=-3*a+3*s-2*o-l,i=2*a-2*s+o+l}return{initCatmullRom:function(a,s,o,l,c){r(s,o,c*(o-a),c*(l-s))},initNonuniformCatmullRom:function(a,s,o,l,c,h,u){var f=(s-a)/c-(o-a)/(c+h)+(o-s)/h,d=(o-s)/h-(l-s)/(h+u)+(l-o)/u;f*=h,d*=h,r(s,o,f,d)},calc:function(a){var s=a*a,o=s*a;return t+e*a+n*s+i*o}}}var If=new z,pg=new dg,mg=new dg,gg=new dg;function _n(t,e,n,i){Ye.call(this),this.type="CatmullRomCurve3",this.points=t||[],this.closed=e||!1,this.curveType=n||"centripetal",this.tension=i||.5}_n.prototype=Object.create(Ye.prototype);_n.prototype.constructor=_n;_n.prototype.isCatmullRomCurve3=!0;_n.prototype.getPoint=function(t,e){var n=e||new z,i=this.points,r=i.length,a=(r-(this.closed?0:1))*t,s=Math.floor(a),o=a-s;this.closed?s+=s>0?0:(Math.floor(Math.abs(s)/r)+1)*r:o===0&&s===r-1&&(s=r-2,o=1);var l,c,h,u;if(this.closed||s>0?l=i[(s-1)%r]:(If.subVectors(i[0],i[1]).add(i[0]),l=If),c=i[s%r],h=i[(s+1)%r],this.closed||s+2<r?u=i[(s+2)%r]:(If.subVectors(i[r-1],i[r-2]).add(i[r-1]),u=If),this.curveType==="centripetal"||this.curveType==="chordal"){var f=this.curveType==="chordal"?.5:.25,d=Math.pow(l.distanceToSquared(c),f),p=Math.pow(c.distanceToSquared(h),f),m=Math.pow(h.distanceToSquared(u),f);p<1e-4&&(p=1),d<1e-4&&(d=p),m<1e-4&&(m=p),pg.initNonuniformCatmullRom(l.x,c.x,h.x,u.x,d,p,m),mg.initNonuniformCatmullRom(l.y,c.y,h.y,u.y,d,p,m),gg.initNonuniformCatmullRom(l.z,c.z,h.z,u.z,d,p,m)}else this.curveType==="catmullrom"&&(pg.initCatmullRom(l.x,c.x,h.x,u.x,this.tension),mg.initCatmullRom(l.y,c.y,h.y,u.y,this.tension),gg.initCatmullRom(l.z,c.z,h.z,u.z,this.tension));return n.set(pg.calc(o),mg.calc(o),gg.calc(o)),n};_n.prototype.copy=function(t){Ye.prototype.copy.call(this,t),this.points=[];for(var e=0,n=t.points.length;e<n;e++){var i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this};_n.prototype.toJSON=function(){var t=Ye.prototype.toJSON.call(this);t.points=[];for(var e=0,n=this.points.length;e<n;e++){var i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t};_n.prototype.fromJSON=function(t){Ye.prototype.fromJSON.call(this,t),this.points=[];for(var e=0,n=t.points.length;e<n;e++){var i=t.points[e];this.points.push(new z().fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this};function hw(t,e,n,i,r){var a=(i-e)*.5,s=(r-n)*.5,o=t*t,l=t*o;return(2*n-2*i+a+s)*l+(-3*n+3*i-2*a-s)*o+a*t+n}function aI(t,e){var n=1-t;return n*n*e}function sI(t,e){return 2*(1-t)*t*e}function oI(t,e){return t*t*e}function hh(t,e,n,i){return aI(t,e)+sI(t,n)+oI(t,i)}function lI(t,e){var n=1-t;return n*n*n*e}function cI(t,e){var n=1-t;return 3*n*n*t*e}function hI(t,e){return 3*(1-t)*t*t*e}function uI(t,e){return t*t*t*e}function uh(t,e,n,i,r){return lI(t,e)+cI(t,n)+hI(t,i)+uI(t,r)}function _i(t,e,n,i){Ye.call(this),this.type="CubicBezierCurve",this.v0=t||new Me,this.v1=e||new Me,this.v2=n||new Me,this.v3=i||new Me}_i.prototype=Object.create(Ye.prototype);_i.prototype.constructor=_i;_i.prototype.isCubicBezierCurve=!0;_i.prototype.getPoint=function(t,e){var n=e||new Me,i=this.v0,r=this.v1,a=this.v2,s=this.v3;return n.set(uh(t,i.x,r.x,a.x,s.x),uh(t,i.y,r.y,a.y,s.y)),n};_i.prototype.copy=function(t){return Ye.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this};_i.prototype.toJSON=function(){var t=Ye.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t};_i.prototype.fromJSON=function(t){return Ye.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this};function Hi(t,e,n,i){Ye.call(this),this.type="CubicBezierCurve3",this.v0=t||new z,this.v1=e||new z,this.v2=n||new z,this.v3=i||new z}Hi.prototype=Object.create(Ye.prototype);Hi.prototype.constructor=Hi;Hi.prototype.isCubicBezierCurve3=!0;Hi.prototype.getPoint=function(t,e){var n=e||new z,i=this.v0,r=this.v1,a=this.v2,s=this.v3;return n.set(uh(t,i.x,r.x,a.x,s.x),uh(t,i.y,r.y,a.y,s.y),uh(t,i.z,r.z,a.z,s.z)),n};Hi.prototype.copy=function(t){return Ye.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this};Hi.prototype.toJSON=function(){var t=Ye.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t};Hi.prototype.fromJSON=function(t){return Ye.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this};function zn(t,e){Ye.call(this),this.type="LineCurve",this.v1=t||new Me,this.v2=e||new Me}zn.prototype=Object.create(Ye.prototype);zn.prototype.constructor=zn;zn.prototype.isLineCurve=!0;zn.prototype.getPoint=function(t,e){var n=e||new Me;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n};zn.prototype.getPointAt=function(t,e){return this.getPoint(t,e)};zn.prototype.getTangent=function(){var t=this.v2.clone().sub(this.v1);return t.normalize()};zn.prototype.copy=function(t){return Ye.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this};zn.prototype.toJSON=function(){var t=Ye.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t};zn.prototype.fromJSON=function(t){return Ye.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this};function Mi(t,e){Ye.call(this),this.type="LineCurve3",this.v1=t||new z,this.v2=e||new z}Mi.prototype=Object.create(Ye.prototype);Mi.prototype.constructor=Mi;Mi.prototype.isLineCurve3=!0;Mi.prototype.getPoint=function(t,e){var n=e||new z;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n};Mi.prototype.getPointAt=function(t,e){return this.getPoint(t,e)};Mi.prototype.copy=function(t){return Ye.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this};Mi.prototype.toJSON=function(){var t=Ye.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t};Mi.prototype.fromJSON=function(t){return Ye.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this};function wi(t,e,n){Ye.call(this),this.type="QuadraticBezierCurve",this.v0=t||new Me,this.v1=e||new Me,this.v2=n||new Me}wi.prototype=Object.create(Ye.prototype);wi.prototype.constructor=wi;wi.prototype.isQuadraticBezierCurve=!0;wi.prototype.getPoint=function(t,e){var n=e||new Me,i=this.v0,r=this.v1,a=this.v2;return n.set(hh(t,i.x,r.x,a.x),hh(t,i.y,r.y,a.y)),n};wi.prototype.copy=function(t){return Ye.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this};wi.prototype.toJSON=function(){var t=Ye.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t};wi.prototype.fromJSON=function(t){return Ye.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this};function Vi(t,e,n){Ye.call(this),this.type="QuadraticBezierCurve3",this.v0=t||new z,this.v1=e||new z,this.v2=n||new z}Vi.prototype=Object.create(Ye.prototype);Vi.prototype.constructor=Vi;Vi.prototype.isQuadraticBezierCurve3=!0;Vi.prototype.getPoint=function(t,e){var n=e||new z,i=this.v0,r=this.v1,a=this.v2;return n.set(hh(t,i.x,r.x,a.x),hh(t,i.y,r.y,a.y),hh(t,i.z,r.z,a.z)),n};Vi.prototype.copy=function(t){return Ye.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this};Vi.prototype.toJSON=function(){var t=Ye.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t};Vi.prototype.fromJSON=function(t){return Ye.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this};function bi(t){Ye.call(this),this.type="SplineCurve",this.points=t||[]}bi.prototype=Object.create(Ye.prototype);bi.prototype.constructor=bi;bi.prototype.isSplineCurve=!0;bi.prototype.getPoint=function(t,e){var n=e||new Me,i=this.points,r=(i.length-1)*t,a=Math.floor(r),s=r-a,o=i[a===0?a:a-1],l=i[a],c=i[a>i.length-2?i.length-1:a+1],h=i[a>i.length-3?i.length-1:a+2];return n.set(hw(s,o.x,l.x,c.x,h.x),hw(s,o.y,l.y,c.y,h.y)),n};bi.prototype.copy=function(t){Ye.prototype.copy.call(this,t),this.points=[];for(var e=0,n=t.points.length;e<n;e++){var i=t.points[e];this.points.push(i.clone())}return this};bi.prototype.toJSON=function(){var t=Ye.prototype.toJSON.call(this);t.points=[];for(var e=0,n=this.points.length;e<n;e++){var i=this.points[e];t.points.push(i.toArray())}return t};bi.prototype.fromJSON=function(t){Ye.prototype.fromJSON.call(this,t),this.points=[];for(var e=0,n=t.points.length;e<n;e++){var i=t.points[e];this.points.push(new Me().fromArray(i))}return this};var vg=Object.freeze({__proto__:null,ArcCurve:al,CatmullRomCurve3:_n,CubicBezierCurve:_i,CubicBezierCurve3:Hi,EllipseCurve:Yn,LineCurve:zn,LineCurve3:Mi,QuadraticBezierCurve:wi,QuadraticBezierCurve3:Vi,SplineCurve:bi});function xr(){Ye.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}xr.prototype=Object.assign(Object.create(Ye.prototype),{constructor:xr,add:function(t){this.curves.push(t)},closePath:function(){var t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new zn(e,t))},getPoint:function(t){for(var e=t*this.getLength(),n=this.getCurveLengths(),i=0;i<n.length;){if(n[i]>=e){var r=n[i]-e,a=this.curves[i],s=a.getLength(),o=s===0?0:1-r/s;return a.getPointAt(o)}i++}return null},getLength:function(){var t=this.getCurveLengths();return t[t.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var t=[],e=0,n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t},getSpacedPoints:function(t){t===void 0&&(t=40);for(var e=[],n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e},getPoints:function(t){t=t||12;for(var e=[],n,i=0,r=this.curves;i<r.length;i++)for(var a=r[i],s=a&&a.isEllipseCurve?t*2:a&&(a.isLineCurve||a.isLineCurve3)?1:a&&a.isSplineCurve?t*a.points.length:t,o=a.getPoints(s),l=0;l<o.length;l++){var c=o[l];n&&n.equals(c)||(e.push(c),n=c)}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e},copy:function(t){Ye.prototype.copy.call(this,t),this.curves=[];for(var e=0,n=t.curves.length;e<n;e++){var i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this},toJSON:function(){var t=Ye.prototype.toJSON.call(this);t.autoClose=this.autoClose,t.curves=[];for(var e=0,n=this.curves.length;e<n;e++){var i=this.curves[e];t.curves.push(i.toJSON())}return t},fromJSON:function(t){Ye.prototype.fromJSON.call(this,t),this.autoClose=t.autoClose,this.curves=[];for(var e=0,n=t.curves.length;e<n;e++){var i=t.curves[e];this.curves.push(new vg[i.type]().fromJSON(i))}return this}});function Si(t){xr.call(this),this.type="Path",this.currentPoint=new Me,t&&this.setFromPoints(t)}Si.prototype=Object.assign(Object.create(xr.prototype),{constructor:Si,setFromPoints:function(t){this.moveTo(t[0].x,t[0].y);for(var e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this},moveTo:function(t,e){return this.currentPoint.set(t,e),this},lineTo:function(t,e){var n=new zn(this.currentPoint.clone(),new Me(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this},quadraticCurveTo:function(t,e,n,i){var r=new wi(this.currentPoint.clone(),new Me(t,e),new Me(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this},bezierCurveTo:function(t,e,n,i,r,a){var s=new _i(this.currentPoint.clone(),new Me(t,e),new Me(n,i),new Me(r,a));return this.curves.push(s),this.currentPoint.set(r,a),this},splineThru:function(t){var e=[this.currentPoint.clone()].concat(t),n=new bi(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this},arc:function(t,e,n,i,r,a){var s=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(t+s,e+o,n,i,r,a),this},absarc:function(t,e,n,i,r,a){return this.absellipse(t,e,n,n,i,r,a),this},ellipse:function(t,e,n,i,r,a,s,o){var l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(t+l,e+c,n,i,r,a,s,o),this},absellipse:function(t,e,n,i,r,a,s,o){var l=new Yn(t,e,n,i,r,a,s,o);if(this.curves.length>0){var c=l.getPoint(0);c.equals(this.currentPoint)||this.lineTo(c.x,c.y)}this.curves.push(l);var h=l.getPoint(1);return this.currentPoint.copy(h),this},copy:function(t){return xr.prototype.copy.call(this,t),this.currentPoint.copy(t.currentPoint),this},toJSON:function(){var t=xr.prototype.toJSON.call(this);return t.currentPoint=this.currentPoint.toArray(),t},fromJSON:function(t){return xr.prototype.fromJSON.call(this,t),this.currentPoint.fromArray(t.currentPoint),this}});function na(t){Si.call(this,t),this.uuid=it.generateUUID(),this.type="Shape",this.holes=[]}na.prototype=Object.assign(Object.create(Si.prototype),{constructor:na,getPointsHoles:function(t){for(var e=[],n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e},extractPoints:function(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}},copy:function(t){Si.prototype.copy.call(this,t),this.holes=[];for(var e=0,n=t.holes.length;e<n;e++){var i=t.holes[e];this.holes.push(i.clone())}return this},toJSON:function(){var t=Si.prototype.toJSON.call(this);t.uuid=this.uuid,t.holes=[];for(var e=0,n=this.holes.length;e<n;e++){var i=this.holes[e];t.holes.push(i.toJSON())}return t},fromJSON:function(t){Si.prototype.fromJSON.call(this,t),this.uuid=t.uuid,this.holes=[];for(var e=0,n=t.holes.length;e<n;e++){var i=t.holes[e];this.holes.push(new Si().fromJSON(i))}return this}});function Rt(t,e){Ge.call(this),this.type="Light",this.color=new Ve(t),this.intensity=e!==void 0?e:1,this.receiveShadow=void 0}Rt.prototype=Object.assign(Object.create(Ge.prototype),{constructor:Rt,isLight:!0,copy:function(t){return Ge.prototype.copy.call(this,t),this.color.copy(t.color),this.intensity=t.intensity,this},toJSON:function(t){var e=Ge.prototype.toJSON.call(this,t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),e}});function Ff(t,e,n){Rt.call(this,t,n),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy(Ge.DefaultUp),this.updateMatrix(),this.groundColor=new Ve(e)}Ff.prototype=Object.assign(Object.create(Rt.prototype),{constructor:Ff,isHemisphereLight:!0,copy:function(t){return Rt.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}});function ki(t){this.camera=t,this.bias=0,this.radius=1,this.mapSize=new Me(512,512),this.map=null,this.mapPass=null,this.matrix=new ct,this._frustum=new Po,this._frameExtents=new Me(1,1),this._viewportCount=1,this._viewports=[new Et(0,0,1,1)]}Object.assign(ki.prototype,{_projScreenMatrix:new ct,_lightPositionWorld:new z,_lookTarget:new z,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(t){var e=this.camera,n=this.matrix,i=this._projScreenMatrix,r=this._lookTarget,a=this._lightPositionWorld;a.setFromMatrixPosition(t.matrixWorld),e.position.copy(a),r.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(r),e.updateMatrixWorld(),i.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(i),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(e.projectionMatrix),n.multiply(e.matrixWorldInverse)},getViewport:function(t){return this._viewports[t]},getFrameExtents:function(){return this._frameExtents},copy:function(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){var t={};return this.bias!==0&&(t.bias=this.bias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}});function Bf(){ki.call(this,new Jt(50,1,.5,500))}Bf.prototype=Object.assign(Object.create(ki.prototype),{constructor:Bf,isSpotLightShadow:!0,updateMatrices:function(t){var e=this.camera,n=it.RAD2DEG*2*t.angle,i=this.mapSize.width/this.mapSize.height,r=t.distance||e.far;(n!==e.fov||i!==e.aspect||r!==e.far)&&(e.fov=n,e.aspect=i,e.far=r,e.updateProjectionMatrix()),ki.prototype.updateMatrices.call(this,t)}});function Of(t,e,n,i,r,a){Rt.call(this,t,e),this.type="SpotLight",this.position.copy(Ge.DefaultUp),this.updateMatrix(),this.target=new Ge,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(s){this.intensity=s/Math.PI}}),this.distance=n!==void 0?n:0,this.angle=i!==void 0?i:Math.PI/3,this.penumbra=r!==void 0?r:0,this.decay=a!==void 0?a:1,this.shadow=new Bf}Of.prototype=Object.assign(Object.create(Rt.prototype),{constructor:Of,isSpotLight:!0,copy:function(t){return Rt.prototype.copy.call(this,t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}});function yg(){ki.call(this,new Jt(90,1,.5,500)),this._frameExtents=new Me(4,2),this._viewportCount=6,this._viewports=[new Et(2,1,1,1),new Et(0,1,1,1),new Et(3,1,1,1),new Et(1,1,1,1),new Et(3,0,1,1),new Et(1,0,1,1)],this._cubeDirections=[new z(1,0,0),new z(-1,0,0),new z(0,0,1),new z(0,0,-1),new z(0,1,0),new z(0,-1,0)],this._cubeUps=[new z(0,1,0),new z(0,1,0),new z(0,1,0),new z(0,1,0),new z(0,0,1),new z(0,0,-1)]}yg.prototype=Object.assign(Object.create(ki.prototype),{constructor:yg,isPointLightShadow:!0,updateMatrices:function(t,e){e===void 0&&(e=0);var n=this.camera,i=this.matrix,r=this._lightPositionWorld,a=this._lookTarget,s=this._projScreenMatrix;r.setFromMatrixPosition(t.matrixWorld),n.position.copy(r),a.copy(n.position),a.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(a),n.updateMatrixWorld(),i.makeTranslation(-r.x,-r.y,-r.z),s.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(s)}});function Nf(t,e,n,i){Rt.call(this,t,e),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return this.intensity*4*Math.PI},set:function(r){this.intensity=r/(4*Math.PI)}}),this.distance=n!==void 0?n:0,this.decay=i!==void 0?i:1,this.shadow=new yg}Nf.prototype=Object.assign(Object.create(Rt.prototype),{constructor:Nf,isPointLight:!0,copy:function(t){return Rt.prototype.copy.call(this,t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}});function sl(t,e,n,i,r,a){Ni.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t!==void 0?t:-1,this.right=e!==void 0?e:1,this.top=n!==void 0?n:1,this.bottom=i!==void 0?i:-1,this.near=r!==void 0?r:.1,this.far=a!==void 0?a:2e3,this.updateProjectionMatrix()}sl.prototype=Object.assign(Object.create(Ni.prototype),{constructor:sl,isOrthographicCamera:!0,copy:function(t,e){return Ni.prototype.copy.call(this,t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this},setViewOffset:function(t,e,n,i,r,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2,r=n-t,a=n+t,s=i+e,o=i-e;if(this.view!==null&&this.view.enabled){var l=(this.right-this.left)/this.view.fullWidth/this.zoom,c=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=l*this.view.offsetX,a=r+l*this.view.width,s-=c*this.view.offsetY,o=s-c*this.view.height}this.projectionMatrix.makeOrthographic(r,a,s,o,this.near,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(t){var e=Ge.prototype.toJSON.call(this,t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}});function zf(){ki.call(this,new sl(-5,5,5,-5,.5,500))}zf.prototype=Object.assign(Object.create(ki.prototype),{constructor:zf,isDirectionalLightShadow:!0,updateMatrices:function(t){ki.prototype.updateMatrices.call(this,t)}});function Uf(t,e){Rt.call(this,t,e),this.type="DirectionalLight",this.position.copy(Ge.DefaultUp),this.updateMatrix(),this.target=new Ge,this.shadow=new zf}Uf.prototype=Object.assign(Object.create(Rt.prototype),{constructor:Uf,isDirectionalLight:!0,copy:function(t){return Rt.prototype.copy.call(this,t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}});function Gf(t,e){Rt.call(this,t,e),this.type="AmbientLight",this.castShadow=void 0}Gf.prototype=Object.assign(Object.create(Rt.prototype),{constructor:Gf,isAmbientLight:!0});function Hf(t,e,n,i){Rt.call(this,t,e),this.type="RectAreaLight",this.width=n!==void 0?n:10,this.height=i!==void 0?i:10}Hf.prototype=Object.assign(Object.create(Rt.prototype),{constructor:Hf,isRectAreaLight:!0,copy:function(t){return Rt.prototype.copy.call(this,t),this.width=t.width,this.height=t.height,this},toJSON:function(t){var e=Rt.prototype.toJSON.call(this,t);return e.object.width=this.width,e.object.height=this.height,e}});function Vf(t){_t.call(this,t),this.textures={}}Vf.prototype=Object.assign(Object.create(_t.prototype),{constructor:Vf,load:function(t,e,n,i){var r=this,a=new oi(r.manager);a.setPath(r.path),a.load(t,function(s){e(r.parse(JSON.parse(s)))},n,i)},parse:function(t){var e=this.textures;function n(l){return e[l]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",l),e[l]}var i=new nI[t.type];if(t.uuid!==void 0&&(i.uuid=t.uuid),t.name!==void 0&&(i.name=t.name),t.color!==void 0&&i.color.setHex(t.color),t.roughness!==void 0&&(i.roughness=t.roughness),t.metalness!==void 0&&(i.metalness=t.metalness),t.sheen!==void 0&&(i.sheen=new Ve().setHex(t.sheen)),t.emissive!==void 0&&i.emissive.setHex(t.emissive),t.specular!==void 0&&i.specular.setHex(t.specular),t.shininess!==void 0&&(i.shininess=t.shininess),t.clearcoat!==void 0&&(i.clearcoat=t.clearcoat),t.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=t.clearcoatRoughness),t.fog!==void 0&&(i.fog=t.fog),t.flatShading!==void 0&&(i.flatShading=t.flatShading),t.blending!==void 0&&(i.blending=t.blending),t.combine!==void 0&&(i.combine=t.combine),t.side!==void 0&&(i.side=t.side),t.opacity!==void 0&&(i.opacity=t.opacity),t.transparent!==void 0&&(i.transparent=t.transparent),t.alphaTest!==void 0&&(i.alphaTest=t.alphaTest),t.depthTest!==void 0&&(i.depthTest=t.depthTest),t.depthWrite!==void 0&&(i.depthWrite=t.depthWrite),t.colorWrite!==void 0&&(i.colorWrite=t.colorWrite),t.stencilWrite!==void 0&&(i.stencilWrite=t.stencilWrite),t.stencilWriteMask!==void 0&&(i.stencilWriteMask=t.stencilWriteMask),t.stencilFunc!==void 0&&(i.stencilFunc=t.stencilFunc),t.stencilRef!==void 0&&(i.stencilRef=t.stencilRef),t.stencilFuncMask!==void 0&&(i.stencilFuncMask=t.stencilFuncMask),t.stencilFail!==void 0&&(i.stencilFail=t.stencilFail),t.stencilZFail!==void 0&&(i.stencilZFail=t.stencilZFail),t.stencilZPass!==void 0&&(i.stencilZPass=t.stencilZPass),t.wireframe!==void 0&&(i.wireframe=t.wireframe),t.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=t.wireframeLinewidth),t.wireframeLinecap!==void 0&&(i.wireframeLinecap=t.wireframeLinecap),t.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=t.wireframeLinejoin),t.rotation!==void 0&&(i.rotation=t.rotation),t.linewidth!==1&&(i.linewidth=t.linewidth),t.dashSize!==void 0&&(i.dashSize=t.dashSize),t.gapSize!==void 0&&(i.gapSize=t.gapSize),t.scale!==void 0&&(i.scale=t.scale),t.polygonOffset!==void 0&&(i.polygonOffset=t.polygonOffset),t.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=t.polygonOffsetFactor),t.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=t.polygonOffsetUnits),t.skinning!==void 0&&(i.skinning=t.skinning),t.morphTargets!==void 0&&(i.morphTargets=t.morphTargets),t.morphNormals!==void 0&&(i.morphNormals=t.morphNormals),t.dithering!==void 0&&(i.dithering=t.dithering),t.vertexTangents!==void 0&&(i.vertexTangents=t.vertexTangents),t.visible!==void 0&&(i.visible=t.visible),t.toneMapped!==void 0&&(i.toneMapped=t.toneMapped),t.userData!==void 0&&(i.userData=t.userData),t.vertexColors!==void 0&&(typeof t.vertexColors=="number"?i.vertexColors=t.vertexColors>0:i.vertexColors=t.vertexColors),t.uniforms!==void 0)for(var r in t.uniforms){var a=t.uniforms[r];switch(i.uniforms[r]={},a.type){case"t":i.uniforms[r].value=n(a.value);break;case"c":i.uniforms[r].value=new Ve().setHex(a.value);break;case"v2":i.uniforms[r].value=new Me().fromArray(a.value);break;case"v3":i.uniforms[r].value=new z().fromArray(a.value);break;case"v4":i.uniforms[r].value=new Et().fromArray(a.value);break;case"m3":i.uniforms[r].value=new yn().fromArray(a.value);case"m4":i.uniforms[r].value=new ct().fromArray(a.value);break;default:i.uniforms[r].value=a.value}}if(t.defines!==void 0&&(i.defines=t.defines),t.vertexShader!==void 0&&(i.vertexShader=t.vertexShader),t.fragmentShader!==void 0&&(i.fragmentShader=t.fragmentShader),t.extensions!==void 0)for(var s in t.extensions)i.extensions[s]=t.extensions[s];if(t.shading!==void 0&&(i.flatShading=t.shading===1),t.size!==void 0&&(i.size=t.size),t.sizeAttenuation!==void 0&&(i.sizeAttenuation=t.sizeAttenuation),t.map!==void 0&&(i.map=n(t.map)),t.matcap!==void 0&&(i.matcap=n(t.matcap)),t.alphaMap!==void 0&&(i.alphaMap=n(t.alphaMap)),t.bumpMap!==void 0&&(i.bumpMap=n(t.bumpMap)),t.bumpScale!==void 0&&(i.bumpScale=t.bumpScale),t.normalMap!==void 0&&(i.normalMap=n(t.normalMap)),t.normalMapType!==void 0&&(i.normalMapType=t.normalMapType),t.normalScale!==void 0){var o=t.normalScale;Array.isArray(o)===!1&&(o=[o,o]),i.normalScale=new Me().fromArray(o)}return t.displacementMap!==void 0&&(i.displacementMap=n(t.displacementMap)),t.displacementScale!==void 0&&(i.displacementScale=t.displacementScale),t.displacementBias!==void 0&&(i.displacementBias=t.displacementBias),t.roughnessMap!==void 0&&(i.roughnessMap=n(t.roughnessMap)),t.metalnessMap!==void 0&&(i.metalnessMap=n(t.metalnessMap)),t.emissiveMap!==void 0&&(i.emissiveMap=n(t.emissiveMap)),t.emissiveIntensity!==void 0&&(i.emissiveIntensity=t.emissiveIntensity),t.specularMap!==void 0&&(i.specularMap=n(t.specularMap)),t.envMap!==void 0&&(i.envMap=n(t.envMap)),t.envMapIntensity!==void 0&&(i.envMapIntensity=t.envMapIntensity),t.reflectivity!==void 0&&(i.reflectivity=t.reflectivity),t.refractionRatio!==void 0&&(i.refractionRatio=t.refractionRatio),t.lightMap!==void 0&&(i.lightMap=n(t.lightMap)),t.lightMapIntensity!==void 0&&(i.lightMapIntensity=t.lightMapIntensity),t.aoMap!==void 0&&(i.aoMap=n(t.aoMap)),t.aoMapIntensity!==void 0&&(i.aoMapIntensity=t.aoMapIntensity),t.gradientMap!==void 0&&(i.gradientMap=n(t.gradientMap)),t.clearcoatMap!==void 0&&(i.clearcoatMap=n(t.clearcoatMap)),t.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),t.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(t.clearcoatNormalMap)),t.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new Me().fromArray(t.clearcoatNormalScale)),i},setTextures:function(t){return this.textures=t,this}});var xg={decodeText:function(t){if(typeof TextDecoder!="undefined")return new TextDecoder().decode(t);for(var e="",n=0,i=t.length;n<i;n++)e+=String.fromCharCode(t[n]);try{return decodeURIComponent(escape(e))}catch{return e}},extractUrlBase:function(t){var e=t.lastIndexOf("/");return e===-1?"./":t.substr(0,e+1)}};function kf(){ke.call(this),this.type="InstancedBufferGeometry",this.maxInstancedCount=void 0}kf.prototype=Object.assign(Object.create(ke.prototype),{constructor:kf,isInstancedBufferGeometry:!0,copy:function(t){return ke.prototype.copy.call(this,t),this.maxInstancedCount=t.maxInstancedCount,this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){var t=ke.prototype.toJSON.call(this);return t.maxInstancedCount=this.maxInstancedCount,t.isInstancedBufferGeometry=!0,t}});function Wf(t,e,n,i){typeof n=="number"&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),Ke.call(this,t,e,n),this.meshPerAttribute=i||1}Wf.prototype=Object.assign(Object.create(Ke.prototype),{constructor:Wf,isInstancedBufferAttribute:!0,copy:function(t){return Ke.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},toJSON:function(){var t=Ke.prototype.toJSON.call(this);return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}});function $f(t){_t.call(this,t)}$f.prototype=Object.assign(Object.create(_t.prototype),{constructor:$f,load:function(t,e,n,i){var r=this,a=new oi(r.manager);a.setPath(r.path),a.load(t,function(s){e(r.parse(JSON.parse(s)))},n,i)},parse:function(t){var e=t.isInstancedBufferGeometry?new kf:new ke,n=t.data.index;if(n!==void 0){var i=new _g[n.type](n.array);e.setIndex(new Ke(i,1))}var r=t.data.attributes;for(var a in r){var s=r[a],i=new _g[s.type](s.array),o=s.isInstancedBufferAttribute?Wf:Ke,l=new o(i,s.itemSize,s.normalized);s.name!==void 0&&(l.name=s.name),e.setAttribute(a,l)}var c=t.data.morphAttributes;if(c)for(var a in c){for(var h=c[a],u=[],f=0,d=h.length;f<d;f++){var s=h[f],i=new _g[s.type](s.array),l=new Ke(i,s.itemSize,s.normalized);s.name!==void 0&&(l.name=s.name),u.push(l)}e.morphAttributes[a]=u}var p=t.data.morphTargetsRelative;p&&(e.morphTargetsRelative=!0);var m=t.data.groups||t.data.drawcalls||t.data.offsets;if(m!==void 0)for(var f=0,x=m.length;f!==x;++f){var g=m[f];e.addGroup(g.start,g.count,g.materialIndex)}var v=t.data.boundingSphere;if(v!==void 0){var b=new z;v.center!==void 0&&b.fromArray(v.center),e.boundingSphere=new hr(b,v.radius)}return t.name&&(e.name=t.name),t.userData&&(e.userData=t.userData),e}});var _g={Int8Array,Uint8Array,Uint8ClampedArray:typeof Uint8ClampedArray!="undefined"?Uint8ClampedArray:Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function jf(t){_t.call(this,t)}jf.prototype=Object.assign(Object.create(_t.prototype),{constructor:jf,load:function(t,e,n,i){var r=this,a=this.path===""?xg.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||a;var s=new oi(r.manager);s.setPath(this.path),s.load(t,function(o){var l=null;try{l=JSON.parse(o)}catch(h){i!==void 0&&i(h),console.error("THREE:ObjectLoader: Can't parse "+t+".",h.message);return}var c=l.metadata;if(c===void 0||c.type===void 0||c.type.toLowerCase()==="geometry"){console.error("THREE.ObjectLoader: Can't load "+t);return}r.parse(l,e)},n,i)},parse:function(t,e){var n=this.parseShape(t.shapes),i=this.parseGeometries(t.geometries,n),r=this.parseImages(t.images,function(){e!==void 0&&e(o)}),a=this.parseTextures(t.textures,r),s=this.parseMaterials(t.materials,a),o=this.parseObject(t.object,i,s);return t.animations&&(o.animations=this.parseAnimations(t.animations)),(t.images===void 0||t.images.length===0)&&e!==void 0&&e(o),o},parseShape:function(t){var e={};if(t!==void 0)for(var n=0,i=t.length;n<i;n++){var r=new na().fromJSON(t[n]);e[r.uuid]=r}return e},parseGeometries:function(t,e){var n={};if(t!==void 0)for(var i=new $f,r=0,a=t.length;r<a;r++){var s,o=t[r];switch(o.type){case"PlaneGeometry":case"PlaneBufferGeometry":s=new In[o.type](o.width,o.height,o.widthSegments,o.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":s=new In[o.type](o.width,o.height,o.depth,o.widthSegments,o.heightSegments,o.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":s=new In[o.type](o.radius,o.segments,o.thetaStart,o.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":s=new In[o.type](o.radiusTop,o.radiusBottom,o.height,o.radialSegments,o.heightSegments,o.openEnded,o.thetaStart,o.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":s=new In[o.type](o.radius,o.height,o.radialSegments,o.heightSegments,o.openEnded,o.thetaStart,o.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":s=new In[o.type](o.radius,o.widthSegments,o.heightSegments,o.phiStart,o.phiLength,o.thetaStart,o.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":s=new In[o.type](o.radius,o.detail);break;case"RingGeometry":case"RingBufferGeometry":s=new In[o.type](o.innerRadius,o.outerRadius,o.thetaSegments,o.phiSegments,o.thetaStart,o.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":s=new In[o.type](o.radius,o.tube,o.radialSegments,o.tubularSegments,o.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":s=new In[o.type](o.radius,o.tube,o.tubularSegments,o.radialSegments,o.p,o.q);break;case"TubeGeometry":case"TubeBufferGeometry":s=new In[o.type](new vg[o.path.type]().fromJSON(o.path),o.tubularSegments,o.radius,o.radialSegments,o.closed);break;case"LatheGeometry":case"LatheBufferGeometry":s=new In[o.type](o.points,o.segments,o.phiStart,o.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":s=new In[o.type](o.vertices,o.indices,o.radius,o.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":for(var l=[],c=0,h=o.shapes.length;c<h;c++){var u=e[o.shapes[c]];l.push(u)}s=new In[o.type](l,o.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":for(var l=[],c=0,h=o.shapes.length;c<h;c++){var u=e[o.shapes[c]];l.push(u)}var f=o.options.extrudePath;f!==void 0&&(o.options.extrudePath=new vg[f.type]().fromJSON(f)),s=new In[o.type](l,o.options);break;case"BufferGeometry":case"InstancedBufferGeometry":s=i.parse(o);break;case"Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+o.type+'"');continue}s.uuid=o.uuid,o.name!==void 0&&(s.name=o.name),s.isBufferGeometry===!0&&o.userData!==void 0&&(s.userData=o.userData),n[o.uuid]=s}return n},parseMaterials:function(t,e){var n={},i={};if(t!==void 0){var r=new Vf;r.setTextures(e);for(var a=0,s=t.length;a<s;a++){var o=t[a];if(o.type==="MultiMaterial"){for(var l=[],c=0;c<o.materials.length;c++){var h=o.materials[c];n[h.uuid]===void 0&&(n[h.uuid]=r.parse(h)),l.push(n[h.uuid])}i[o.uuid]=l}else n[o.uuid]===void 0&&(n[o.uuid]=r.parse(o)),i[o.uuid]=n[o.uuid]}}return i},parseAnimations:function(t){for(var e=[],n=0;n<t.length;n++){var i=t[n],r=si.parse(i);i.uuid!==void 0&&(r.uuid=i.uuid),e.push(r)}return e},parseImages:function(t,e){var n=this,i={};function r(m){return n.manager.itemStart(m),s.load(m,function(){n.manager.itemEnd(m)},void 0,function(){n.manager.itemError(m),n.manager.itemEnd(m)})}if(t!==void 0&&t.length>0){var a=new hg(e),s=new rl(a);s.setCrossOrigin(this.crossOrigin);for(var o=0,l=t.length;o<l;o++){var c=t[o],h=c.url;if(Array.isArray(h)){i[c.uuid]=[];for(var u=0,f=h.length;u<f;u++){var d=h[u],p=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(d)?d:n.resourcePath+d;i[c.uuid].push(r(p))}}else{var p=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c.url)?c.url:n.resourcePath+c.url;i[c.uuid]=r(p)}}}return i},parseTextures:function(t,e){function n(l,c){return typeof l=="number"?l:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",l),c[l])}var i={};if(t!==void 0)for(var r=0,a=t.length;r<a;r++){var s=t[r];s.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),e[s.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",s.image);var o;Array.isArray(e[s.image])?o=new pr(e[s.image]):o=new St(e[s.image]),o.needsUpdate=!0,o.uuid=s.uuid,s.name!==void 0&&(o.name=s.name),s.mapping!==void 0&&(o.mapping=n(s.mapping,fI)),s.offset!==void 0&&o.offset.fromArray(s.offset),s.repeat!==void 0&&o.repeat.fromArray(s.repeat),s.center!==void 0&&o.center.fromArray(s.center),s.rotation!==void 0&&(o.rotation=s.rotation),s.wrap!==void 0&&(o.wrapS=n(s.wrap[0],uw),o.wrapT=n(s.wrap[1],uw)),s.format!==void 0&&(o.format=s.format),s.type!==void 0&&(o.type=s.type),s.encoding!==void 0&&(o.encoding=s.encoding),s.minFilter!==void 0&&(o.minFilter=n(s.minFilter,fw)),s.magFilter!==void 0&&(o.magFilter=n(s.magFilter,fw)),s.anisotropy!==void 0&&(o.anisotropy=s.anisotropy),s.flipY!==void 0&&(o.flipY=s.flipY),s.premultiplyAlpha!==void 0&&(o.premultiplyAlpha=s.premultiplyAlpha),s.unpackAlignment!==void 0&&(o.unpackAlignment=s.unpackAlignment),i[s.uuid]=o}return i},parseObject:function(t,e,n){var i;function r(x){return e[x]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",x),e[x]}function a(x){if(x!==void 0){if(Array.isArray(x)){for(var g=[],v=0,b=x.length;v<b;v++){var _=x[v];n[_]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",_),g.push(n[_])}return g}return n[x]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",x),n[x]}}switch(t.type){case"Scene":i=new lr,t.background!==void 0&&Number.isInteger(t.background)&&(i.background=new Ve(t.background)),t.fog!==void 0&&(t.fog.type==="Fog"?i.fog=new cf(t.fog.color,t.fog.near,t.fog.far):t.fog.type==="FogExp2"&&(i.fog=new lf(t.fog.color,t.fog.density)));break;case"PerspectiveCamera":i=new Jt(t.fov,t.aspect,t.near,t.far),t.focus!==void 0&&(i.focus=t.focus),t.zoom!==void 0&&(i.zoom=t.zoom),t.filmGauge!==void 0&&(i.filmGauge=t.filmGauge),t.filmOffset!==void 0&&(i.filmOffset=t.filmOffset),t.view!==void 0&&(i.view=Object.assign({},t.view));break;case"OrthographicCamera":i=new sl(t.left,t.right,t.top,t.bottom,t.near,t.far),t.zoom!==void 0&&(i.zoom=t.zoom),t.view!==void 0&&(i.view=Object.assign({},t.view));break;case"AmbientLight":i=new Gf(t.color,t.intensity);break;case"DirectionalLight":i=new Uf(t.color,t.intensity);break;case"PointLight":i=new Nf(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":i=new Hf(t.color,t.intensity,t.width,t.height);break;case"SpotLight":i=new Of(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);break;case"HemisphereLight":i=new Ff(t.color,t.groundColor,t.intensity);break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":var s=r(t.geometry),o=a(t.material);i=new Ft(s,o);break;case"InstancedMesh":var s=r(t.geometry),o=a(t.material),l=t.count,c=t.instanceMatrix;i=new gf(s,o,l),i.instanceMatrix=new Ke(new Float32Array(c.array),16);break;case"LOD":i=new zc;break;case"Line":i=new Xn(r(t.geometry),a(t.material),t.mode);break;case"LineLoop":i=new Mf(r(t.geometry),a(t.material));break;case"LineSegments":i=new Nt(r(t.geometry),a(t.material));break;case"PointCloud":case"Points":i=new Ho(r(t.geometry),a(t.material));break;case"Sprite":i=new Nc(a(t.material));break;case"Group":i=new Bo;break;default:i=new Ge}if(i.uuid=t.uuid,t.name!==void 0&&(i.name=t.name),t.matrix!==void 0?(i.matrix.fromArray(t.matrix),t.matrixAutoUpdate!==void 0&&(i.matrixAutoUpdate=t.matrixAutoUpdate),i.matrixAutoUpdate&&i.matrix.decompose(i.position,i.quaternion,i.scale)):(t.position!==void 0&&i.position.fromArray(t.position),t.rotation!==void 0&&i.rotation.fromArray(t.rotation),t.quaternion!==void 0&&i.quaternion.fromArray(t.quaternion),t.scale!==void 0&&i.scale.fromArray(t.scale)),t.castShadow!==void 0&&(i.castShadow=t.castShadow),t.receiveShadow!==void 0&&(i.receiveShadow=t.receiveShadow),t.shadow&&(t.shadow.bias!==void 0&&(i.shadow.bias=t.shadow.bias),t.shadow.radius!==void 0&&(i.shadow.radius=t.shadow.radius),t.shadow.mapSize!==void 0&&i.shadow.mapSize.fromArray(t.shadow.mapSize),t.shadow.camera!==void 0&&(i.shadow.camera=this.parseObject(t.shadow.camera))),t.visible!==void 0&&(i.visible=t.visible),t.frustumCulled!==void 0&&(i.frustumCulled=t.frustumCulled),t.renderOrder!==void 0&&(i.renderOrder=t.renderOrder),t.userData!==void 0&&(i.userData=t.userData),t.layers!==void 0&&(i.layers.mask=t.layers),t.children!==void 0)for(var h=t.children,u=0;u<h.length;u++)i.add(this.parseObject(h[u],e,n));if(t.type==="LOD"){t.autoUpdate!==void 0&&(i.autoUpdate=t.autoUpdate);for(var f=t.levels,d=0;d<f.length;d++){var p=f[d],m=i.getObjectByProperty("uuid",p.object);m!==void 0&&i.addLevel(m,p.distance)}}return i}});var fI={UVMapping:Fu,CubeReflectionMapping:Bu,CubeRefractionMapping:Ou,EquirectangularReflectionMapping:mm,EquirectangularRefractionMapping:Nu,SphericalReflectionMapping:gm,CubeUVReflectionMapping:co,CubeUVRefractionMapping:zu},uw={RepeatWrapping:sc,ClampToEdgeWrapping:Rn,MirroredRepeatWrapping:oc},fw={NearestFilter:$t,NearestMipmapNearestFilter:Uu,NearestMipmapLinearFilter:Gu,LinearFilter:rn,LinearMipmapNearestFilter:vm,LinearMipmapLinearFilter:lc};function Mg(t){typeof createImageBitmap=="undefined"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch=="undefined"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),_t.call(this,t),this.options=void 0}Mg.prototype=Object.assign(Object.create(_t.prototype),{constructor:Mg,setOptions:function(e){return this.options=e,this},load:function(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);var r=this,a=Za.get(t);if(a!==void 0)return r.manager.itemStart(t),setTimeout(function(){e&&e(a),r.manager.itemEnd(t)},0),a;fetch(t).then(function(s){return s.blob()}).then(function(s){return r.options===void 0?createImageBitmap(s):createImageBitmap(s,r.options)}).then(function(s){Za.add(t,s),e&&e(s),r.manager.itemEnd(t)}).catch(function(s){i&&i(s),r.manager.itemError(t),r.manager.itemEnd(t)}),r.manager.itemStart(t)}});function wg(){this.type="ShapePath",this.color=new Ve,this.subPaths=[],this.currentPath=null}Object.assign(wg.prototype,{moveTo:function(t,e){return this.currentPath=new Si,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this},lineTo:function(t,e){return this.currentPath.lineTo(t,e),this},quadraticCurveTo:function(t,e,n,i){return this.currentPath.quadraticCurveTo(t,e,n,i),this},bezierCurveTo:function(t,e,n,i,r,a){return this.currentPath.bezierCurveTo(t,e,n,i,r,a),this},splineThru:function(t){return this.currentPath.splineThru(t),this},toShapes:function(t,e){function n(F){for(var U=[],j=0,Y=F.length;j<Y;j++){var K=F[j],X=new na;X.curves=K.curves,U.push(X)}return U}function i(F,U){for(var j=U.length,Y=!1,K=j-1,X=0;X<j;K=X++){var q=U[K],he=U[X],Se=he.x-q.x,_e=he.y-q.y;if(Math.abs(_e)>Number.EPSILON){if(_e<0&&(q=U[X],Se=-Se,he=U[K],_e=-_e),F.y<q.y||F.y>he.y)continue;if(F.y===q.y){if(F.x===q.x)return!0}else{var Z=_e*(F.x-q.x)-Se*(F.y-q.y);if(Z===0)return!0;if(Z<0)continue;Y=!Y}}else{if(F.y!==q.y)continue;if(he.x<=F.x&&F.x<=q.x||q.x<=F.x&&F.x<=he.x)return!0}}return Y}var r=gr.isClockWise,a=this.subPaths;if(a.length===0)return[];if(e===!0)return n(a);var s,o,l,c=[];if(a.length===1)return o=a[0],l=new na,l.curves=o.curves,c.push(l),c;var h=!r(a[0].getPoints());h=t?!h:h;var u=[],f=[],d=[],p=0,m;f[p]=void 0,d[p]=[];for(var x=0,g=a.length;x<g;x++)o=a[x],m=o.getPoints(),s=r(m),s=t?!s:s,s?(!h&&f[p]&&p++,f[p]={s:new na,p:m},f[p].s.curves=o.curves,h&&p++,d[p]=[]):d[p].push({h:o,p:m[0]});if(!f[0])return n(a);if(f.length>1){for(var v=!1,b=[],_=0,M=f.length;_<M;_++)u[_]=[];for(var _=0,M=f.length;_<M;_++)for(var y=d[_],w=0;w<y.length;w++){for(var E=y[w],A=!0,L=0;L<f.length;L++)i(E.p,f[L].p)&&(_!==L&&b.push({froms:_,tos:L,hole:w}),A?(A=!1,u[L].push(E)):v=!0);A&&u[_].push(E)}b.length>0&&(v||(d=u))}for(var S,x=0,R=f.length;x<R;x++){l=f[x].s,c.push(l),S=d[x];for(var D=0,I=S.length;D<I;D++)l.holes.push(S[D].h)}return c}});function bg(t){this.type="Font",this.data=t}Object.assign(bg.prototype,{isFont:!0,generateShapes:function(t,e){e===void 0&&(e=100);for(var n=[],i=dI(t,e,this.data),r=0,a=i.length;r<a;r++)Array.prototype.push.apply(n,i[r].toShapes());return n}});function dI(t,e,n){for(var i=Array.from?Array.from(t):String(t).split(""),r=e/n.resolution,a=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*r,s=[],o=0,l=0,c=0;c<i.length;c++){var h=i[c];if(h===`
`)o=0,l-=a;else{var u=pI(h,r,o,l,n);o+=u.offsetX,s.push(u.path)}}return s}function pI(t,e,n,i,r){var a=r.glyphs[t]||r.glyphs["?"];if(!a){console.error('THREE.Font: character "'+t+'" does not exists in font family '+r.familyName+".");return}var s=new wg,o,l,c,h,u,f,d,p;if(a.o)for(var m=a._cachedOutline||(a._cachedOutline=a.o.split(" ")),x=0,g=m.length;x<g;){var v=m[x++];switch(v){case"m":o=m[x++]*e+n,l=m[x++]*e+i,s.moveTo(o,l);break;case"l":o=m[x++]*e+n,l=m[x++]*e+i,s.lineTo(o,l);break;case"q":c=m[x++]*e+n,h=m[x++]*e+i,u=m[x++]*e+n,f=m[x++]*e+i,s.quadraticCurveTo(u,f,c,h);break;case"b":c=m[x++]*e+n,h=m[x++]*e+i,u=m[x++]*e+n,f=m[x++]*e+i,d=m[x++]*e+n,p=m[x++]*e+i,s.bezierCurveTo(u,f,d,p,c,h);break}}return{offsetX:a.ha*e,path:s}}function Sg(t){_t.call(this,t)}Sg.prototype=Object.assign(Object.create(_t.prototype),{constructor:Sg,load:function(t,e,n,i){var r=this,a=new oi(this.manager);a.setPath(this.path),a.load(t,function(s){var o;try{o=JSON.parse(s)}catch{console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),o=JSON.parse(s.substring(65,s.length-2))}var l=r.parse(o);e&&e(l)},n,i)},parse:function(t){return new bg(t)}});var Xf,Eg={getContext:function(){return Xf===void 0&&(Xf=new(window.AudioContext||window.webkitAudioContext)),Xf},setContext:function(t){Xf=t}};function qf(t){_t.call(this,t)}qf.prototype=Object.assign(Object.create(_t.prototype),{constructor:qf,load:function(t,e,n,i){var r=new oi(this.manager);r.setResponseType("arraybuffer"),r.setPath(this.path),r.load(t,function(a){var s=a.slice(0),o=Eg.getContext();o.decodeAudioData(s,function(l){e(l)})},n,i)}});function Yf(){this.coefficients=[];for(var t=0;t<9;t++)this.coefficients.push(new z)}Object.assign(Yf.prototype,{isSphericalHarmonics3:!0,set:function(t){for(var e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this},zero:function(){for(var t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this},getAt:function(t,e){var n=t.x,i=t.y,r=t.z,a=this.coefficients;return e.copy(a[0]).multiplyScalar(.282095),e.addScaledVector(a[1],.488603*i),e.addScaledVector(a[2],.488603*r),e.addScaledVector(a[3],.488603*n),e.addScaledVector(a[4],1.092548*(n*i)),e.addScaledVector(a[5],1.092548*(i*r)),e.addScaledVector(a[6],.315392*(3*r*r-1)),e.addScaledVector(a[7],1.092548*(n*r)),e.addScaledVector(a[8],.546274*(n*n-i*i)),e},getIrradianceAt:function(t,e){var n=t.x,i=t.y,r=t.z,a=this.coefficients;return e.copy(a[0]).multiplyScalar(.886227),e.addScaledVector(a[1],2*.511664*i),e.addScaledVector(a[2],2*.511664*r),e.addScaledVector(a[3],2*.511664*n),e.addScaledVector(a[4],2*.429043*n*i),e.addScaledVector(a[5],2*.429043*i*r),e.addScaledVector(a[6],.743125*r*r-.247708),e.addScaledVector(a[7],2*.429043*n*r),e.addScaledVector(a[8],.429043*(n*n-i*i)),e},add:function(t){for(var e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this},addScaledSH:function(t,e){for(var n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this},scale:function(t){for(var e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this},lerp:function(t,e){for(var n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this},equals:function(t){for(var e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0},copy:function(t){return this.set(t.coefficients)},clone:function(){return new this.constructor().copy(this)},fromArray:function(t,e){e===void 0&&(e=0);for(var n=this.coefficients,i=0;i<9;i++)n[i].fromArray(t,e+i*3);return this},toArray:function(t,e){t===void 0&&(t=[]),e===void 0&&(e=0);for(var n=this.coefficients,i=0;i<9;i++)n[i].toArray(t,e+i*3);return t}});Object.assign(Yf,{getBasisAt:function(t,e){var n=t.x,i=t.y,r=t.z;e[0]=.282095,e[1]=.488603*i,e[2]=.488603*r,e[3]=.488603*n,e[4]=1.092548*n*i,e[5]=1.092548*i*r,e[6]=.315392*(3*r*r-1),e[7]=1.092548*n*r,e[8]=.546274*(n*n-i*i)}});function Ei(t,e){Rt.call(this,void 0,e),this.sh=t!==void 0?t:new Yf}Ei.prototype=Object.assign(Object.create(Rt.prototype),{constructor:Ei,isLightProbe:!0,copy:function(t){return Rt.prototype.copy.call(this,t),this.sh.copy(t.sh),this.intensity=t.intensity,this},toJSON:function(t){var e=Rt.prototype.toJSON.call(this,t);return e}});function Tg(t,e,n){Ei.call(this,void 0,n);var i=new Ve().set(t),r=new Ve().set(e),a=new z(i.r,i.g,i.b),s=new z(r.r,r.g,r.b),o=Math.sqrt(Math.PI),l=o*Math.sqrt(.75);this.sh.coefficients[0].copy(a).add(s).multiplyScalar(o),this.sh.coefficients[1].copy(a).sub(s).multiplyScalar(l)}Tg.prototype=Object.assign(Object.create(Ei.prototype),{constructor:Tg,isHemisphereLightProbe:!0,copy:function(t){return Ei.prototype.copy.call(this,t),this},toJSON:function(t){var e=Ei.prototype.toJSON.call(this,t);return e}});function Ag(t,e){Ei.call(this,void 0,e);var n=new Ve().set(t);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}Ag.prototype=Object.assign(Object.create(Ei.prototype),{constructor:Ag,isAmbientLightProbe:!0,copy:function(t){return Ei.prototype.copy.call(this,t),this},toJSON:function(t){var e=Ei.prototype.toJSON.call(this,t);return e}});var dw=new ct,pw=new ct;function mw(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Jt,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Jt,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}Object.assign(mw.prototype,{update:function(t){var e=this._cache,n=e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep;if(n){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep;var i=t.projectionMatrix.clone(),r=e.eyeSep/2,a=r*e.near/e.focus,s=e.near*Math.tan(it.DEG2RAD*e.fov*.5)/e.zoom,o,l;pw.elements[12]=-r,dw.elements[12]=r,o=-s*e.aspect+a,l=s*e.aspect+a,i.elements[0]=2*e.near/(l-o),i.elements[8]=(l+o)/(l-o),this.cameraL.projectionMatrix.copy(i),o=-s*e.aspect-a,l=s*e.aspect-a,i.elements[0]=2*e.near/(l-o),i.elements[8]=(l+o)/(l-o),this.cameraR.projectionMatrix.copy(i)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(pw),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(dw)}});function Lg(t){this.autoStart=t!==void 0?t:!0,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}Object.assign(Lg.prototype,{start:function(){this.startTime=(typeof performance=="undefined"?Date:performance).now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var e=(typeof performance=="undefined"?Date:performance).now();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}});var Ja=new z,gw=new Pn,mI=new z,Ka=new z;function Cg(){Ge.call(this),this.type="AudioListener",this.context=Eg.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Lg}Cg.prototype=Object.assign(Object.create(Ge.prototype),{constructor:Cg,getInput:function(){return this.gain},removeFilter:function(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this},getFilter:function(){return this.filter},setFilter:function(t){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this},updateMatrixWorld:function(t){Ge.prototype.updateMatrixWorld.call(this,t);var e=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Ja,gw,mI),Ka.set(0,0,-1).applyQuaternion(gw),e.positionX){var i=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(Ja.x,i),e.positionY.linearRampToValueAtTime(Ja.y,i),e.positionZ.linearRampToValueAtTime(Ja.z,i),e.forwardX.linearRampToValueAtTime(Ka.x,i),e.forwardY.linearRampToValueAtTime(Ka.y,i),e.forwardZ.linearRampToValueAtTime(Ka.z,i),e.upX.linearRampToValueAtTime(n.x,i),e.upY.linearRampToValueAtTime(n.y,i),e.upZ.linearRampToValueAtTime(n.z,i)}else e.setPosition(Ja.x,Ja.y,Ja.z),e.setOrientation(Ka.x,Ka.y,Ka.z,n.x,n.y,n.z)}});function ol(t){Ge.call(this),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this._startedAt=0,this._pausedAt=0,this.filters=[]}ol.prototype=Object.assign(Object.create(Ge.prototype),{constructor:ol,getOutput:function(){return this.gain},setNodeSource:function(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this},setMediaElementSource:function(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this},setMediaStreamSource:function(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this},setBuffer:function(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this},play:function(t){if(t===void 0&&(t=0),this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+t;var e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._pausedAt+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()},pause:function(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._pausedAt+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.source.stop(),this.source.onended=null,this.isPlaying=!1),this},stop:function(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._pausedAt=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(t){return t||(t=[]),this.isPlaying===!0?(this.disconnect(),this.filters=t,this.connect()):this.filters=t,this},setDetune:function(t){if(this.detune=t,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this},getDetune:function(){return this.detune},getFilter:function(){return this.getFilters()[0]},setFilter:function(t){return this.setFilters(t?[t]:[])},setPlaybackRate:function(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=t,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop},setLoop:function(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=t,this.isPlaying===!0&&(this.source.loop=this.loop),this},setLoopStart:function(t){return this.loopStart=t,this},setLoopEnd:function(t){return this.loopEnd=t,this},getVolume:function(){return this.gain.gain.value},setVolume:function(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}});var Qa=new z,vw=new Pn,gI=new z,es=new z;function Rg(t){ol.call(this,t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}Rg.prototype=Object.assign(Object.create(ol.prototype),{constructor:Rg,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(t){return this.panner.refDistance=t,this},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(t){return this.panner.rolloffFactor=t,this},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(t){return this.panner.distanceModel=t,this},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(t){return this.panner.maxDistance=t,this},setDirectionalCone:function(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this},updateMatrixWorld:function(t){if(Ge.prototype.updateMatrixWorld.call(this,t),!(this.hasPlaybackControl===!0&&this.isPlaying===!1)){this.matrixWorld.decompose(Qa,vw,gI),es.set(0,0,1).applyQuaternion(vw);var e=this.panner;if(e.positionX){var n=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(Qa.x,n),e.positionY.linearRampToValueAtTime(Qa.y,n),e.positionZ.linearRampToValueAtTime(Qa.z,n),e.orientationX.linearRampToValueAtTime(es.x,n),e.orientationY.linearRampToValueAtTime(es.y,n),e.orientationZ.linearRampToValueAtTime(es.z,n)}else e.setPosition(Qa.x,Qa.y,Qa.z),e.setOrientation(es.x,es.y,es.z)}}});function Pg(t,e){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e!==void 0?e:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}Object.assign(Pg.prototype,{getFrequencyData:function(){return this.analyser.getByteFrequencyData(this.data),this.data},getAverageFrequency:function(){for(var t=0,e=this.getFrequencyData(),n=0;n<e.length;n++)t+=e[n];return t/e.length}});function Dg(t,e,n){this.binding=t,this.valueSize=n;var i=Float64Array,r;switch(e){case"quaternion":r=this._slerp;break;case"string":case"bool":i=Array,r=this._select;break;default:r=this._lerp}this.buffer=new i(n*4),this._mixBufferRegion=r,this.cumulativeWeight=0,this.useCount=0,this.referenceCount=0}Object.assign(Dg.prototype,{accumulate:function(t,e){var n=this.buffer,i=this.valueSize,r=t*i+i,a=this.cumulativeWeight;if(a===0){for(var s=0;s!==i;++s)n[r+s]=n[s];a=e}else{a+=e;var o=e/a;this._mixBufferRegion(n,r,0,o,i)}this.cumulativeWeight=a},apply:function(t){var e=this.valueSize,n=this.buffer,i=t*e+e,r=this.cumulativeWeight,a=this.binding;if(this.cumulativeWeight=0,r<1){var s=e*3;this._mixBufferRegion(n,i,s,1-r,e)}for(var o=e,l=e+e;o!==l;++o)if(n[o]!==n[o+e]){a.setValue(n,i);break}},saveOriginalState:function(){var t=this.binding,e=this.buffer,n=this.valueSize,i=n*3;t.getValue(e,i);for(var r=n,a=i;r!==a;++r)e[r]=e[i+r%n];this.cumulativeWeight=0},restoreOriginalState:function(){var t=this.valueSize*3;this.binding.setValue(this.buffer,t)},_select:function(t,e,n,i,r){if(i>=.5)for(var a=0;a!==r;++a)t[e+a]=t[n+a]},_slerp:function(t,e,n,i){Pn.slerpFlat(t,e,t,e,t,n,i)},_lerp:function(t,e,n,i,r){for(var a=1-i,s=0;s!==r;++s){var o=e+s;t[o]=t[o]*a+t[n+s]*i}}});var Ig="\\[\\]\\.:\\/",vI=new RegExp("["+Ig+"]","g"),Fg="[^"+Ig+"]",yI="[^"+Ig.replace("\\.","")+"]",xI=/((?:WC+[\/:])*)/.source.replace("WC",Fg),_I=/(WCOD+)?/.source.replace("WCOD",yI),MI=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Fg),wI=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Fg),bI=new RegExp("^"+xI+_I+MI+wI+"$"),SI=["material","materials","bones"];function yw(t,e,n){var i=n||Mn.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}Object.assign(yw.prototype,{getValue:function(t,e){this.bind();var n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(t,e)},setValue:function(t,e){for(var n=this._bindings,i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(t,e)},bind:function(){for(var t=this._bindings,e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()},unbind:function(){for(var t=this._bindings,e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}});function Mn(t,e,n){this.path=e,this.parsedPath=n||Mn.parseTrackName(e),this.node=Mn.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t}Object.assign(Mn,{Composite:yw,create:function(t,e,n){return t&&t.isAnimationObjectGroup?new Mn.Composite(t,e,n):new Mn(t,e,n)},sanitizeNodeName:function(t){return t.replace(/\s/g,"_").replace(vI,"")},parseTrackName:function(t){var e=bI.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);var n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){var r=n.nodeName.substring(i+1);SI.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n},findNode:function(t,e){if(!e||e===""||e==="."||e===-1||e===t.name||e===t.uuid)return t;if(t.skeleton){var n=t.skeleton.getBoneByName(e);if(n!==void 0)return n}if(t.children){var i=function(a){for(var s=0;s<a.length;s++){var o=a[s];if(o.name===e||o.uuid===e)return o;var l=i(o.children);if(l)return l}return null},r=i(t.children);if(r)return r}return null}});Object.assign(Mn.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(e,n){e[n]=this.node[this.propertyName]},function(e,n){for(var i=this.resolvedProperty,r=0,a=i.length;r!==a;++r)e[n++]=i[r]},function(e,n){e[n]=this.resolvedProperty[this.propertyIndex]},function(e,n){this.resolvedProperty.toArray(e,n)}],SetterByBindingTypeAndVersioning:[[function(e,n){this.targetObject[this.propertyName]=e[n]},function(e,n){this.targetObject[this.propertyName]=e[n],this.targetObject.needsUpdate=!0},function(e,n){this.targetObject[this.propertyName]=e[n],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,n){for(var i=this.resolvedProperty,r=0,a=i.length;r!==a;++r)i[r]=e[n++]},function(e,n){for(var i=this.resolvedProperty,r=0,a=i.length;r!==a;++r)i[r]=e[n++];this.targetObject.needsUpdate=!0},function(e,n){for(var i=this.resolvedProperty,r=0,a=i.length;r!==a;++r)i[r]=e[n++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,n){this.resolvedProperty[this.propertyIndex]=e[n]},function(e,n){this.resolvedProperty[this.propertyIndex]=e[n],this.targetObject.needsUpdate=!0},function(e,n){this.resolvedProperty[this.propertyIndex]=e[n],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,n){this.resolvedProperty.fromArray(e,n)},function(e,n){this.resolvedProperty.fromArray(e,n),this.targetObject.needsUpdate=!0},function(e,n){this.resolvedProperty.fromArray(e,n),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(e,n){this.bind(),this.getValue(e,n)},setValue:function(e,n){this.bind(),this.setValue(e,n)},bind:function(){var t=this.node,e=this.parsedPath,n=e.objectName,i=e.propertyName,r=e.propertyIndex;if(t||(t=Mn.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){var a=e.objectIndex;switch(n){case"materials":if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}t=t.material.materials;break;case"bones":if(!t.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}t=t.skeleton.bones;for(var s=0;s<t.length;s++)if(t[s].name===a){a=s;break}break;default:if(t[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}t=t[n]}if(a!==void 0){if(t[a]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);return}t=t[a]}}var o=t[i];if(o===void 0){var l=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+i+" but it wasn't found.",t);return}var c=this.Versioning.None;this.targetObject=t,t.needsUpdate!==void 0?c=this.Versioning.NeedsUpdate:t.matrixWorldNeedsUpdate!==void 0&&(c=this.Versioning.MatrixWorldNeedsUpdate);var h=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!t.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(t.geometry.isBufferGeometry){if(!t.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}for(var s=0;s<this.node.geometry.morphAttributes.position.length;s++)if(t.geometry.morphAttributes.position[s].name===r){r=s;break}}else{if(!t.geometry.morphTargets){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.",this);return}for(var s=0;s<this.node.geometry.morphTargets.length;s++)if(t.geometry.morphTargets[s].name===r){r=s;break}}}h=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=r}else o.fromArray!==void 0&&o.toArray!==void 0?(h=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(h=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=i;this.getValue=this.GetterByBindingType[h],this.setValue=this.SetterByBindingTypeAndVersioning[h][c]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}});Object.assign(Mn.prototype,{_getValue_unbound:Mn.prototype.getValue,_setValue_unbound:Mn.prototype.setValue});function xw(){this.uuid=it.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;var t={};this._indicesByUUID=t;for(var e=0,n=arguments.length;e!==n;++e)t[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};var i=this;this.stats={objects:{get total(){return i._objects.length},get inUse(){return this.total-i.nCachedObjects_}},get bindingsPerObject(){return i._bindings.length}}}Object.assign(xw.prototype,{isAnimationObjectGroup:!0,add:function(){for(var t=this._objects,e=t.length,n=this.nCachedObjects_,i=this._indicesByUUID,r=this._paths,a=this._parsedPaths,s=this._bindings,o=s.length,l=void 0,c=0,h=arguments.length;c!==h;++c){var u=arguments[c],f=u.uuid,d=i[f];if(d===void 0){d=e++,i[f]=d,t.push(u);for(var p=0,m=o;p!==m;++p)s[p].push(new Mn(u,r[p],a[p]))}else if(d<n){l=t[d];var x=--n,g=t[x];i[g.uuid]=d,t[d]=g,i[f]=x,t[x]=u;for(var p=0,m=o;p!==m;++p){var v=s[p],b=v[x],_=v[d];v[d]=b,_===void 0&&(_=new Mn(u,r[p],a[p])),v[x]=_}}else t[d]!==l&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=n},remove:function(){for(var t=this._objects,e=this.nCachedObjects_,n=this._indicesByUUID,i=this._bindings,r=i.length,a=0,s=arguments.length;a!==s;++a){var o=arguments[a],l=o.uuid,c=n[l];if(c!==void 0&&c>=e){var h=e++,u=t[h];n[u.uuid]=c,t[c]=u,n[l]=h,t[h]=o;for(var f=0,d=r;f!==d;++f){var p=i[f],m=p[h],x=p[c];p[c]=m,p[h]=x}}}this.nCachedObjects_=e},uncache:function(){for(var t=this._objects,e=t.length,n=this.nCachedObjects_,i=this._indicesByUUID,r=this._bindings,a=r.length,s=0,o=arguments.length;s!==o;++s){var l=arguments[s],c=l.uuid,h=i[c];if(h!==void 0)if(delete i[c],h<n){var u=--n,f=t[u],d=--e,p=t[d];i[f.uuid]=h,t[h]=f,i[p.uuid]=u,t[u]=p,t.pop();for(var m=0,x=a;m!==x;++m){var g=r[m],v=g[u],b=g[d];g[h]=v,g[u]=b,g.pop()}}else{var d=--e,p=t[d];i[p.uuid]=h,t[h]=p,t.pop();for(var m=0,x=a;m!==x;++m){var g=r[m];g[h]=g[d],g.pop()}}}this.nCachedObjects_=n},subscribe_:function(t,e){var n=this._bindingsIndicesByPath,i=n[t],r=this._bindings;if(i!==void 0)return r[i];var a=this._paths,s=this._parsedPaths,o=this._objects,l=o.length,c=this.nCachedObjects_,h=new Array(l);i=r.length,n[t]=i,a.push(t),s.push(e),r.push(h);for(var u=c,f=o.length;u!==f;++u){var d=o[u];h[u]=new Mn(d,t,e)}return h},unsubscribe_:function(t){var e=this._bindingsIndicesByPath,n=e[t];if(n!==void 0){var i=this._paths,r=this._parsedPaths,a=this._bindings,s=a.length-1,o=a[s],l=t[s];e[l]=n,a[n]=o,a.pop(),r[n]=r[s],r.pop(),i[n]=i[s],i.pop()}}});function _w(t,e,n){this._mixer=t,this._clip=e,this._localRoot=n||null;for(var i=e.tracks,r=i.length,a=new Array(r),s={endingStart:ya,endingEnd:ya},o=0;o!==r;++o){var l=i[o].createInterpolant(null);a[o]=l,l.settings=s}this._interpolantSettings=s,this._interpolants=a,this._propertyBindings=new Array(r),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=J_,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}Object.assign(_w.prototype,{play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(t){return this._startTime=t,this},setLoop:function(t,e){return this.loop=t,this.repetitions=e,this},setEffectiveWeight:function(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(t){return this._scheduleFading(t,0,1)},fadeOut:function(t){return this._scheduleFading(t,1,0)},crossFadeFrom:function(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){var i=this._clip.duration,r=t._clip.duration,a=r/i,s=i/r;t.warp(1,a,e),this.warp(s,1,e)}return this},crossFadeTo:function(t,e,n){return t.crossFadeFrom(this,e,n)},stopFading:function(){var t=this._weightInterpolant;return t!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this},setEffectiveTimeScale:function(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(t){return this.timeScale=this._clip.duration/t,this.stopWarping()},syncWith:function(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()},halt:function(t){return this.warp(this._effectiveTimeScale,0,t)},warp:function(t,e,n){var i=this._mixer,r=i.time,a=this._timeScaleInterpolant,s=this.timeScale;a===null&&(a=i._lendControlInterpolant(),this._timeScaleInterpolant=a);var o=a.parameterPositions,l=a.sampleValues;return o[0]=r,o[1]=r+n,l[0]=t/s,l[1]=e/s,this},stopWarping:function(){var t=this._timeScaleInterpolant;return t!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(t,e,n,i){if(!this.enabled){this._updateWeight(t);return}var r=this._startTime;if(r!==null){var a=(t-r)*n;if(a<0||n===0)return;this._startTime=null,e=n*a}e*=this._updateTimeScale(t);var s=this._updateTime(e),o=this._updateWeight(t);if(o>0)for(var l=this._interpolants,c=this._propertyBindings,h=0,u=l.length;h!==u;++h)l[h].evaluate(s),c[h].accumulate(i,o)},_updateWeight:function(t){var e=0;if(this.enabled){e=this.weight;var n=this._weightInterpolant;if(n!==null){var i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=e,e},_updateTimeScale:function(t){var e=0;if(!this.paused){e=this.timeScale;var n=this._timeScaleInterpolant;if(n!==null){var i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopWarping(),e===0?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e},_updateTime:function(t){var e=this.time+t,n=this._clip.duration,i=this.loop,r=this._loopCount,a=i===K_;if(t===0)return r===-1?e:a&&(r&1)==1?n-e:e;if(i===Z_){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(e>=n)e=n;else if(e<0)e=0;else{this.time=e;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=e,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(r===-1&&(t>=0?(r=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),e>=n||e<0){var s=Math.floor(e/n);e-=n*s,r+=Math.abs(s);var o=this.repetitions-r;if(o<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,e=t>0?n:0,this.time=e,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(o===1){var l=t<0;this._setEndings(l,!l,a)}else this._setEndings(!1,!1,a);this._loopCount=r,this.time=e,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:s})}}else this.time=e;if(a&&(r&1)==1)return n-e}return e},_setEndings:function(t,e,n){var i=this._interpolantSettings;n?(i.endingStart=xa,i.endingEnd=xa):(t?i.endingStart=this.zeroSlopeAtStart?xa:ya:i.endingStart=mc,e?i.endingEnd=this.zeroSlopeAtEnd?xa:ya:i.endingEnd=mc)},_scheduleFading:function(t,e,n){var i=this._mixer,r=i.time,a=this._weightInterpolant;a===null&&(a=i._lendControlInterpolant(),this._weightInterpolant=a);var s=a.parameterPositions,o=a.sampleValues;return s[0]=r,o[0]=e,s[1]=r+t,o[1]=n,this}});function Bg(t){this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}Bg.prototype=Object.assign(Object.create(Fi.prototype),{constructor:Bg,_bindAction:function(t,e){var n=t._localRoot||this._root,i=t._clip.tracks,r=i.length,a=t._propertyBindings,s=t._interpolants,o=n.uuid,l=this._bindingsByRootAndName,c=l[o];c===void 0&&(c={},l[o]=c);for(var h=0;h!==r;++h){var u=i[h],f=u.name,d=c[f];if(d!==void 0)a[h]=d;else{if(d=a[h],d!==void 0){d._cacheIndex===null&&(++d.referenceCount,this._addInactiveBinding(d,o,f));continue}var p=e&&e._propertyBindings[h].binding.parsedPath;d=new Dg(Mn.create(n,f,p),u.ValueTypeName,u.getValueSize()),++d.referenceCount,this._addInactiveBinding(d,o,f),a[h]=d}s[h].resultBuffer=d.buffer}},_activateAction:function(t){if(!this._isActiveAction(t)){if(t._cacheIndex===null){var e=(t._localRoot||this._root).uuid,n=t._clip.uuid,i=this._actionsByClip[n];this._bindAction(t,i&&i.knownActions[0]),this._addInactiveAction(t,n,e)}for(var r=t._propertyBindings,a=0,s=r.length;a!==s;++a){var o=r[a];o.useCount++==0&&(this._lendBinding(o),o.saveOriginalState())}this._lendAction(t)}},_deactivateAction:function(t){if(this._isActiveAction(t)){for(var e=t._propertyBindings,n=0,i=e.length;n!==i;++n){var r=e[n];--r.useCount==0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(t)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;var t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}},_isActiveAction:function(t){var e=t._cacheIndex;return e!==null&&e<this._nActiveActions},_addInactiveAction:function(t,e,n){var i=this._actions,r=this._actionsByClip,a=r[e];if(a===void 0)a={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,r[e]=a;else{var s=a.knownActions;t._byClipCacheIndex=s.length,s.push(t)}t._cacheIndex=i.length,i.push(t),a.actionByRoot[n]=t},_removeInactiveAction:function(t){var e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;var r=t._clip.uuid,a=this._actionsByClip,s=a[r],o=s.knownActions,l=o[o.length-1],c=t._byClipCacheIndex;l._byClipCacheIndex=c,o[c]=l,o.pop(),t._byClipCacheIndex=null;var h=s.actionByRoot,u=(t._localRoot||this._root).uuid;delete h[u],o.length===0&&delete a[r],this._removeInactiveBindingsForAction(t)},_removeInactiveBindingsForAction:function(t){for(var e=t._propertyBindings,n=0,i=e.length;n!==i;++n){var r=e[n];--r.referenceCount==0&&this._removeInactiveBinding(r)}},_lendAction:function(t){var e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r},_takeBackAction:function(t){var e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r},_addInactiveBinding:function(t,e,n){var i=this._bindingsByRootAndName,r=i[e],a=this._bindings;r===void 0&&(r={},i[e]=r),r[n]=t,t._cacheIndex=a.length,a.push(t)},_removeInactiveBinding:function(t){var e=this._bindings,n=t.binding,i=n.rootNode.uuid,r=n.path,a=this._bindingsByRootAndName,s=a[i],o=e[e.length-1],l=t._cacheIndex;o._cacheIndex=l,e[l]=o,e.pop(),delete s[r],Object.keys(s).length===0&&delete a[i]},_lendBinding:function(t){var e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r},_takeBackBinding:function(t){var e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r},_lendControlInterpolant:function(){var t=this._controlInterpolants,e=this._nActiveControlInterpolants++,n=t[e];return n===void 0&&(n=new lh(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=e,t[e]=n),n},_takeBackControlInterpolant:function(t){var e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,r=e[i];t.__cacheIndex=i,e[i]=t,r.__cacheIndex=n,e[n]=r},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(t,e){var n=e||this._root,i=n.uuid,r=typeof t=="string"?si.findByName(n,t):t,a=r!==null?r.uuid:t,s=this._actionsByClip[a],o=null;if(s!==void 0){var l=s.actionByRoot[i];if(l!==void 0)return l;o=s.knownActions[0],r===null&&(r=o._clip)}if(r===null)return null;var c=new _w(this,r,e);return this._bindAction(c,o),this._addInactiveAction(c,a,i),c},existingAction:function(t,e){var n=e||this._root,i=n.uuid,r=typeof t=="string"?si.findByName(n,t):t,a=r?r.uuid:t,s=this._actionsByClip[a];return s!==void 0&&s.actionByRoot[i]||null},stopAllAction:function(){var t=this._actions,e=this._nActiveActions,n=this._bindings,i=this._nActiveBindings;this._nActiveActions=0,this._nActiveBindings=0;for(var r=0;r!==e;++r)t[r].reset();for(var r=0;r!==i;++r)n[r].useCount=0;return this},update:function(t){t*=this.timeScale;for(var e=this._actions,n=this._nActiveActions,i=this.time+=t,r=Math.sign(t),a=this._accuIndex^=1,s=0;s!==n;++s){var o=e[s];o._update(i,t,r,a)}for(var l=this._bindings,c=this._nActiveBindings,s=0;s!==c;++s)l[s].apply(a);return this},setTime:function(t){this.time=0;for(var e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(t)},getRoot:function(){return this._root},uncacheClip:function(t){var e=this._actions,n=t.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){for(var a=r.knownActions,s=0,o=a.length;s!==o;++s){var l=a[s];this._deactivateAction(l);var c=l._cacheIndex,h=e[e.length-1];l._cacheIndex=null,l._byClipCacheIndex=null,h._cacheIndex=c,e[c]=h,e.pop(),this._removeInactiveBindingsForAction(l)}delete i[n]}},uncacheRoot:function(t){var e=t.uuid,n=this._actionsByClip;for(var i in n){var r=n[i].actionByRoot,a=r[e];a!==void 0&&(this._deactivateAction(a),this._removeInactiveAction(a))}var s=this._bindingsByRootAndName,o=s[e];if(o!==void 0)for(var l in o){var c=o[l];c.restoreOriginalState(),this._removeInactiveBinding(c)}},uncacheAction:function(t,e){var n=this.existingAction(t,e);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}});function Zf(t){typeof t=="string"&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}Zf.prototype.clone=function(){return new Zf(this.value.clone===void 0?this.value:this.value.clone())};function Og(t,e,n){mr.call(this,t,e),this.meshPerAttribute=n||1}Og.prototype=Object.assign(Object.create(mr.prototype),{constructor:Og,isInstancedInterleavedBuffer:!0,copy:function(t){return mr.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this}});function Ng(t,e,n,i){this.ray=new Ea(t,e),this.near=n||0,this.far=i||1/0,this.camera=null,this.layers=new ju,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function Mw(t,e){return t.distance-e.distance}function zg(t,e,n,i){if(t.layers.test(e.layers)&&t.raycast(e,n),i===!0)for(var r=t.children,a=0,s=r.length;a<s;a++)zg(r[a],e,n,!0)}Object.assign(Ng.prototype,{set:function(t,e){this.ray.set(t,e)},setFromCamera:function(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(t,e,n){var i=n||[];return zg(t,this,i,e),i.sort(Mw),i},intersectObjects:function(t,e,n){var i=n||[];if(Array.isArray(t)===!1)return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),i;for(var r=0,a=t.length;r<a;r++)zg(t[r],this,i,e);return i.sort(Mw),i}});function ww(t,e,n){return this.radius=t!==void 0?t:1,this.phi=e!==void 0?e:0,this.theta=n!==void 0?n:0,this}Object.assign(ww.prototype,{set:function(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this},makeSafe:function(){var t=1e-6;return this.phi=Math.max(t,Math.min(Math.PI-t,this.phi)),this},setFromVector3:function(t){return this.setFromCartesianCoords(t.x,t.y,t.z)},setFromCartesianCoords:function(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(it.clamp(e/this.radius,-1,1))),this}});function bw(t,e,n){return this.radius=t!==void 0?t:1,this.theta=e!==void 0?e:0,this.y=n!==void 0?n:0,this}Object.assign(bw.prototype,{set:function(t,e,n){return this.radius=t,this.theta=e,this.y=n,this},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this},setFromVector3:function(t){return this.setFromCartesianCoords(t.x,t.y,t.z)},setFromCartesianCoords:function(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}});var Sw=new Me;function Ug(t,e){this.min=t!==void 0?t:new Me(1/0,1/0),this.max=e!==void 0?e:new Me(-1/0,-1/0)}Object.assign(Ug.prototype,{set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(t,e){var n=Sw.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(t){return t===void 0&&(console.warn("THREE.Box2: .getCenter() target is now required"),t=new Me),this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){return t===void 0&&(console.warn("THREE.Box2: .getSize() target is now required"),t=new Me),this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y},getParameter:function(t,e){return e===void 0&&(console.warn("THREE.Box2: .getParameter() target is now required"),e=new Me),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)},clampPoint:function(t,e){return e===void 0&&(console.warn("THREE.Box2: .clampPoint() target is now required"),e=new Me),e.copy(t).clamp(this.min,this.max)},distanceToPoint:function(t){var e=Sw.copy(t).clamp(this.min,this.max);return e.sub(t).length()},intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}});var Ew=new z,Jf=new z;function Gg(t,e){this.start=t!==void 0?t:new z,this.end=e!==void 0?e:new z}Object.assign(Gg.prototype,{set:function(t,e){return this.start.copy(t),this.end.copy(e),this},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.start.copy(t.start),this.end.copy(t.end),this},getCenter:function(t){return t===void 0&&(console.warn("THREE.Line3: .getCenter() target is now required"),t=new z),t.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(t){return t===void 0&&(console.warn("THREE.Line3: .delta() target is now required"),t=new z),t.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(t,e){return e===void 0&&(console.warn("THREE.Line3: .at() target is now required"),e=new z),this.delta(e).multiplyScalar(t).add(this.start)},closestPointToPointParameter:function(t,e){Ew.subVectors(t,this.start),Jf.subVectors(this.end,this.start);var n=Jf.dot(Jf),i=Jf.dot(Ew),r=i/n;return e&&(r=it.clamp(r,0,1)),r},closestPointToPoint:function(t,e,n){var i=this.closestPointToPointParameter(t,e);return n===void 0&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),n=new z),this.delta(n).multiplyScalar(i).add(this.start)},applyMatrix4:function(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this},equals:function(t){return t.start.equals(this.start)&&t.end.equals(this.end)}});function fh(t){Ge.call(this),this.material=t,this.render=function(){}}fh.prototype=Object.create(Ge.prototype);fh.prototype.constructor=fh;fh.prototype.isImmediateRenderObject=!0;var Tw=new z;function ll(t,e){Ge.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;for(var n=new ke,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1],r=0,a=1,s=32;r<s;r++,a++){var o=r/s*Math.PI*2,l=a/s*Math.PI*2;i.push(Math.cos(o),Math.sin(o),1,Math.cos(l),Math.sin(l),1)}n.setAttribute("position",new ze(i,3));var c=new Bt({fog:!1,toneMapped:!1});this.cone=new Nt(n,c),this.add(this.cone),this.update()}ll.prototype=Object.create(Ge.prototype);ll.prototype.constructor=ll;ll.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()};ll.prototype.update=function(){this.light.updateMatrixWorld();var t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),Tw.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Tw),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)};var ia=new z,Kf=new ct,Hg=new ct;function Aw(t){var e=[];t&&t.isBone&&e.push(t);for(var n=0;n<t.children.length;n++)e.push.apply(e,Aw(t.children[n]));return e}function ts(t){for(var e=Aw(t),n=new ke,i=[],r=[],a=new Ve(0,0,1),s=new Ve(0,1,0),o=0;o<e.length;o++){var l=e[o];l.parent&&l.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(a.r,a.g,a.b),r.push(s.r,s.g,s.b))}n.setAttribute("position",new ze(i,3)),n.setAttribute("color",new ze(r,3));var c=new Bt({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});Nt.call(this,n,c),this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}ts.prototype=Object.create(Nt.prototype);ts.prototype.constructor=ts;ts.prototype.isSkeletonHelper=!0;ts.prototype.updateMatrixWorld=function(t){var e=this.bones,n=this.geometry,i=n.getAttribute("position");Hg.getInverse(this.root.matrixWorld);for(var r=0,a=0;r<e.length;r++){var s=e[r];s.parent&&s.parent.isBone&&(Kf.multiplyMatrices(Hg,s.matrixWorld),ia.setFromMatrixPosition(Kf),i.setXYZ(a,ia.x,ia.y,ia.z),Kf.multiplyMatrices(Hg,s.parent.matrixWorld),ia.setFromMatrixPosition(Kf),i.setXYZ(a+1,ia.x,ia.y,ia.z),a+=2)}n.getAttribute("position").needsUpdate=!0,Ge.prototype.updateMatrixWorld.call(this,t)};function cl(t,e,n){this.light=t,this.light.updateMatrixWorld(),this.color=n;var i=new Ua(e,4,2),r=new ri({wireframe:!0,fog:!1,toneMapped:!1});Ft.call(this,i,r),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}cl.prototype=Object.create(Ft.prototype);cl.prototype.constructor=cl;cl.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()};cl.prototype.update=function(){this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)};var EI=new z,Lw=new Ve,Cw=new Ve;function hl(t,e,n){Ge.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;var i=new Ba(e);i.rotateY(Math.PI*.5),this.material=new ri({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);var r=i.getAttribute("position"),a=new Float32Array(r.count*3);i.setAttribute("color",new Ke(a,3)),this.add(new Ft(i,this.material)),this.update()}hl.prototype=Object.create(Ge.prototype);hl.prototype.constructor=hl;hl.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()};hl.prototype.update=function(){var t=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{var e=t.geometry.getAttribute("color");Lw.copy(this.light.color),Cw.copy(this.light.groundColor);for(var n=0,i=e.count;n<i;n++){var r=n<i/2?Lw:Cw;e.setXYZ(n,r.r,r.g,r.b)}e.needsUpdate=!0}t.lookAt(EI.setFromMatrixPosition(this.light.matrixWorld).negate())};function Qf(t,e,n,i){t=t||10,e=e||10,n=new Ve(n!==void 0?n:4473924),i=new Ve(i!==void 0?i:8947848);for(var r=e/2,a=t/e,s=t/2,o=[],l=[],c=0,h=0,u=-s;c<=e;c++,u+=a){o.push(-s,0,u,s,0,u),o.push(u,0,-s,u,0,s);var f=c===r?n:i;f.toArray(l,h),h+=3,f.toArray(l,h),h+=3,f.toArray(l,h),h+=3,f.toArray(l,h),h+=3}var d=new ke;d.setAttribute("position",new ze(o,3)),d.setAttribute("color",new ze(l,3));var p=new Bt({vertexColors:!0,toneMapped:!1});Nt.call(this,d,p)}Qf.prototype=Object.assign(Object.create(Nt.prototype),{constructor:Qf,copy:function(t){return Nt.prototype.copy.call(this,t),this.geometry.copy(t.geometry),this.material.copy(t.material),this},clone:function(){return new this.constructor().copy(this)}});function ed(t,e,n,i,r,a){t=t||10,e=e||16,n=n||8,i=i||64,r=new Ve(r!==void 0?r:4473924),a=new Ve(a!==void 0?a:8947848);var s=[],o=[],l,c,h,u,f,d,p;for(u=0;u<=e;u++)h=u/e*(Math.PI*2),l=Math.sin(h)*t,c=Math.cos(h)*t,s.push(0,0,0),s.push(l,0,c),p=u&1?r:a,o.push(p.r,p.g,p.b),o.push(p.r,p.g,p.b);for(u=0;u<=n;u++)for(p=u&1?r:a,d=t-t/n*u,f=0;f<i;f++)h=f/i*(Math.PI*2),l=Math.sin(h)*d,c=Math.cos(h)*d,s.push(l,0,c),o.push(p.r,p.g,p.b),h=(f+1)/i*(Math.PI*2),l=Math.sin(h)*d,c=Math.cos(h)*d,s.push(l,0,c),o.push(p.r,p.g,p.b);var m=new ke;m.setAttribute("position",new ze(s,3)),m.setAttribute("color",new ze(o,3));var x=new Bt({vertexColors:!0,toneMapped:!1});Nt.call(this,m,x)}ed.prototype=Object.create(Nt.prototype);ed.prototype.constructor=ed;var Rw=new z,td=new z,Pw=new z;function ul(t,e,n){Ge.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,e===void 0&&(e=1);var i=new ke;i.setAttribute("position",new ze([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));var r=new Bt({fog:!1,toneMapped:!1});this.lightPlane=new Xn(i,r),this.add(this.lightPlane),i=new ke,i.setAttribute("position",new ze([0,0,0,0,0,1],3)),this.targetLine=new Xn(i,r),this.add(this.targetLine),this.update()}ul.prototype=Object.create(Ge.prototype);ul.prototype.constructor=ul;ul.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()};ul.prototype.update=function(){Rw.setFromMatrixPosition(this.light.matrixWorld),td.setFromMatrixPosition(this.light.target.matrixWorld),Pw.subVectors(td,Rw),this.lightPlane.lookAt(td),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(td),this.targetLine.scale.z=Pw.length()};var nd=new z,Gt=new Ni;function dh(t){var e=new ke,n=new Bt({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],r=[],a={},s=new Ve(16755200),o=new Ve(16711680),l=new Ve(43775),c=new Ve(16777215),h=new Ve(3355443);u("n1","n2",s),u("n2","n4",s),u("n4","n3",s),u("n3","n1",s),u("f1","f2",s),u("f2","f4",s),u("f4","f3",s),u("f3","f1",s),u("n1","f1",s),u("n2","f2",s),u("n3","f3",s),u("n4","f4",s),u("p","n1",o),u("p","n2",o),u("p","n3",o),u("p","n4",o),u("u1","u2",l),u("u2","u3",l),u("u3","u1",l),u("c","t",c),u("p","c",h),u("cn1","cn2",h),u("cn3","cn4",h),u("cf1","cf2",h),u("cf3","cf4",h);function u(d,p,m){f(d,m),f(p,m)}function f(d,p){i.push(0,0,0),r.push(p.r,p.g,p.b),a[d]===void 0&&(a[d]=[]),a[d].push(i.length/3-1)}e.setAttribute("position",new ze(i,3)),e.setAttribute("color",new ze(r,3)),Nt.call(this,e,n),this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update()}dh.prototype=Object.create(Nt.prototype);dh.prototype.constructor=dh;dh.prototype.update=function(){var t=this.geometry,e=this.pointMap,n=1,i=1;Gt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),jt("c",e,t,Gt,0,0,-1),jt("t",e,t,Gt,0,0,1),jt("n1",e,t,Gt,-n,-i,-1),jt("n2",e,t,Gt,n,-i,-1),jt("n3",e,t,Gt,-n,i,-1),jt("n4",e,t,Gt,n,i,-1),jt("f1",e,t,Gt,-n,-i,1),jt("f2",e,t,Gt,n,-i,1),jt("f3",e,t,Gt,-n,i,1),jt("f4",e,t,Gt,n,i,1),jt("u1",e,t,Gt,n*.7,i*1.1,-1),jt("u2",e,t,Gt,-n*.7,i*1.1,-1),jt("u3",e,t,Gt,0,i*2,-1),jt("cf1",e,t,Gt,-n,0,1),jt("cf2",e,t,Gt,n,0,1),jt("cf3",e,t,Gt,0,-i,1),jt("cf4",e,t,Gt,0,i,1),jt("cn1",e,t,Gt,-n,0,-1),jt("cn2",e,t,Gt,n,0,-1),jt("cn3",e,t,Gt,0,-i,-1),jt("cn4",e,t,Gt,0,i,-1),t.getAttribute("position").needsUpdate=!0};function jt(t,e,n,i,r,a,s){nd.set(r,a,s).unproject(i);var o=e[t];if(o!==void 0)for(var l=n.getAttribute("position"),c=0,h=o.length;c<h;c++)l.setXYZ(o[c],nd.x,nd.y,nd.z)}var id=new pi;function _r(t,e){this.object=t,e===void 0&&(e=16776960);var n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),r=new ke;r.setIndex(new Ke(n,1)),r.setAttribute("position",new Ke(i,3)),Nt.call(this,r,new Bt({color:e,toneMapped:!1})),this.matrixAutoUpdate=!1,this.update()}_r.prototype=Object.create(Nt.prototype);_r.prototype.constructor=_r;_r.prototype.update=function(t){if(t!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&id.setFromObject(this.object),!id.isEmpty()){var e=id.min,n=id.max,i=this.geometry.attributes.position,r=i.array;r[0]=n.x,r[1]=n.y,r[2]=n.z,r[3]=e.x,r[4]=n.y,r[5]=n.z,r[6]=e.x,r[7]=e.y,r[8]=n.z,r[9]=n.x,r[10]=e.y,r[11]=n.z,r[12]=n.x,r[13]=n.y,r[14]=e.z,r[15]=e.x,r[16]=n.y,r[17]=e.z,r[18]=e.x,r[19]=e.y,r[20]=e.z,r[21]=n.x,r[22]=e.y,r[23]=e.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}};_r.prototype.setFromObject=function(t){return this.object=t,this.update(),this};_r.prototype.copy=function(t){return Nt.prototype.copy.call(this,t),this.object=t.object,this};_r.prototype.clone=function(){return new this.constructor().copy(this)};function ph(t,e){this.type="Box3Helper",this.box=t,e=e||16776960;var n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],r=new ke;r.setIndex(new Ke(n,1)),r.setAttribute("position",new ze(i,3)),Nt.call(this,r,new Bt({color:e,toneMapped:!1})),this.geometry.computeBoundingSphere()}ph.prototype=Object.create(Nt.prototype);ph.prototype.constructor=ph;ph.prototype.updateMatrixWorld=function(t){var e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),Ge.prototype.updateMatrixWorld.call(this,t))};function mh(t,e,n){this.type="PlaneHelper",this.plane=t,this.size=e===void 0?1:e;var i=n!==void 0?n:16776960,r=[1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],a=new ke;a.setAttribute("position",new ze(r,3)),a.computeBoundingSphere(),Xn.call(this,a,new Bt({color:i,toneMapped:!1}));var s=[1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],o=new ke;o.setAttribute("position",new ze(s,3)),o.computeBoundingSphere(),this.add(new Ft(o,new ri({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}mh.prototype=Object.create(Xn.prototype);mh.prototype.constructor=mh;mh.prototype.updateMatrixWorld=function(t){var e=-this.plane.constant;Math.abs(e)<1e-8&&(e=1e-8),this.scale.set(.5*this.size,.5*this.size,e),this.children[0].material.side=e<0?nn:oo,this.lookAt(this.plane.normal),Ge.prototype.updateMatrixWorld.call(this,t)};var Dw=new z,rd,Vg;function Mr(t,e,n,i,r,a){Ge.call(this),t===void 0&&(t=new z(0,0,1)),e===void 0&&(e=new z(0,0,0)),n===void 0&&(n=1),i===void 0&&(i=16776960),r===void 0&&(r=.2*n),a===void 0&&(a=.2*r),rd===void 0&&(rd=new ke,rd.setAttribute("position",new ze([0,0,0,0,1,0],3)),Vg=new vr(0,.5,1,5,1),Vg.translate(0,-.5,0)),this.position.copy(e),this.line=new Xn(rd,new Bt({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Ft(Vg,new ri({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,r,a)}Mr.prototype=Object.create(Ge.prototype);Mr.prototype.constructor=Mr;Mr.prototype.setDirection=function(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{Dw.set(t.z,0,-t.x).normalize();var e=Math.acos(t.y);this.quaternion.setFromAxisAngle(Dw,e)}};Mr.prototype.setLength=function(t,e,n){e===void 0&&(e=.2*t),n===void 0&&(n=.2*e),this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()};Mr.prototype.setColor=function(t){this.line.material.color.set(t),this.cone.material.color.set(t)};Mr.prototype.copy=function(t){return Ge.prototype.copy.call(this,t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this};Mr.prototype.clone=function(){return new this.constructor().copy(this)};function gh(t){t=t||1;var e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new ke;i.setAttribute("position",new ze(e,3)),i.setAttribute("color",new ze(n,3));var r=new Bt({vertexColors:!0,toneMapped:!1});Nt.call(this,i,r)}gh.prototype=Object.create(Nt.prototype);gh.prototype.constructor=gh;var fl=4,ra=8,Wi=Math.pow(2,ra),Iw=[.125,.215,.35,.446,.526,.582],Fw=ra-fl+1+Iw.length,dl=20,$i={[On]:0,[Vu]:1,[ku]:2,[Cm]:3,[Rm]:4,[Pm]:5,[Lm]:6},kg=new sl,ad=CI(dl),aa=null,sa=null,{_lodPlanes:vh,_sizeLods:Bw,_sigmas:sd}=TI(),od=null,Lt=null,Wg=null,ns=(1+Math.sqrt(5))/2,pl=1/ns,Ow=[new z(1,1,1),new z(-1,1,1),new z(1,1,-1),new z(-1,1,-1),new z(0,ns,pl),new z(0,ns,-pl),new z(pl,0,ns),new z(-pl,0,ns),new z(ns,pl,0),new z(-ns,pl,0)];function $g(t){Lt=t,jg(ad)}$g.prototype={constructor:$g,fromScene:function(t,e=0,n=.1,i=100){Wg=Lt.getRenderTarget();var r=Nw();return AI(t,n,i,r),e>0&&Hw(r,0,0,e),Gw(r),zw(r),r},fromEquirectangular:function(t){return t.magFilter=$t,t.minFilter=$t,t.generateMipmaps=!1,this.fromCubemap(t)},fromCubemap:function(t){Wg=Lt.getRenderTarget();var e=Nw(t);return LI(t,e),Gw(e),zw(e),e},compileCubemapShader:function(){sa==null&&(sa=Ww(),jg(sa))},compileEquirectangularShader:function(){aa==null&&(aa=kw(),jg(aa))},dispose:function(){ad.dispose(),sa!=null&&sa.dispose(),aa!=null&&aa.dispose();for(var t=0;t<vh.length;t++)vh[t].dispose()}};function TI(){for(var t=[],e=[],n=[],i=ra,r=0;r<Fw;r++){var a=Math.pow(2,i);e.push(a);var s=1/a;r>ra-fl?s=Iw[r-ra+fl-1]:r==0&&(s=0),n.push(s);for(var o=1/(a-1),l=-o/2,c=1+o/2,h=[l,l,c,l,c,c,l,l,c,c,l,c],u=6,f=6,d=3,p=2,m=1,x=new Float32Array(d*f*u),g=new Float32Array(p*f*u),v=new Float32Array(m*f*u),b=0;b<u;b++){var _=b%3*2/3-1,M=b>2?0:-1,y=[_,M,0,_+2/3,M,0,_+2/3,M+1,0,_,M,0,_+2/3,M+1,0,_,M+1,0];x.set(y,d*f*b),g.set(h,p*f*b);var w=[b,b,b,b,b,b];v.set(w,m*f*b)}var E=new ke;E.setAttribute("position",new Ke(x,d)),E.setAttribute("uv",new Ke(g,p)),E.setAttribute("faceIndex",new Ke(v,m)),t.push(E),i>fl&&i--}return{_lodPlanes:t,_sizeLods:e,_sigmas:n}}function Nw(t){var e={magFilter:$t,minFilter:$t,generateMipmaps:!1,type:t?t.type:cc,format:t?t.format:d_,encoding:t?t.encoding:ku,depthBuffer:!1,stencilBuffer:!1},n=Uw(e);return n.depthBuffer=!t,od=Uw(e),n}function zw(t){od.dispose(),Lt.setRenderTarget(Wg),t.scissorTest=!1,t.setSize(t.width,t.height)}function AI(t,e,n,i){var r=90,a=1,s=new Jt(r,a,e,n),o=[1,1,1,1,-1,1],l=[1,1,-1,-1,-1,1],c=Lt.outputEncoding,h=Lt.toneMapping,u=Lt.toneMappingExposure,f=Lt.getClearColor(),d=Lt.getClearAlpha();Lt.toneMapping=Iu,Lt.toneMappingExposure=1,Lt.outputEncoding=On,t.scale.z*=-1;var p=t.background;if(p&&p.isColor){p.convertSRGBToLinear();var m=Math.max(p.r,p.g,p.b),x=Math.min(Math.max(Math.ceil(Math.log2(m)),-128),127);p=p.multiplyScalar(Math.pow(2,-x));var g=(x+128)/255;Lt.setClearColor(p,g),t.background=null}for(var v=0;v<6;v++){var b=v%3;b==0?(s.up.set(0,o[v],0),s.lookAt(l[v],0,0)):b==1?(s.up.set(0,0,o[v]),s.lookAt(0,l[v],0)):(s.up.set(0,o[v],0),s.lookAt(0,0,l[v])),Xg(i,b*Wi,v>2?Wi:0,Wi,Wi),Lt.setRenderTarget(i),Lt.render(t,s)}Lt.toneMapping=h,Lt.toneMappingExposure=u,Lt.outputEncoding=c,Lt.setClearColor(f,d),t.scale.z*=-1}function LI(t,e){var n=new lr;t.isCubeTexture?sa==null&&(sa=Ww()):aa==null&&(aa=kw());var i=t.isCubeTexture?sa:aa;n.add(new Ft(vh[0],i));var r=i.uniforms;r.envMap.value=t,t.isCubeTexture||r.texelSize.value.set(1/t.image.width,1/t.image.height),r.inputEncoding.value=$i[t.encoding],r.outputEncoding.value=$i[t.encoding],Xg(e,0,0,3*Wi,2*Wi),Lt.setRenderTarget(e),Lt.render(n,kg)}function jg(t){var e=new lr;e.add(new Ft(vh[0],t)),Lt.compile(e,kg)}function Uw(t){var e=new kn(3*Wi,3*Wi,t);return e.texture.mapping=co,e.texture.name="PMREM.cubeUv",e.scissorTest=!0,e}function Xg(t,e,n,i,r){t.viewport.set(e,n,i,r),t.scissor.set(e,n,i,r)}function Gw(t){var e=Lt.autoClear;Lt.autoClear=!1;for(var n=1;n<Fw;n++){var i=Math.sqrt(sd[n]*sd[n]-sd[n-1]*sd[n-1]),r=Ow[(n-1)%Ow.length];Hw(t,n-1,n,i,r)}Lt.autoClear=e}function Hw(t,e,n,i,r){Vw(t,od,e,n,i,"latitudinal",r),Vw(od,t,n,n,i,"longitudinal",r)}function Vw(t,e,n,i,r,a,s){a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");var o=3,l=new lr;l.add(new Ft(vh[i],ad));var c=ad.uniforms,h=Bw[n]-1,u=isFinite(r)?Math.PI/(2*h):2*Math.PI/(2*dl-1),f=r/u,d=isFinite(r)?1+Math.floor(o*f):dl;d>dl&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${d} samples when the maximum is set to ${dl}`);for(var p=[],m=0,x=0;x<dl;++x){var b=x/f,g=Math.exp(-b*b/2);p.push(g),x==0?m+=g:x<d&&(m+=2*g)}for(var x=0;x<p.length;x++)p[x]=p[x]/m;c.envMap.value=t.texture,c.samples.value=d,c.weights.value=p,c.latitudinal.value=a==="latitudinal",s&&(c.poleAxis.value=s),c.dTheta.value=u,c.mipInt.value=ra-n,c.inputEncoding.value=$i[t.texture.encoding],c.outputEncoding.value=$i[t.texture.encoding];var v=Bw[i],b=3*Math.max(0,Wi-2*v),_=(i===0?0:2*Wi)+2*v*(i>ra-fl?i-ra+fl:0);Xg(e,b,_,3*v,2*v),Lt.setRenderTarget(e),Lt.render(l,kg)}function CI(t){var e=new Float32Array(t),n=new z(0,1,0),i=new yr({defines:{n:t},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:e},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n},inputEncoding:{value:$i[On]},outputEncoding:{value:$i[On]}},vertexShader:qg(),fragmentShader:`
precision mediump float;
precision mediump int;
varying vec3 vOutputDirection;
uniform sampler2D envMap;
uniform int samples;
uniform float weights[n];
uniform bool latitudinal;
uniform float dTheta;
uniform float mipInt;
uniform vec3 poleAxis;

${Yg()}

#define ENVMAP_TYPE_CUBE_UV
#include <cube_uv_reflection_fragment>

vec3 getSample(float theta, vec3 axis) {
	float cosTheta = cos(theta);
	// Rodrigues' axis-angle rotation
	vec3 sampleDirection = vOutputDirection * cosTheta
		+ cross(axis, vOutputDirection) * sin(theta)
		+ axis * dot(axis, vOutputDirection) * (1.0 - cosTheta);
	return bilinearCubeUV(envMap, sampleDirection, mipInt);
}

void main() {
	vec3 axis = latitudinal ? poleAxis : cross(poleAxis, vOutputDirection);
	if (all(equal(axis, vec3(0.0))))
		axis = vec3(vOutputDirection.z, 0.0, - vOutputDirection.x);
	axis = normalize(axis);
	gl_FragColor = vec4(0.0);
	gl_FragColor.rgb += weights[0] * getSample(0.0, axis);
	for (int i = 1; i < n; i++) {
		if (i >= samples)
			break;
		float theta = dTheta * float(i);
		gl_FragColor.rgb += weights[i] * getSample(-1.0 * theta, axis);
		gl_FragColor.rgb += weights[i] * getSample(theta, axis);
	}
	gl_FragColor = linearToOutputTexel(gl_FragColor);
}
		`,blending:rr,depthTest:!1,depthWrite:!1});return i.type="SphericalGaussianBlur",i}function kw(){var t=new Me(1,1),e=new yr({uniforms:{envMap:{value:null},texelSize:{value:t},inputEncoding:{value:$i[On]},outputEncoding:{value:$i[On]}},vertexShader:qg(),fragmentShader:`
precision mediump float;
precision mediump int;
varying vec3 vOutputDirection;
uniform sampler2D envMap;
uniform vec2 texelSize;

${Yg()}

#define RECIPROCAL_PI 0.31830988618
#define RECIPROCAL_PI2 0.15915494

void main() {
	gl_FragColor = vec4(0.0);
	vec3 outputDirection = normalize(vOutputDirection);
	vec2 uv;
	uv.y = asin(clamp(outputDirection.y, -1.0, 1.0)) * RECIPROCAL_PI + 0.5;
	uv.x = atan(outputDirection.z, outputDirection.x) * RECIPROCAL_PI2 + 0.5;
	vec2 f = fract(uv / texelSize - 0.5);
	uv -= f * texelSize;
	vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
	uv.x += texelSize.x;
	vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
	uv.y += texelSize.y;
	vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
	uv.x -= texelSize.x;
	vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
	vec3 tm = mix(tl, tr, f.x);
	vec3 bm = mix(bl, br, f.x);
	gl_FragColor.rgb = mix(tm, bm, f.y);
	gl_FragColor = linearToOutputTexel(gl_FragColor);
}
		`,blending:rr,depthTest:!1,depthWrite:!1});return e.type="EquirectangularToCubeUV",e}function Ww(){var t=new yr({uniforms:{envMap:{value:null},inputEncoding:{value:$i[On]},outputEncoding:{value:$i[On]}},vertexShader:qg(),fragmentShader:`
precision mediump float;
precision mediump int;
varying vec3 vOutputDirection;
uniform samplerCube envMap;

${Yg()}

void main() {
	gl_FragColor = vec4(0.0);
	gl_FragColor.rgb = envMapTexelToLinear(textureCube(envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ))).rgb;
	gl_FragColor = linearToOutputTexel(gl_FragColor);
}
		`,blending:rr,depthTest:!1,depthWrite:!1});return t.type="CubemapToCubeUV",t}function qg(){return`
precision mediump float;
precision mediump int;
attribute vec3 position;
attribute vec2 uv;
attribute float faceIndex;
varying vec3 vOutputDirection;
vec3 getDirection(vec2 uv, float face) {
	uv = 2.0 * uv - 1.0;
	vec3 direction = vec3(uv, 1.0);
	if (face == 0.0) {
		direction = direction.zyx;
		direction.z *= -1.0;
	} else if (face == 1.0) {
		direction = direction.xzy;
		direction.z *= -1.0;
	} else if (face == 3.0) {
		direction = direction.zyx;
		direction.x *= -1.0;
	} else if (face == 4.0) {
		direction = direction.xzy;
		direction.y *= -1.0;
	} else if (face == 5.0) {
		direction.xz *= -1.0;
	}
	return direction;
}
void main() {
	vOutputDirection = getDirection(uv, faceIndex);
	gl_Position = vec4( position, 1.0 );
}
	`}function Yg(){return`
uniform int inputEncoding;
uniform int outputEncoding;

#include <encodings_pars_fragment>

vec4 inputTexelToLinear(vec4 value){
	if(inputEncoding == 0){
		return value;
	}else if(inputEncoding == 1){
		return sRGBToLinear(value);
	}else if(inputEncoding == 2){
		return RGBEToLinear(value);
	}else if(inputEncoding == 3){
		return RGBMToLinear(value, 7.0);
	}else if(inputEncoding == 4){
		return RGBMToLinear(value, 16.0);
	}else if(inputEncoding == 5){
		return RGBDToLinear(value, 256.0);
	}else{
		return GammaToLinear(value, 2.2);
	}
}

vec4 linearToOutputTexel(vec4 value){
	if(outputEncoding == 0){
		return value;
	}else if(outputEncoding == 1){
		return LinearTosRGB(value);
	}else if(outputEncoding == 2){
		return LinearToRGBE(value);
	}else if(outputEncoding == 3){
		return LinearToRGBM(value, 7.0);
	}else if(outputEncoding == 4){
		return LinearToRGBM(value, 16.0);
	}else if(outputEncoding == 5){
		return LinearToRGBD(value, 256.0);
	}else{
		return LinearToGamma(value, 2.2);
	}
}

vec4 envMapTexelToLinear(vec4 color) {
	return inputTexelToLinear(color);
}
	`}function RI(t,e,n,i,r,a,s){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new Mo(t,e,n,r,a,s)}var PI=0,DI=1,II=0,FI=1,BI=2;function OI(t){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),t}function NI(t){return t===void 0&&(t=[]),console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),t.isMultiMaterial=!0,t.materials=t,t.clone=function(){return t.slice()},t}function zI(t,e){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new Ho(t,e)}function UI(t){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new Nc(t)}function GI(t,e){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new Ho(t,e)}function HI(t){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new yi(t)}function VI(t){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new yi(t)}function kI(t){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new yi(t)}function WI(t,e,n){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new z(t,e,n)}function $I(t,e){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new Ke(t,e).setUsage(Ma)}function jI(t,e){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new Mc(t,e)}function XI(t,e){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new wc(t,e)}function qI(t,e){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new bc(t,e)}function YI(t,e){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new Sc(t,e)}function ZI(t,e){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new Ta(t,e)}function JI(t,e){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new Ec(t,e)}function KI(t,e){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new Aa(t,e)}function QI(t,e){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new ze(t,e)}function eF(t,e){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new Tc(t,e)}Ye.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(Ye.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t};Object.assign(xr.prototype,{createPointsGeometry:function(t){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");var e=this.getPoints(t);return this.createGeometry(e)},createSpacedPointsGeometry:function(t){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");var e=this.getSpacedPoints(t);return this.createGeometry(e)},createGeometry:function(t){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");for(var e=new Qe,n=0,i=t.length;n<i;n++){var r=t[n];e.vertices.push(new z(r.x,r.y,r.z||0))}return e}});Object.assign(Si.prototype,{fromPoints:function(t){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)}});function $w(t){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),_n.call(this,t),this.type="catmullrom",this.closed=!0}$w.prototype=Object.create(_n.prototype);function jw(t){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),_n.call(this,t),this.type="catmullrom"}jw.prototype=Object.create(_n.prototype);function Zg(t){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),_n.call(this,t),this.type="catmullrom"}Zg.prototype=Object.create(_n.prototype);Object.assign(Zg.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}});function tF(t){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new gh(t)}function nF(t,e){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new _r(t,e)}function iF(t,e){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new Nt(new el(t.geometry),new Bt({color:e!==void 0?e:16777215}))}Qf.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};ts.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};function rF(t,e){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new Nt(new ko(t.geometry),new Bt({color:e!==void 0?e:16777215}))}Object.assign(_t.prototype,{extractUrlBase:function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),xg.extractUrlBase(t)}});_t.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};function aF(t){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new oi(t)}function sF(t){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new Rf(t)}Object.assign(jf.prototype,{setTexturePath:function(t){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(t)}});Object.assign(Ug.prototype,{center:function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},size:function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)}});Object.assign(pi.prototype,{center:function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionSphere:function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},size:function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)}});Po.prototype.setFromMatrix=function(t){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(t)};Gg.prototype.center=function(t){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(t)};Object.assign(it,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(t){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),it.floorPowerOfTwo(t)},nextPowerOfTwo:function(t){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),it.ceilPowerOfTwo(t)}});Object.assign(yn.prototype,{flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},multiplyVector3:function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(t){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}});Object.assign(ct.prototype,{extractPosition:function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new z().setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector4:function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},crossVector:function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(t){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(t,e,n,i,r,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,i,n,r,a)}});mi.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)};Pn.prototype.multiplyVector3=function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)};Object.assign(Ea.prototype,{isIntersectionBox:function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionPlane:function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},isIntersectionSphere:function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)}});Object.assign(ln.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)},midpoint:function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)},normal:function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)},plane:function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)}});Object.assign(ln,{barycoordFromPoint:function(t,e,n,i,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),ln.getBarycoord(t,e,n,i,r)},normal:function(t,e,n,i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),ln.getNormal(t,e,n,i)}});Object.assign(na.prototype,{extractAllPoints:function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},extrude:function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new za(this,t)},makeGeometry:function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Ga(this,t)}});Object.assign(Me.prototype,{fromAttribute:function(t,e,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},distanceToManhattan:function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(z.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},getScaleFromMatrix:function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},getColumnFromMatrix:function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},applyProjection:function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},fromAttribute:function(t,e,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},distanceToManhattan:function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(Et.prototype,{fromAttribute:function(t,e,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(Qe.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")},applyMatrix:function(t){return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)}});Object.assign(Ge.prototype,{getChildByName:function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(t){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)}});Object.defineProperties(Ge.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});Object.assign(Ft.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}});Object.defineProperties(Ft.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),Q_},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});Object.defineProperties(zc.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}});Object.defineProperty(mf.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}});pf.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};Object.defineProperty(Ye.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(t){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=t}});Jt.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),e!==void 0&&(this.filmGauge=e),this.setFocalLength(t)};Object.defineProperties(Rt.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}});Object.defineProperties(Ke.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===Ma},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(Ma)}}});Object.assign(Ke.prototype,{setDynamic:function(t){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(t===!0?Ma:gc),this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}});Object.assign(ke.prototype,{addIndex:function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},addAttribute:function(t,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(e&&e.isBufferAttribute)&&!(e&&e.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(t,new Ke(arguments[1],arguments[2]))):t==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(t,e)},addDrawCall:function(t,e,n){n!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(t){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(t)},applyMatrix:function(t){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)}});Object.defineProperties(ke.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});Object.defineProperties(Ng.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(t){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=t}}});Object.defineProperties(mr.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===Ma},set:function(t){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(t)}}});Object.assign(mr.prototype,{setDynamic:function(t){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(t===!0?Ma:gc),this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}});Object.assign(Ui.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}});Object.defineProperties(Zf.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}});Object.defineProperties(Je.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Ve}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=t===om}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(t){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=t}}});Object.defineProperties(ta.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}});Object.defineProperties(Dn.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}});Object.assign(ng.prototype,{clearTarget:function(t,e,n,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,n,i)},animate:function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}});Object.defineProperties(ng.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(t){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=t===!0?Vu:On}}});Object.defineProperties(HM.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});function oF(t,e,n){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new Zr(t,n)}Object.defineProperties(kn.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}});Object.defineProperties(ol.prototype,{load:{value:function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");var e=this,n=new qf;return n.load(t,function(i){e.setBuffer(i)}),this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}});Pg.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()};Co.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)};var lF={merge:function(t,e,n){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");var i;e.isMesh&&(e.matrixAutoUpdate&&e.updateMatrix(),i=e.matrix,e=e.geometry),t.merge(e,i,n)},center:function(t){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),t.center()}};$r.crossOrigin=void 0;$r.loadTexture=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");var r=new Df;r.setCrossOrigin(this.crossOrigin);var a=r.load(t,n,void 0,i);return e&&(a.mapping=e),a};$r.loadTextureCube=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var r=new Pf;r.setCrossOrigin(this.crossOrigin);var a=r.load(t,n,void 0,i);return e&&(a.mapping=e),a};$r.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};$r.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};function cF(){console.error("THREE.CanvasRenderer has been removed")}function hF(){console.error("THREE.JSONLoader has been removed.")}var uF={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function fF(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:C0}}));var dF=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",ACESFilmicToneMapping:i_,AddEquation:ga,AddOperation:Q0,AdditiveBlending:lm,AlphaFormat:h_,AlwaysDepth:j0,AlwaysStencilFunc:rM,AmbientLight:Gf,AmbientLightProbe:Ag,AnimationClip:si,AnimationLoader:ug,AnimationMixer:Bg,AnimationObjectGroup:xw,AnimationUtils:Ut,ArcCurve:al,ArrayCamera:of,ArrowHelper:Mr,Audio:ol,AudioAnalyser:Pg,AudioContext:Eg,AudioListener:Cg,AudioLoader:qf,AxesHelper:gh,AxisHelper:tF,BackSide:nn,BasicDepthPacking:tM,BasicShadowMap:i2,BinaryTextureLoader:sF,Bone:rg,BooleanKeyframeTrack:Tf,BoundingBoxHelper:nF,Box2:Ug,Box3:pi,Box3Helper:ph,BoxBufferGeometry:Cc,BoxGeometry:Qm,BoxHelper:_r,BufferAttribute:Ke,BufferGeometry:ke,BufferGeometryLoader:$f,ByteType:r_,Cache:Za,Camera:Ni,CameraHelper:dh,CanvasRenderer:cF,CanvasTexture:Gc,CatmullRomCurve3:_n,CineonToneMapping:n_,CircleBufferGeometry:tl,CircleGeometry:oh,ClampToEdgeWrapping:Rn,Clock:Lg,ClosedSplineCurve3:$w,Color:Ve,ColorKeyframeTrack:Af,CompressedTexture:Vo,CompressedTextureLoader:fg,ConeBufferGeometry:sh,ConeGeometry:ah,CubeCamera:Co,CubeGeometry:Qm,CubeReflectionMapping:Bu,CubeRefractionMapping:Ou,CubeTexture:pr,CubeTextureLoader:Pf,CubeUVReflectionMapping:co,CubeUVRefractionMapping:zu,CubicBezierCurve:_i,CubicBezierCurve3:Hi,CubicInterpolant:Sf,CullFaceBack:am,CullFaceFront:P0,CullFaceFrontBack:e2,CullFaceNone:R0,Curve:Ye,CurvePath:xr,CustomBlending:I0,CylinderBufferGeometry:vr,CylinderGeometry:Va,Cylindrical:bw,DataTexture:Da,DataTexture2DArray:Do,DataTexture3D:Io,DataTextureLoader:Rf,DecrementStencilOp:p2,DecrementWrapStencilOp:g2,DefaultLoadingManager:cw,DepthFormat:va,DepthStencilFormat:uo,DepthTexture:Hc,DirectionalLight:Uf,DirectionalLightHelper:ul,DirectionalLightShadow:zf,DiscreteInterpolant:Ef,DodecahedronBufferGeometry:Xo,DodecahedronGeometry:Xc,DoubleSide:ic,DstAlphaFactor:G0,DstColorFactor:V0,DynamicBufferAttribute:$I,DynamicCopyUsage:R2,DynamicDrawUsage:Ma,DynamicReadUsage:A2,EdgesGeometry:el,EdgesHelper:iF,EllipseCurve:Yn,EqualDepth:q0,EqualStencilFunc:_2,EquirectangularReflectionMapping:mm,EquirectangularRefractionMapping:Nu,Euler:wa,EventDispatcher:Fi,ExtrudeBufferGeometry:Ui,ExtrudeGeometry:za,Face3:Mo,Face4:RI,FaceColors:FI,FileLoader:oi,FlatShading:om,Float32Attribute:QI,Float32BufferAttribute:ze,Float64Attribute:eF,Float64BufferAttribute:Tc,FloatType:ar,Fog:cf,FogExp2:lf,Font:bg,FontLoader:Sg,FrontFaceDirectionCCW:n2,FrontFaceDirectionCW:t2,FrontSide:oo,Frustum:Po,GammaEncoding:Lm,Geometry:Qe,GeometryUtils:lF,GreaterDepth:Z0,GreaterEqualDepth:Y0,GreaterEqualStencilFunc:S2,GreaterStencilFunc:w2,GridHelper:Qf,Group:Bo,HalfFloatType:fc,HemisphereLight:Ff,HemisphereLightHelper:hl,HemisphereLightProbe:Tg,IcosahedronBufferGeometry:jo,IcosahedronGeometry:jc,ImageBitmapLoader:Mg,ImageLoader:rl,ImageUtils:$r,ImmediateRenderObject:fh,IncrementStencilOp:d2,IncrementWrapStencilOp:m2,InstancedBufferAttribute:Wf,InstancedBufferGeometry:kf,InstancedInterleavedBuffer:Og,InstancedMesh:gf,Int16Attribute:YI,Int16BufferAttribute:Sc,Int32Attribute:JI,Int32BufferAttribute:Ec,Int8Attribute:jI,Int8BufferAttribute:Mc,IntType:s_,InterleavedBuffer:mr,InterleavedBufferAttribute:Ic,Interpolant:qn,InterpolateDiscrete:dc,InterpolateLinear:pc,InterpolateSmooth:Hu,InvertStencilOp:v2,JSONLoader:hF,KeepStencilOp:Wu,KeyframeTrack:fn,LOD:zc,LatheBufferGeometry:Qo,LatheGeometry:rh,Layers:ju,LensFlare:fF,LessDepth:X0,LessEqualDepth:Du,LessEqualStencilFunc:M2,LessStencilFunc:x2,Light:Rt,LightProbe:Ei,LightShadow:ki,Line:Xn,Line3:Gg,LineBasicMaterial:Bt,LineCurve:zn,LineCurve3:Mi,LineDashedMaterial:Ya,LineLoop:Mf,LinePieces:DI,LineSegments:Nt,LineStrip:PI,LinearEncoding:On,LinearFilter:rn,LinearInterpolant:lh,LinearMipMapLinearFilter:l2,LinearMipMapNearestFilter:o2,LinearMipmapLinearFilter:lc,LinearMipmapNearestFilter:vm,LinearToneMapping:Iu,Loader:_t,LoaderUtils:xg,LoadingManager:hg,LogLuvEncoding:eM,LoopOnce:Z_,LoopPingPong:K_,LoopRepeat:J_,LuminanceAlphaFormat:f_,LuminanceFormat:u_,MOUSE:K3,Material:Je,MaterialLoader:Vf,Math:it,MathUtils:it,Matrix3:yn,Matrix4:ct,MaxEquation:fm,Mesh:Ft,MeshBasicMaterial:ri,MeshDepthMaterial:Kr,MeshDistanceMaterial:Qr,MeshFaceMaterial:OI,MeshLambertMaterial:Xa,MeshMatcapMaterial:qa,MeshNormalMaterial:ja,MeshPhongMaterial:ta,MeshPhysicalMaterial:Wa,MeshStandardMaterial:Gi,MeshToonMaterial:$a,MinEquation:um,MirroredRepeatWrapping:oc,MixOperation:K0,MultiMaterial:NI,MultiplyBlending:hm,MultiplyOperation:rc,NearestFilter:$t,NearestMipMapLinearFilter:s2,NearestMipMapNearestFilter:a2,NearestMipmapLinearFilter:Gu,NearestMipmapNearestFilter:Uu,NeverDepth:$0,NeverStencilFunc:y2,NoBlending:rr,NoColors:II,NoToneMapping:ac,NormalBlending:lo,NotEqualDepth:J0,NotEqualStencilFunc:b2,NumberKeyframeTrack:nl,Object3D:Ge,ObjectLoader:jf,ObjectSpaceNormalMap:iM,OctahedronBufferGeometry:Ba,OctahedronGeometry:$c,OneFactor:N0,OneMinusDstAlphaFactor:H0,OneMinusDstColorFactor:k0,OneMinusSrcAlphaFactor:pm,OneMinusSrcColorFactor:U0,OrthographicCamera:sl,PCFShadowMap:sm,PCFSoftShadowMap:D0,PMREMGenerator:$g,ParametricBufferGeometry:Wo,ParametricGeometry:Vc,Particle:UI,ParticleBasicMaterial:VI,ParticleSystem:GI,ParticleSystemMaterial:kI,Path:Si,PerspectiveCamera:Jt,Plane:mi,PlaneBufferGeometry:Ia,PlaneGeometry:Rc,PlaneHelper:mh,PointCloud:zI,PointCloudMaterial:HI,PointLight:Nf,PointLightHelper:cl,Points:Ho,PointsMaterial:yi,PolarGridHelper:ed,PolyhedronBufferGeometry:Nn,PolyhedronGeometry:kc,PositionalAudio:Rg,PropertyBinding:Mn,PropertyMixer:Dg,QuadraticBezierCurve:wi,QuadraticBezierCurve3:Vi,Quaternion:Pn,QuaternionKeyframeTrack:ch,QuaternionLinearInterpolant:Lf,REVISION:C0,RGBADepthPacking:nM,RGBAFormat:ii,RGBAIntegerFormat:x_,RGBA_ASTC_10x10_Format:D_,RGBA_ASTC_10x5_Format:C_,RGBA_ASTC_10x6_Format:R_,RGBA_ASTC_10x8_Format:P_,RGBA_ASTC_12x10_Format:I_,RGBA_ASTC_12x12_Format:F_,RGBA_ASTC_4x4_Format:M_,RGBA_ASTC_5x4_Format:w_,RGBA_ASTC_5x5_Format:b_,RGBA_ASTC_6x5_Format:S_,RGBA_ASTC_6x6_Format:E_,RGBA_ASTC_8x5_Format:T_,RGBA_ASTC_8x6_Format:A_,RGBA_ASTC_8x8_Format:L_,RGBA_BPTC_Format:B_,RGBA_ETC2_EAC_Format:Am,RGBA_PVRTC_2BPPV1_Format:Em,RGBA_PVRTC_4BPPV1_Format:Sm,RGBA_S3TC_DXT1_Format:xm,RGBA_S3TC_DXT3_Format:_m,RGBA_S3TC_DXT5_Format:Mm,RGBDEncoding:Pm,RGBEEncoding:ku,RGBEFormat:d_,RGBFormat:sr,RGBIntegerFormat:y_,RGBM16Encoding:Rm,RGBM7Encoding:Cm,RGB_ETC1_Format:__,RGB_ETC2_Format:Tm,RGB_PVRTC_2BPPV1_Format:bm,RGB_PVRTC_4BPPV1_Format:wm,RGB_S3TC_DXT1_Format:ym,RGFormat:g_,RGIntegerFormat:v_,RawShaderMaterial:yr,Ray:Ea,Raycaster:Ng,RectAreaLight:Hf,RedFormat:p_,RedIntegerFormat:m_,ReinhardToneMapping:e_,RepeatWrapping:sc,ReplaceStencilOp:f2,ReverseSubtractEquation:B0,RingBufferGeometry:Ko,RingGeometry:ih,SRGB8_ALPHA8_ASTC_10x10_Format:X_,SRGB8_ALPHA8_ASTC_10x5_Format:W_,SRGB8_ALPHA8_ASTC_10x6_Format:$_,SRGB8_ALPHA8_ASTC_10x8_Format:j_,SRGB8_ALPHA8_ASTC_12x10_Format:q_,SRGB8_ALPHA8_ASTC_12x12_Format:Y_,SRGB8_ALPHA8_ASTC_4x4_Format:O_,SRGB8_ALPHA8_ASTC_5x4_Format:N_,SRGB8_ALPHA8_ASTC_5x5_Format:z_,SRGB8_ALPHA8_ASTC_6x5_Format:U_,SRGB8_ALPHA8_ASTC_6x6_Format:G_,SRGB8_ALPHA8_ASTC_8x5_Format:H_,SRGB8_ALPHA8_ASTC_8x6_Format:V_,SRGB8_ALPHA8_ASTC_8x8_Format:k_,Scene:lr,SceneUtils:uF,ShaderChunk:ht,ShaderLib:zi,ShaderMaterial:Dn,ShadowMaterial:ka,Shape:na,ShapeBufferGeometry:Ha,ShapeGeometry:Ga,ShapePath:wg,ShapeUtils:gr,ShortType:a_,Skeleton:mf,SkeletonHelper:ts,SkinnedMesh:pf,SmoothShading:r2,Sphere:hr,SphereBufferGeometry:Ua,SphereGeometry:nh,Spherical:ww,SphericalHarmonics3:Yf,SphericalReflectionMapping:gm,Spline:Zg,SplineCurve:bi,SplineCurve3:jw,SpotLight:Of,SpotLightHelper:ll,SpotLightShadow:Bf,Sprite:Nc,SpriteMaterial:ea,SrcAlphaFactor:dm,SrcAlphaSaturateFactor:W0,SrcColorFactor:z0,StaticCopyUsage:C2,StaticDrawUsage:gc,StaticReadUsage:T2,StereoCamera:mw,StreamCopyUsage:P2,StreamDrawUsage:E2,StreamReadUsage:L2,StringKeyframeTrack:Cf,SubtractEquation:F0,SubtractiveBlending:cm,TOUCH:Q3,TangentSpaceNormalMap:_a,TetrahedronBufferGeometry:$o,TetrahedronGeometry:Wc,TextBufferGeometry:Jo,TextGeometry:th,Texture:St,TextureLoader:Df,TorusBufferGeometry:Yo,TorusGeometry:Zc,TorusKnotBufferGeometry:qo,TorusKnotGeometry:Yc,Triangle:ln,TriangleFanDrawMode:h2,TriangleStripDrawMode:c2,TrianglesDrawMode:Q_,TubeBufferGeometry:Oa,TubeGeometry:qc,UVMapping:Fu,Uint16Attribute:ZI,Uint16BufferAttribute:Ta,Uint32Attribute:KI,Uint32BufferAttribute:Aa,Uint8Attribute:XI,Uint8BufferAttribute:wc,Uint8ClampedAttribute:qI,Uint8ClampedBufferAttribute:bc,Uncharted2ToneMapping:t_,Uniform:Zf,UniformsLib:Ue,UniformsUtils:yM,UnsignedByteType:cc,UnsignedInt248Type:ho,UnsignedIntType:uc,UnsignedShort4444Type:o_,UnsignedShort5551Type:l_,UnsignedShort565Type:c_,UnsignedShortType:hc,VSMShadowMap:so,Vector2:Me,Vector3:z,Vector4:Et,VectorKeyframeTrack:il,Vertex:WI,VertexColors:BI,VideoTexture:og,WebGLCubeRenderTarget:Zr,WebGLMultisampleRenderTarget:Dm,WebGLRenderTarget:kn,WebGLRenderTargetCube:oF,WebGLRenderer:ng,WebGLUtils:VM,WireframeGeometry:ko,WireframeHelper:rF,WrapAroundEnding:mc,XHRLoader:aF,ZeroCurvatureEnding:ya,ZeroFactor:O0,ZeroSlopeEnding:xa,ZeroStencilOp:u2,sRGBEncoding:Vu}),pF=J3(dF),mF=function(e,n){var i,r=!1,a=s,s={},o,l,c,h,u,f,d=new n.Vector3,p=new n.Vector3,m=new n.Matrix4,x=new n.Quaternion,g={WORLDREPORT:0,COLLISIONREPORT:1,VEHICLEREPORT:2,CONSTRAINTREPORT:3},v=14,b=5,_=9,M=6;return s.scripts={},o=function(){this._eventListeners={}},o.prototype.addEventListener=function(y,w){this._eventListeners.hasOwnProperty(y)||(this._eventListeners[y]=[]),this._eventListeners[y].push(w)},o.prototype.removeEventListener=function(y,w){var E;return this._eventListeners.hasOwnProperty(y)&&(E=this._eventListeners[y].indexOf(w))>=0?(this._eventListeners[y].splice(E,1),!0):!1},o.prototype.dispatchEvent=function(y){var w,E=Array.prototype.splice.call(arguments,1);if(this._eventListeners.hasOwnProperty(y))for(w=0;w<this._eventListeners[y].length;w++)this._eventListeners[y][w].apply(this,E)},o.make=function(y){y.prototype.addEventListener=o.prototype.addEventListener,y.prototype.removeEventListener=o.prototype.removeEventListener,y.prototype.dispatchEvent=o.prototype.dispatchEvent},l=function(){var y=1;return function(){return y++}}(),c=function(y,w){return m.identity(),m.identity().makeRotationFromQuaternion(w.quaternion),m.getInverse(m),d.copy(y),p.copy(w.position),d.sub(p).applyMatrix4(m)},s.noConflict=function(){return window.Physijs=a,s},s.createMaterial=function(y,w,E){var A=function(){};return A.prototype=y,A=new A,A._physijs={id:y.id,friction:w===void 0?.8:w,restitution:E===void 0?.2:E},A},s.PointConstraint=function(y,w,E){E===void 0&&(E=w,w=void 0),this.type="point",this.appliedImpulse=0,this.id=l(),this.objecta=y._physijs.id,this.positiona=c(E,y).clone(),w&&(this.objectb=w._physijs.id,this.positionb=c(E,w).clone())},s.PointConstraint.prototype.getDefinition=function(){return{type:this.type,id:this.id,objecta:this.objecta,objectb:this.objectb,positiona:this.positiona,positionb:this.positionb}},s.HingeConstraint=function(y,w,E,A){A===void 0&&(A=E,E=w,w=void 0),this.type="hinge",this.appliedImpulse=0,this.id=l(),this.scene=y.parent,this.objecta=y._physijs.id,this.positiona=c(E,y).clone(),this.position=E.clone(),this.axis=A,w&&(this.objectb=w._physijs.id,this.positionb=c(E,w).clone())},s.HingeConstraint.prototype.getDefinition=function(){return{type:this.type,id:this.id,objecta:this.objecta,objectb:this.objectb,positiona:this.positiona,positionb:this.positionb,axis:this.axis}},s.HingeConstraint.prototype.setLimits=function(y,w,E,A){this.scene.execute("hinge_setLimits",{constraint:this.id,low:y,high:w,bias_factor:E,relaxation_factor:A})},s.HingeConstraint.prototype.enableAngularMotor=function(y,w){this.scene.execute("hinge_enableAngularMotor",{constraint:this.id,velocity:y,acceleration:w})},s.HingeConstraint.prototype.disableMotor=function(y,w){this.scene.execute("hinge_disableMotor",{constraint:this.id})},s.SliderConstraint=function(y,w,E,A){A===void 0&&(A=E,E=w,w=void 0),this.type="slider",this.appliedImpulse=0,this.id=l(),this.scene=y.parent,this.objecta=y._physijs.id,this.positiona=c(E,y).clone(),this.axis=A,w&&(this.objectb=w._physijs.id,this.positionb=c(E,w).clone())},s.SliderConstraint.prototype.getDefinition=function(){return{type:this.type,id:this.id,objecta:this.objecta,objectb:this.objectb,positiona:this.positiona,positionb:this.positionb,axis:this.axis}},s.SliderConstraint.prototype.setLimits=function(y,w,E,A){this.scene.execute("slider_setLimits",{constraint:this.id,lin_lower:y,lin_upper:w,ang_lower:E,ang_upper:A})},s.SliderConstraint.prototype.setRestitution=function(y,w){this.scene.execute("slider_setRestitution",{constraint:this.id,linear:y,angular:w})},s.SliderConstraint.prototype.enableLinearMotor=function(y,w){this.scene.execute("slider_enableLinearMotor",{constraint:this.id,velocity:y,acceleration:w})},s.SliderConstraint.prototype.disableLinearMotor=function(){this.scene.execute("slider_disableLinearMotor",{constraint:this.id})},s.SliderConstraint.prototype.enableAngularMotor=function(y,w){this.scene.execute("slider_enableAngularMotor",{constraint:this.id,velocity:y,acceleration:w})},s.SliderConstraint.prototype.disableAngularMotor=function(){this.scene.execute("slider_disableAngularMotor",{constraint:this.id})},s.ConeTwistConstraint=function(y,w,E){if(E===void 0)throw"Both objects must be defined in a ConeTwistConstraint.";this.type="conetwist",this.appliedImpulse=0,this.id=l(),this.scene=y.parent,this.objecta=y._physijs.id,this.positiona=c(E,y).clone(),this.objectb=w._physijs.id,this.positionb=c(E,w).clone(),this.axisa={x:y.rotation.x,y:y.rotation.y,z:y.rotation.z},this.axisb={x:w.rotation.x,y:w.rotation.y,z:w.rotation.z}},s.ConeTwistConstraint.prototype.getDefinition=function(){return{type:this.type,id:this.id,objecta:this.objecta,objectb:this.objectb,positiona:this.positiona,positionb:this.positionb,axisa:this.axisa,axisb:this.axisb}},s.ConeTwistConstraint.prototype.setLimit=function(y,w,E){this.scene.execute("conetwist_setLimit",{constraint:this.id,x:y,y:w,z:E})},s.ConeTwistConstraint.prototype.enableMotor=function(){this.scene.execute("conetwist_enableMotor",{constraint:this.id})},s.ConeTwistConstraint.prototype.setMaxMotorImpulse=function(y){this.scene.execute("conetwist_setMaxMotorImpulse",{constraint:this.id,max_impulse:y})},s.ConeTwistConstraint.prototype.setMotorTarget=function(y){y instanceof n.Vector3?y=new n.Quaternion().setFromEuler(new n.Euler(y.x,y.y,y.z)):y instanceof n.Euler?y=new n.Quaternion().setFromEuler(y):y instanceof n.Matrix4&&(y=new n.Quaternion().setFromRotationMatrix(y)),this.scene.execute("conetwist_setMotorTarget",{constraint:this.id,x:y.x,y:y.y,z:y.z,w:y.w})},s.ConeTwistConstraint.prototype.disableMotor=function(){this.scene.execute("conetwist_disableMotor",{constraint:this.id})},s.DOFConstraint=function(y,w,E){E===void 0&&(E=w,w=void 0),this.type="dof",this.appliedImpulse=0,this.id=l(),this.scene=y.parent,this.objecta=y._physijs.id,this.positiona=c(E,y).clone(),this.axisa={x:y.rotation.x,y:y.rotation.y,z:y.rotation.z},w&&(this.objectb=w._physijs.id,this.positionb=c(E,w).clone(),this.axisb={x:w.rotation.x,y:w.rotation.y,z:w.rotation.z})},s.DOFConstraint.prototype.getDefinition=function(){return{type:this.type,id:this.id,objecta:this.objecta,objectb:this.objectb,positiona:this.positiona,positionb:this.positionb,axisa:this.axisa,axisb:this.axisb}},s.DOFConstraint.prototype.setLinearLowerLimit=function(y){this.scene.execute("dof_setLinearLowerLimit",{constraint:this.id,x:y.x,y:y.y,z:y.z})},s.DOFConstraint.prototype.setLinearUpperLimit=function(y){this.scene.execute("dof_setLinearUpperLimit",{constraint:this.id,x:y.x,y:y.y,z:y.z})},s.DOFConstraint.prototype.setAngularLowerLimit=function(y){this.scene.execute("dof_setAngularLowerLimit",{constraint:this.id,x:y.x,y:y.y,z:y.z})},s.DOFConstraint.prototype.setAngularUpperLimit=function(y){this.scene.execute("dof_setAngularUpperLimit",{constraint:this.id,x:y.x,y:y.y,z:y.z})},s.DOFConstraint.prototype.enableAngularMotor=function(y){this.scene.execute("dof_enableAngularMotor",{constraint:this.id,which:y})},s.DOFConstraint.prototype.configureAngularMotor=function(y,w,E,A,L){this.scene.execute("dof_configureAngularMotor",{constraint:this.id,which:y,low_angle:w,high_angle:E,velocity:A,max_force:L})},s.DOFConstraint.prototype.disableAngularMotor=function(y){this.scene.execute("dof_disableAngularMotor",{constraint:this.id,which:y})},s.Scene=function(y){var w=this;o.call(this),n.Scene.call(this),this._worker=new e,this._worker.transferableMessage=this._worker.webkitPostMessage||this._worker.postMessage,this._materials_ref_counts={},this._objects={},this._vehicles={},this._constraints={};var E=new ArrayBuffer(1);this._worker.transferableMessage(E,[E]),i=E.byteLength===0,this._worker.onmessage=function(A){var L,S=A.data;if(S instanceof ArrayBuffer&&S.byteLength!==1&&(S=new Float32Array(S)),S instanceof Float32Array)switch(S[0]){case g.WORLDREPORT:w._updateScene(S);break;case g.COLLISIONREPORT:w._updateCollisions(S);break;case g.VEHICLEREPORT:w._updateVehicles(S);break;case g.CONSTRAINTREPORT:w._updateConstraints(S);break}else if(S.cmd)switch(S.cmd){case"objectReady":L=S.params,w._objects[L]&&w._objects[L].dispatchEvent("ready");break;case"worldReady":w.dispatchEvent("ready");break;case"vehicle":window.test=S;break;default:console.debug("Received: "+S.cmd),console.dir(S.params);break}else switch(S[0]){case g.WORLDREPORT:w._updateScene(S);break;case g.COLLISIONREPORT:w._updateCollisions(S);break;case g.VEHICLEREPORT:w._updateVehicles(S);break;case g.CONSTRAINTREPORT:w._updateConstraints(S);break}},y=y||{},y.ammo=s.scripts.ammo||"ammo.js",y.fixedTimeStep=y.fixedTimeStep||1/60,y.rateLimit=y.rateLimit||!0,this.execute("init",y)},s.Scene.prototype=new n.Scene,s.Scene.prototype.constructor=s.Scene,o.make(s.Scene),s.Scene.prototype._updateScene=function(y){var w=y[1],E,A,L;for(A=0;A<w;A++)L=2+A*v,E=this._objects[y[L]],E!==void 0&&(E.__dirtyPosition===!1&&E.position.set(y[L+1],y[L+2],y[L+3]),E.__dirtyRotation===!1&&E.quaternion.set(y[L+4],y[L+5],y[L+6],y[L+7]),E._physijs.linearVelocity.set(y[L+8],y[L+9],y[L+10]),E._physijs.angularVelocity.set(y[L+11],y[L+12],y[L+13]));i&&this._worker.transferableMessage(y.buffer,[y.buffer]),r=!1,this.dispatchEvent("update")},s.Scene.prototype._updateVehicles=function(y){var w,E,A,L;for(A=0;A<(y.length-1)/_;A++)L=1+A*_,w=this._vehicles[y[L]],w!==void 0&&(E=w.wheels[y[L+1]],E.position.set(y[L+2],y[L+3],y[L+4]),E.quaternion.set(y[L+5],y[L+6],y[L+7],y[L+8]));i&&this._worker.transferableMessage(y.buffer,[y.buffer])},s.Scene.prototype._updateConstraints=function(y){var w,E,A,L;for(A=0;A<(y.length-1)/M;A++)L=1+A*M,w=this._constraints[y[L]],E=this._objects[y[L+1]],!(w===void 0||E===void 0)&&(d.set(y[L+2],y[L+3],y[L+4]),m.extractRotation(E.matrix),d.applyMatrix4(m),w.positiona.addVectors(E.position,d),w.appliedImpulse=y[L+5]);i&&this._worker.transferableMessage(y.buffer,[y.buffer])},s.Scene.prototype._updateCollisions=function(y){var w,E,A,L,S,R,D,I={},F={};for(w=0;w<y[1];w++)A=2+w*b,L=y[A],S=y[A+1],F[L+"-"+S]=A+2,F[S+"-"+L]=-1*(A+2),I[L]||(I[L]=[]),I[L].push(S),I[S]||(I[S]=[]),I[S].push(L);for(R in this._objects)if(!!this._objects.hasOwnProperty(R))if(L=this._objects[R],I[R]){for(E=0;E<L._physijs.touches.length;E++)I[R].indexOf(L._physijs.touches[E])===-1&&L._physijs.touches.splice(E--,1);for(E=0;E<I[R].length;E++)if(D=I[R][E],S=this._objects[D],S&&L._physijs.touches.indexOf(D)===-1){L._physijs.touches.push(D),d.subVectors(L.getLinearVelocity(),S.getLinearVelocity()),u=d.clone(),d.subVectors(L.getAngularVelocity(),S.getAngularVelocity()),f=d.clone();var U=F[L._physijs.id+"-"+S._physijs.id];U>0?d.set(-y[U],-y[U+1],-y[U+2]):(U*=-1,d.set(y[U],y[U+1],y[U+2])),L.dispatchEvent("collision",S,u,f,d)}}else L._physijs.touches.length=0;this.collisions=I,i&&this._worker.transferableMessage(y.buffer,[y.buffer])},s.Scene.prototype.addConstraint=function(y,w){if(this._constraints[y.id]=y,this.execute("addConstraint",y.getDefinition()),w){var E;switch(y.type){case"point":E=new n.Mesh(new n.SphereGeometry(1.5),new n.MeshNormalMaterial),E.position.copy(y.positiona),this._objects[y.objecta].add(E);break;case"hinge":E=new n.Mesh(new n.SphereGeometry(1.5),new n.MeshNormalMaterial),E.position.copy(y.positiona),this._objects[y.objecta].add(E);break;case"slider":E=new n.Mesh(new n.BoxGeometry(10,1,1),new n.MeshNormalMaterial),E.position.copy(y.positiona),E.rotation.set(y.axis.y,y.axis.x,y.axis.z),this._objects[y.objecta].add(E);break;case"conetwist":E=new n.Mesh(new n.SphereGeometry(1.5),new n.MeshNormalMaterial),E.position.copy(y.positiona),this._objects[y.objecta].add(E);break;case"dof":E=new n.Mesh(new n.SphereGeometry(1.5),new n.MeshNormalMaterial),E.position.copy(y.positiona),this._objects[y.objecta].add(E);break}}return y},s.Scene.prototype.onSimulationResume=function(){this.execute("onSimulationResume",{})},s.Scene.prototype.removeConstraint=function(y){this._constraints[y.id]!==void 0&&(this.execute("removeConstraint",{id:y.id}),delete this._constraints[y.id])},s.Scene.prototype.execute=function(y,w){this._worker.postMessage({cmd:y,params:w})},h=function(y,w){var E;for(E=0;E<w.children.length;E++)w.children[E]._physijs&&(w.children[E].updateMatrix(),w.children[E].updateMatrixWorld(),d.setFromMatrixPosition(w.children[E].matrixWorld),x.setFromRotationMatrix(w.children[E].matrixWorld),w.children[E]._physijs.position_offset={x:d.x,y:d.y,z:d.z},w.children[E]._physijs.rotation={x:x.x,y:x.y,z:x.z,w:x.w},y._physijs.children.push(w.children[E]._physijs)),h(y,w.children[E])},s.Scene.prototype.add=function(y){n.Mesh.prototype.add.call(this,y),y._physijs&&(y.world=this,y instanceof s.Vehicle?(this.add(y.mesh),this._vehicles[y._physijs.id]=y,this.execute("addVehicle",y._physijs)):(y.__dirtyPosition=!1,y.__dirtyRotation=!1,this._objects[y._physijs.id]=y,y.children.length&&(y._physijs.children=[],h(y,y)),y.material._physijs&&(this._materials_ref_counts.hasOwnProperty(y.material._physijs.id)?this._materials_ref_counts[y.material._physijs.id]++:(this.execute("registerMaterial",y.material._physijs),y._physijs.materialId=y.material._physijs.id,this._materials_ref_counts[y.material._physijs.id]=1)),y._physijs.position={x:y.position.x,y:y.position.y,z:y.position.z},y._physijs.rotation={x:y.quaternion.x,y:y.quaternion.y,z:y.quaternion.z,w:y.quaternion.w},new n.Vector3(1,1,1),y._physijs.width&&(y._physijs.width*=y.scale.x),y._physijs.height&&(y._physijs.height*=y.scale.y),y._physijs.depth&&(y._physijs.depth*=y.scale.z),this.execute("addObject",y._physijs)))},s.Scene.prototype.remove=function(y){if(y instanceof s.Vehicle){for(this.execute("removeVehicle",{id:y._physijs.id});y.wheels.length;)this.remove(y.wheels.pop());this.remove(y.mesh),delete this._vehicles[y._physijs.id]}else n.Mesh.prototype.remove.call(this,y),y._physijs&&(delete this._objects[y._physijs.id],this.execute("removeObject",{id:y._physijs.id}));y.material&&y.material._physijs&&this._materials_ref_counts.hasOwnProperty(y.material._physijs.id)&&(this._materials_ref_counts[y.material._physijs.id]--,this._materials_ref_counts[y.material._physijs.id]==0&&(this.execute("unRegisterMaterial",y.material._physijs),delete this._materials_ref_counts[y.material._physijs.id]))},s.Scene.prototype.setFixedTimeStep=function(y){y&&this.execute("setFixedTimeStep",y)},s.Scene.prototype.setGravity=function(y){y&&this.execute("setGravity",y)},s.Scene.prototype.simulate=function(y,w){var E,A,L;if(r)return!1;r=!0;for(E in this._objects)!this._objects.hasOwnProperty(E)||(A=this._objects[E],(A.__dirtyPosition||A.__dirtyRotation)&&(L={id:A._physijs.id},A.__dirtyPosition&&(L.pos={x:A.position.x,y:A.position.y,z:A.position.z},A.__dirtyPosition=!1),A.__dirtyRotation&&(L.quat={x:A.quaternion.x,y:A.quaternion.y,z:A.quaternion.z,w:A.quaternion.w},A.__dirtyRotation=!1),this.execute("updateTransform",L)));return this.execute("simulate",{timeStep:y,maxSubSteps:w}),!0},s.Mesh=function(y,w,E){!y||(o.call(this),n.Mesh.call(this,y,w),y.boundingBox||y.computeBoundingBox(),this._physijs={type:null,id:l(),mass:E||0,touches:[],linearVelocity:new n.Vector3,angularVelocity:new n.Vector3})},s.Mesh.prototype=new n.Mesh,s.Mesh.prototype.constructor=s.Mesh,o.make(s.Mesh),s.Mesh.prototype.__defineGetter__("mass",function(){return this._physijs.mass}),s.Mesh.prototype.__defineSetter__("mass",function(y){this._physijs.mass=y,this.world&&this.world.execute("updateMass",{id:this._physijs.id,mass:y})}),s.Mesh.prototype.applyCentralImpulse=function(y){this.world&&this.world.execute("applyCentralImpulse",{id:this._physijs.id,x:y.x,y:y.y,z:y.z})},s.Mesh.prototype.applyImpulse=function(y,w){this.world&&this.world.execute("applyImpulse",{id:this._physijs.id,impulse_x:y.x,impulse_y:y.y,impulse_z:y.z,x:w.x,y:w.y,z:w.z})},s.Mesh.prototype.applyTorque=function(y){this.world&&this.world.execute("applyTorque",{id:this._physijs.id,torque_x:y.x,torque_y:y.y,torque_z:y.z})},s.Mesh.prototype.applyCentralForce=function(y){this.world&&this.world.execute("applyCentralForce",{id:this._physijs.id,x:y.x,y:y.y,z:y.z})},s.Mesh.prototype.applyForce=function(y,w){this.world&&this.world.execute("applyForce",{id:this._physijs.id,force_x:y.x,force_y:y.y,force_z:y.z,x:w.x,y:w.y,z:w.z})},s.Mesh.prototype.getAngularVelocity=function(){return this._physijs.angularVelocity},s.Mesh.prototype.setAngularVelocity=function(y){this.world&&this.world.execute("setAngularVelocity",{id:this._physijs.id,x:y.x,y:y.y,z:y.z})},s.Mesh.prototype.getLinearVelocity=function(){return this._physijs.linearVelocity},s.Mesh.prototype.setLinearVelocity=function(y){this.world&&this.world.execute("setLinearVelocity",{id:this._physijs.id,x:y.x,y:y.y,z:y.z})},s.Mesh.prototype.setAngularFactor=function(y){this.world&&this.world.execute("setAngularFactor",{id:this._physijs.id,x:y.x,y:y.y,z:y.z})},s.Mesh.prototype.setLinearFactor=function(y){this.world&&this.world.execute("setLinearFactor",{id:this._physijs.id,x:y.x,y:y.y,z:y.z})},s.Mesh.prototype.setDamping=function(y,w){this.world&&this.world.execute("setDamping",{id:this._physijs.id,linear:y,angular:w})},s.Mesh.prototype.setCcdMotionThreshold=function(y){this.world&&this.world.execute("setCcdMotionThreshold",{id:this._physijs.id,threshold:y})},s.Mesh.prototype.setCcdSweptSphereRadius=function(y){this.world&&this.world.execute("setCcdSweptSphereRadius",{id:this._physijs.id,radius:y})},s.PlaneMesh=function(y,w,E){var A,L;s.Mesh.call(this,y,w,E),y.boundingBox||y.computeBoundingBox(),A=y.boundingBox.max.x-y.boundingBox.min.x,L=y.boundingBox.max.y-y.boundingBox.min.y,this._physijs.type="plane",this._physijs.normal=y.faces[0].normal.clone(),this._physijs.mass=typeof E=="undefined"?A*L:E},s.PlaneMesh.prototype=new s.Mesh,s.PlaneMesh.prototype.constructor=s.PlaneMesh,s.HeightfieldMesh=function(y,w,E,A,L){s.Mesh.call(this,y,w,E),this._physijs.type="heightfield",this._physijs.xsize=y.boundingBox.max.x-y.boundingBox.min.x,this._physijs.ysize=y.boundingBox.max.y-y.boundingBox.min.y,this._physijs.xpts=typeof A=="undefined"?Math.sqrt(y.vertices.length):A+1,this._physijs.ypts=typeof L=="undefined"?Math.sqrt(y.vertices.length):L+1,this._physijs.absMaxHeight=Math.max(y.boundingBox.max.z,Math.abs(y.boundingBox.min.z));for(var S=[],R,D,I=0;I<y.vertices.length;I++)R=I%this._physijs.xpts,D=Math.round(I/this._physijs.xpts-I%this._physijs.xpts/this._physijs.xpts),S[I]=y.vertices[R+(this._physijs.ypts-D-1)*this._physijs.ypts].z;this._physijs.points=S},s.HeightfieldMesh.prototype=new s.Mesh,s.HeightfieldMesh.prototype.constructor=s.HeightfieldMesh,s.BoxMesh=function(y,w,E){var A,L,S;s.Mesh.call(this,y,w,E),y.boundingBox||y.computeBoundingBox(),A=y.boundingBox.max.x-y.boundingBox.min.x,L=y.boundingBox.max.y-y.boundingBox.min.y,S=y.boundingBox.max.z-y.boundingBox.min.z,this._physijs.type="box",this._physijs.width=A,this._physijs.height=L,this._physijs.depth=S,this._physijs.mass=typeof E=="undefined"?A*L*S:E},s.BoxMesh.prototype=new s.Mesh,s.BoxMesh.prototype.constructor=s.BoxMesh,s.SphereMesh=function(y,w,E){s.Mesh.call(this,y,w,E),y.boundingSphere||y.computeBoundingSphere(),this._physijs.type="sphere",this._physijs.radius=y.boundingSphere.radius,this._physijs.mass=typeof E=="undefined"?4/3*Math.PI*Math.pow(this._physijs.radius,3):E},s.SphereMesh.prototype=new s.Mesh,s.SphereMesh.prototype.constructor=s.SphereMesh,s.CylinderMesh=function(y,w,E){var A,L,S;s.Mesh.call(this,y,w,E),y.boundingBox||y.computeBoundingBox(),A=y.boundingBox.max.x-y.boundingBox.min.x,L=y.boundingBox.max.y-y.boundingBox.min.y,S=y.boundingBox.max.z-y.boundingBox.min.z,this._physijs.type="cylinder",this._physijs.width=A,this._physijs.height=L,this._physijs.depth=S,this._physijs.mass=typeof E=="undefined"?A*L*S:E},s.CylinderMesh.prototype=new s.Mesh,s.CylinderMesh.prototype.constructor=s.CylinderMesh,s.CapsuleMesh=function(y,w,E){var A,L,S;s.Mesh.call(this,y,w,E),y.boundingBox||y.computeBoundingBox(),A=y.boundingBox.max.x-y.boundingBox.min.x,L=y.boundingBox.max.y-y.boundingBox.min.y,S=y.boundingBox.max.z-y.boundingBox.min.z,this._physijs.type="capsule",this._physijs.radius=Math.max(A/2,S/2),this._physijs.height=L,this._physijs.mass=typeof E=="undefined"?A*L*S:E},s.CapsuleMesh.prototype=new s.Mesh,s.CapsuleMesh.prototype.constructor=s.CapsuleMesh,s.ConeMesh=function(y,w,E){var A,L;s.Mesh.call(this,y,w,E),y.boundingBox||y.computeBoundingBox(),A=y.boundingBox.max.x-y.boundingBox.min.x,L=y.boundingBox.max.y-y.boundingBox.min.y,this._physijs.type="cone",this._physijs.radius=A/2,this._physijs.height=L,this._physijs.mass=typeof E=="undefined"?A*L:E},s.ConeMesh.prototype=new s.Mesh,s.ConeMesh.prototype.constructor=s.ConeMesh,s.ConcaveMesh=function(y,w,E){var A,L,S,R,D,I,F=[];for(s.Mesh.call(this,y,w,E),y.boundingBox||y.computeBoundingBox(),D=y.vertices,A=0;A<y.faces.length;A++)I=y.faces[A],I instanceof n.Face3?F.push([{x:D[I.a].x,y:D[I.a].y,z:D[I.a].z},{x:D[I.b].x,y:D[I.b].y,z:D[I.b].z},{x:D[I.c].x,y:D[I.c].y,z:D[I.c].z}]):I instanceof n.Face4&&(F.push([{x:D[I.a].x,y:D[I.a].y,z:D[I.a].z},{x:D[I.b].x,y:D[I.b].y,z:D[I.b].z},{x:D[I.d].x,y:D[I.d].y,z:D[I.d].z}]),F.push([{x:D[I.b].x,y:D[I.b].y,z:D[I.b].z},{x:D[I.c].x,y:D[I.c].y,z:D[I.c].z},{x:D[I.d].x,y:D[I.d].y,z:D[I.d].z}]));L=y.boundingBox.max.x-y.boundingBox.min.x,S=y.boundingBox.max.y-y.boundingBox.min.y,R=y.boundingBox.max.z-y.boundingBox.min.z,this._physijs.type="concave",this._physijs.triangles=F,this._physijs.mass=typeof E=="undefined"?L*S*R:E},s.ConcaveMesh.prototype=new s.Mesh,s.ConcaveMesh.prototype.constructor=s.ConcaveMesh,s.ConvexMesh=function(y,w,E){var A,L,S,R,D=[];for(s.Mesh.call(this,y,w,E),y.boundingBox||y.computeBoundingBox(),A=0;A<y.vertices.length;A++)D.push({x:y.vertices[A].x,y:y.vertices[A].y,z:y.vertices[A].z});L=y.boundingBox.max.x-y.boundingBox.min.x,S=y.boundingBox.max.y-y.boundingBox.min.y,R=y.boundingBox.max.z-y.boundingBox.min.z,this._physijs.type="convex",this._physijs.points=D,this._physijs.mass=typeof E=="undefined"?L*S*R:E},s.ConvexMesh.prototype=new s.Mesh,s.ConvexMesh.prototype.constructor=s.ConvexMesh,s.Vehicle=function(y,w){w=w||new s.VehicleTuning,this.mesh=y,this.wheels=[],this._physijs={id:l(),rigidBody:y._physijs.id,suspension_stiffness:w.suspension_stiffness,suspension_compression:w.suspension_compression,suspension_damping:w.suspension_damping,max_suspension_travel:w.max_suspension_travel,friction_slip:w.friction_slip,max_suspension_force:w.max_suspension_force}},s.Vehicle.prototype.addWheel=function(y,w,E,A,L,S,R,D,I){var F=new n.Mesh(y,w);F.castShadow=F.receiveShadow=!0,F.position.copy(A).multiplyScalar(S/100).add(E),this.world.add(F),this.wheels.push(F),this.world.execute("addWheel",{id:this._physijs.id,connection_point:{x:E.x,y:E.y,z:E.z},wheel_direction:{x:A.x,y:A.y,z:A.z},wheel_axle:{x:L.x,y:L.y,z:L.z},suspension_rest_length:S,wheel_radius:R,is_front_wheel:D,tuning:I})},s.Vehicle.prototype.setSteering=function(y,w){if(w!==void 0&&this.wheels[w]!==void 0)this.world.execute("setSteering",{id:this._physijs.id,wheel:w,steering:y});else if(this.wheels.length>0)for(var E=0;E<this.wheels.length;E++)this.world.execute("setSteering",{id:this._physijs.id,wheel:E,steering:y})},s.Vehicle.prototype.setBrake=function(y,w){if(w!==void 0&&this.wheels[w]!==void 0)this.world.execute("setBrake",{id:this._physijs.id,wheel:w,brake:y});else if(this.wheels.length>0)for(var E=0;E<this.wheels.length;E++)this.world.execute("setBrake",{id:this._physijs.id,wheel:E,brake:y})},s.Vehicle.prototype.applyEngineForce=function(y,w){if(w!==void 0&&this.wheels[w]!==void 0)this.world.execute("applyEngineForce",{id:this._physijs.id,wheel:w,force:y});else if(this.wheels.length>0)for(var E=0;E<this.wheels.length;E++)this.world.execute("applyEngineForce",{id:this._physijs.id,wheel:E,force:y})},s.VehicleTuning=function(y,w,E,A,L,S){this.suspension_stiffness=y!==void 0?y:5.88,this.suspension_compression=w!==void 0?w:.83,this.suspension_damping=E!==void 0?E:.88,this.max_suspension_travel=A!==void 0?A:500,this.friction_slip=L!==void 0?L:10.5,this.max_suspension_force=S!==void 0?S:6e3},s},gF=Xw,vF=pF;mF(gF,vF);export{Rx as A,Rl as B,HL as C,Cx as D,xF as F,UL as L,Tn as M,_F as O,Zw as P,qt as Q,By as S,k as V,bt as W,An as a,ep as b,px as c,kd as d,l3 as e,ci as f,Ub as g,Mt as s};
